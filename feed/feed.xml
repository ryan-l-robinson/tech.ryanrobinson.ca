<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Ryan Robinson Technology</title>
	<subtitle></subtitle>
	<link href="" rel="self"/>
	<link href="https://tech.ryanrobinson.ca/"/>
	<updated>2024-04-08T17:10:28Z</updated>
	<id></id>
	<author>
		<name>Ryan Robinson</name>
		<email></email>
	</author>
	
	<entry>
		<title>Microsoft Viva Topics: Configuration</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-02-24-viva-topics-configuration/"/>
		<updated>2021-02-24T00:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-02-24-viva-topics-configuration/</id>
		<content type="html">&lt;p&gt;Microsoft recently launched &lt;a href=&quot;https://www.microsoft.com/en-us/microsoft-viva&quot;&gt;their new Viva platform&lt;/a&gt;. Nothing about the announcement was radically new – everything had at least been previewed – but the new Viva branding helps tie them together with the shared goal of improving the employee experience.&lt;/p&gt;
&lt;p&gt;The most interesting component for me is one piece that did launch that day: Topics. In this post and the next I’ll break down my first impressions from some simple tests.&lt;/p&gt;
&lt;h2 id=&quot;configuring&quot; tabindex=&quot;-1&quot;&gt;Configuring &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-24-viva-topics-configuration/#configuring&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The announcement blogs about Viva Topics did not make it clear how to get started. It also isn’t obvious; unlike some of the larger workloads in Microsoft 365, there is no new Viva Admin Centre. &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-365/knowledge/set-up-topic-experiences&quot;&gt;Fortunately it is clear in documentation elsewhere&lt;/a&gt; where to get started in the main Admin Centre.&lt;/p&gt;
&lt;p&gt;Once you find the process, it’s straightforward with some useful options, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SharePoint sites&lt;/strong&gt;: you can specify to look for topics on all sites, all sites except those specified, only those specified, or not at all. In most cases, all sites will make the most sense. Don’t worry about permissions as it already utilizes the Microsoft Graph to make sure that nobody sees content they shouldn’t.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exclude topics&lt;/strong&gt;: if you know some topics that you don’t want in advance, you can upload a csv file with those. You’ll always have manual control over topics, though, before they get published. If you just let it find everything it can and then remove them from there, that’s also fine.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Who can see topics:&lt;/strong&gt; you can allow the topics functionality for all users, only selected users, or nobody. This feels like a redundant setting to me as there is also an extra license needed to see topics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Who can manage topics&lt;/strong&gt;: you can allow editing topics as well as adding new topics to different permission groups. You can leave this open for everybody, but in this case most larger organizations will want to restrict it to a handful of dedicated admins determined by a security group.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Topic centre&lt;/strong&gt;: name and pick the URL for your new topic centre, a special SharePoint site. You may want this to be generic like “Topic Centre” or you may want something more specific if you are going to use it for a more precise purpose like a client listing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you’ve picked all the desired settings, confirm that you’re ready and the features will be enabled. Note that it took an hour or two after completing this setup before the topic centre was ready for my use. That makes sense, but it doesn’t warn about that delay; if you are confused why it doesn’t seem to be working right away, you likely just need to wait.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/02/topics-config-screen.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Topics configuration settings, after the initial wizard&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-topic-centre&quot; tabindex=&quot;-1&quot;&gt;The Topic Centre &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-24-viva-topics-configuration/#the-topic-centre&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Topic Centre which is created after the setup process above looks like a typical SharePoint site, but with some specific page types. The homepage shows topics related to you. The Manage Topics page is the core feature for administering topics on an ongoing basis. This page shows all of your organization’s topics, broken down by the stage of approval:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Suggested&lt;/strong&gt;: topics found by the automatic search for you to review. The question to move from this stage is whether you do want that to appear as a topic across your organization. If not, you can remove it. If yes, you can confirm it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confirmed&lt;/strong&gt;: topics which have been confirmed as a real topic of interest for your organization. For items here, take the time to view the page and make some manual edits to the topic before publishing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Published&lt;/strong&gt;: topics that are active within your organization and can be seen by typical users with the appropriate license and settings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Removed&lt;/strong&gt;: topics that have been removed from your organization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/02/topic-manager.png&quot; alt=&quot;Sample of topic centre&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This is the hub for your Topics admins to keep things organized. I found it clean and intuitive to use. I imagine in large organizations that there will need to be somebody regularly checking in on the generated topics and keeping things organized, but the tool to do that is straightforward enough that the technology won’t get in the way.&lt;/p&gt;
&lt;p&gt;Overall, it’s off to a great start. In the next post, I’ll talk about what this looks like for typical users seeing the topics within their workflows.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>MS-101 Prep: How I&amp;#8217;m Studying</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-02-25-ms-101-prep-how-im-studying/"/>
		<updated>2021-02-25T15:30:56Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-02-25-ms-101-prep-how-im-studying/</id>
		<content type="html">&lt;p&gt;Over the last few months, I’ve been working on preparing for &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/exams/ms-101&quot;&gt;the MS-101 exam&lt;/a&gt;. This exam covers a few topics around enterprise device management and security. I’ve mostly been studying with a few methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;https://www.measureup.com/ms-101-microsoft-365-mobility-and-security.html&quot;&gt;official practice test from MeasureUp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reading the learning paths from Microsoft&lt;/li&gt;
&lt;li&gt;Reading &lt;a href=&quot;https://www.packtpub.com/product/microsoft-365-mobility-and-security-exam-guide-ms-101/9781838984656&quot;&gt;a prep booklet from Nate Chamberlain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trying as much as I can in my personal tenant with license trials, or a dev tenant, but some things can be hard to test out without significant amounts of real data and users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m adding another piece: writing about it. One of the best ways to learn something is to try to explain to somebody else in your own words. So with that, I’m starting a new series on what I’m learning as I study for the MS-101.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Viva Topics: User Experience</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/"/>
		<updated>2021-02-25T16:12:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/</id>
		<content type="html">&lt;p&gt;In &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/sharepoint/viva-topics-configuration/&quot;&gt;my previous post&lt;/a&gt;, I walked through my thoughts on the configuration process for the new Microsoft Viva Topics functionality within Microsoft 365. In this post I’ll dive into what the experience is like for users once it is configured.&lt;/p&gt;
&lt;h2 id=&quot;creating-editing-a-topic&quot; tabindex=&quot;-1&quot;&gt;Creating / Editing a Topic &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/#creating-editing-a-topic&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can edit a topic page similar to editing any other SharePoint page, but there is a lot less flexibility. It has a predefined set of features and you cannot add other web parts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Alternate names&lt;/strong&gt;: this allows for the topic being surfaced for alternate names, not just the core title. A suggestion here is to add any acronyms for the topic that you’re likely to use in normal conversation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Short description&lt;/strong&gt;: a bit of text to summarize the topic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pinned people&lt;/strong&gt;: identify users in the organization who are relevant to the topic, with a title for how they are related, such as “topic expert.”&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pinned files and pages&lt;/strong&gt;: if there are files and pages on other SharePoint sites that are particularly important to this topic, you can pin them here for easy access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Related sites&lt;/strong&gt;: similar idea, but for SharePoint sites.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Related topics&lt;/strong&gt;: links to other topics, visualized in a way to help you see how all your topics connect to each other.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/02/topic-page.png&quot; alt=&quot;&amp;quot;Image of the topic page&amp;quot;&quot; /&gt;
&lt;em&gt;Demo of the top portion of a topic page&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;surfacing-topics&quot; tabindex=&quot;-1&quot;&gt;Surfacing Topics &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/#surfacing-topics&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Currently the surfacing of topics for users is limited to only SharePoint pages. When you hover over the linked topic title, you see a hover card very similar to what you see when a person is referenced.&lt;/p&gt;
&lt;p&gt;This should expand over time to also show up in other Microsoft 365 resources, such as in emails and Teams conversations. It’s moderately useful now, but once it also starts showing up in this more organic contexts for conversation, that will be a huge additional value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/02/topic-card.png&quot; alt=&quot;&amp;quot;Image of a topic card appearing throughout Microsoft 365&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;use-cases&quot; tabindex=&quot;-1&quot;&gt;Use Cases &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/#use-cases&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A few scenarios come to mind where this topic functionality could be great.&lt;/p&gt;
&lt;p&gt;If you are a client-oriented business, you could use a topic as a landing page for each client. Alternate names could be acronyms or shortened versions of the client’s name. Pinned people could be an account manager or project manager who often works with the client. Related files may be the most important files for the client, such as a contract, and related sites may be other SharePoint sites in your system that contain data like a project’s files.&lt;/p&gt;
&lt;p&gt;A product or service oriented business could be similar, with a topic card for your major products. Pinned people would be the experts on that product.&lt;/p&gt;
&lt;p&gt;Internal documentation would also work as topics. The detailed steps would need to be files that are held elsewhere, but they can be linked from the topic card. For example, if you offer Drupal website consulting, you may have detailed documentation on the SharePoint site for the team responsible for Drupal website consulting. Then you create a Drupal topic card, which has links out to the detailed documentation.&lt;/p&gt;
&lt;p&gt;In all of these scenarios, there is clear value to being in the middle of a SharePoint page (or later, a conversation) where a topic is referenced and you are able to quickly get to more information about that topic through a pop-up card.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-02-25-viva-topics-experience/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Note that my tests are missing one of the most compelling aspects of Viva Topics: the automatic creation and updating of topics pages. My tenant consisting of just me doesn’t have nearly the scale to easily manufacture that test. All of my tests relied on manually creating topic pages.&lt;/p&gt;
&lt;p&gt;With that gap in testing acknowledged, even if the automatic component isn’t as strong as promised, I really like Viva Topics. The idea of being able to surface important topics in other places through Microsoft 365 promises a pleasant user experience that saves a lot of time in accessing important information.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Ignite News Day</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/"/>
		<updated>2021-03-02T22:14:47Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/</id>
		<content type="html">&lt;p&gt;Today was the first day of the spring edition of Microsoft Ignite, the primary conference for Microsoft IT professionals. The first day always includes a lot of news for upcoming features which tend to get dumped all at once the same time as the opening keynote. After reviewing several of these news blogs and watching video sessions most of the day, here are the features which stand out to me. I will not cover nearly everything, but provided some links for more details.&lt;/p&gt;
&lt;h2 id=&quot;microsoft-mesh&quot; tabindex=&quot;-1&quot;&gt;Microsoft Mesh &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#microsoft-mesh&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This was the key product in the opening keynote. Many of us have now spent most of a year straight only communicating with our coworkers through screens. Together Mode in Teams certainly helped as it showed everybody together – it’s less cognitive load and does make it feel just a little bit like you’re together – but it’s still staring at a flat screen. But what if instead we all entered a shared virtual reality or augmented reality space, where we could still access our shared resources like files from our Microsoft 365? That would be a significant improvement to the meeting from home experience. &lt;a href=&quot;https://www.cnet.com/news/microsoft-mesh-will-teleport-you-in-ar-and-vr-to-play-with-others-across-lots-of-devices/&quot;&gt;Microsoft Mesh promises that kind of future&lt;/a&gt;.&lt;/p&gt;
&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; loading=&quot;lazy&quot; src=&quot;https://www.youtube.com/embed/Jd2GK0qDtRg?feature=oembed&quot; title=&quot;Introducing Microsoft Mesh&quot;&gt;&lt;/iframe&gt;Mesh is a platform, not a specific product at this point. It allows developers to create applications where we can share holograms and appear as avatars speaking to each other. They didn’t promise any particular implementation of this technology, but along with the meeting idea they did also have some fun like playing Pokemon Go in the park with your HoloLens headset on.
&lt;h2 id=&quot;microsoft-teams&quot; tabindex=&quot;-1&quot;&gt;Microsoft Teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#microsoft-teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-teams-blog/what-s-new-in-microsoft-teams-microsoft-ignite-2021/ba-p/2118226&quot;&gt;Teams had several feature announcements&lt;/a&gt;, as it often does.&lt;/p&gt;
&lt;p&gt;Within meetings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamic view&lt;/strong&gt;: this has been shown before but the flexibility will make larger meetings more pleasant and easier to focus on what you need.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Encryption&lt;/strong&gt;: end-to-end encryption on 1:1 video calls. That means your company or Microsoft couldn’t see your calls even if they tried.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Presenter mode&lt;/strong&gt;: when presenting a PowerPoint, you can choose whether to keep your own overlaid on top of the presentation. That will make it a lot easier for viewers to still see you, helping with things like joke delivery which I have found can be quite awkward in one-directional virtual presentations.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;![](/assets/img/2021/03/dynamic-view.gif)&lt;figcaption&gt;Dynamic view demo, from the Teams announcement blog.&lt;/figcaption&gt;&lt;/figure&gt;There are also new webinar capabilities to allow for public registration to an event, email reminders going out to those attendees, and moderation tools.
&lt;p&gt;Teams Connect allows for sharing Teams channels with other organizations. I’ll need to see exactly how this works, but it was high on the list of improvements many wanted to improve interaction with clients and partner organizations.&lt;/p&gt;
&lt;p&gt;Multi-geo support will allow for different Teams data to be housed in different regions, helping meet data residency requirements for large organizations with offices in different countries.&lt;/p&gt;
&lt;p&gt;Endpoint transfer on calls will allow you to transfer a call seamlessly from one device to another. Get a call at your desk but need to finish on your phone as you leave the office? No problem, and the others on the call won’t notice.&lt;/p&gt;
&lt;h2 id=&quot;planner&quot; tabindex=&quot;-1&quot;&gt;Planner &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#planner&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/planner-blog/add-up-to-25-embedded-editable-labels-to-your-tasks/ba-p/2174399&quot;&gt;Planner now supports up to 25 labels&lt;/a&gt;, a big jump from the previous 5. This is helpful to better organize your tasks.&lt;/p&gt;
&lt;h2 id=&quot;power-platform&quot; tabindex=&quot;-1&quot;&gt;Power Platform &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#power-platform&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are two big announcements for Power Platform that stood out to me.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://flow.microsoft.com/en-us/blog/automate-tasks-with-power-automate-desktop-for-windows-10-no-additional-cost/&quot;&gt;Power Automate Desktop&lt;/a&gt; is now free to any Windows 10 users. Previously this required a separate license. This allows you to automate all kinds of things you do on your computer, not just cloud services. If you find yourself doing some repetitive tasks, check this out as a possible way to save yourself that time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://powerapps.microsoft.com/en-us/blog/what-is-microsoft-power-fx/&quot;&gt;Power Fx &lt;/a&gt;was first hinted at a week or two ago, but it is the simple programming language inspired by Excel formulas and now being deployed throughout the Power Platform. That’s going to add a lot of programming potential with syntax that a lot of people are already familiar with from Excel.&lt;/p&gt;
&lt;h2 id=&quot;sharepoint-syntex&quot; tabindex=&quot;-1&quot;&gt;SharePoint Syntex &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#sharepoint-syntex&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;SharePoint Syntex is a relatively new tool for automating classification and data extraction from files. &lt;a href=&quot;https://techcommunity.microsoft.com/t5/sharepoint-syntex/learn-more-about-the-future-of-sharepoint-syntex-at-microsoft/ba-p/2178173&quot;&gt;A few new features include&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A find function&lt;/strong&gt;: when you’re training your identification model, this will make your life a lot easier to jump to the relevant data you&#39;re trying to tell the model to pay attention to, rather than having to scroll through long documents. It’s a little addition that can add up to a lot of time saved.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Retention labels&lt;/strong&gt;: automatically applied when the content type is identified&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SharePoint hubs&lt;/strong&gt;: content types can now be assigned to SharePoint hubs. This will allow for changes to content types to roll out much faster to sites within the hub. The delay to roll out was always one of the more annoying factors when using content types, so this should help significantly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;project-origin&quot; tabindex=&quot;-1&quot;&gt;Project Origin &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-02-microsoft-ignite-news-day/#project-origin&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This one is outside of the Microsoft 365 space but was still a good sign to me. &lt;a href=&quot;https://innovation.microsoft.com/en-us/project-origin&quot;&gt;Microsoft is partnering with some other companies to combat online misinformation through tools like identifying deepfakes&lt;/a&gt;. Misinformation on social media is one of the largest problems facing our world at the moment, so it’s promising to see that Microsoft is trying to help.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Security Essentials: Password Manager</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-password-manager/"/>
		<updated>2021-03-07T18:58:14Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-password-manager/</id>
		<content type="html">&lt;p&gt;I typically have two main pieces of advice for basic information security that anybody can and should do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use multi-factor authentication everywhere it is offered&lt;/li&gt;
&lt;li&gt;Use a password manager to generate good passwords, remember them, and make your life easier with auto-fill&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://ryanlrobinson.wordpress.com/2021/03/07/security-essentials-multi-factor-authentication/&quot;&gt;My previous post dealt with multi-factor authentication&lt;/a&gt;. This post will look at password managers.&lt;/p&gt;
&lt;h2 id=&quot;passwords-are-the-worst&quot; tabindex=&quot;-1&quot;&gt;Passwords are the worst &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-password-manager/#passwords-are-the-worst&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Why do you need a password manager? The short answer: passwords are the worst, but with a few exceptions, we still need them for everything. There are a few problems with passwords:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need too many of them, so most people start reusing the same few passwords across multiple services. This opens a big security vulnerability: if the password for one service gets leaked, attackers will try the same username / password across lots of other services and get in to them all.&lt;/li&gt;
&lt;li&gt;It’s hard to think of a good one that is both sufficiently random to keep attackers from guessing it and memorable enough that you won’t forget it when you need it again a year later. This leads to people making simple passwords like “password” or again using the same one across multiple services.&lt;/li&gt;
&lt;li&gt;They’re annoying to type if you have all the random characters and symbols that are often recommended or required, especially in situations like a media app on a TV where you don’t get a full physical keyboard.&lt;/li&gt;
&lt;li&gt;These problems are all amplified if you share the account with other people, like your Netflix account that the entire family needs to access.&lt;/li&gt;
&lt;li&gt;They are a thin line of defense if they are the only thing keeping somebody out of your account. Even if the password is great, that’s still only one thing that anybody from anywhere could guess and break in.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last one is dealt with by multi-factor authentication. Most of the others – other than the typing on TV scenario – are dealt with by a password manager.&lt;/p&gt;
&lt;h2 id=&quot;the-password-manager-solution&quot; tabindex=&quot;-1&quot;&gt;The password manager solution &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-password-manager/#the-password-manager-solution&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The gist of the idea of a password manager is that you only need to remember one password to get into your password manager account, and that account remembers all your other passwords. That solves the memory problem.&lt;/p&gt;
&lt;p&gt;Most if not all password managers also include a feature that will generate random passwords for you, storing them to the password manager all in one step. That solves the picking unique strong passwords problem.&lt;/p&gt;
&lt;p&gt;Most if not all password managers have browser extensions and auto-fill in apps on phones. You don’t have to look up the password and copy/paste it over. You just click on the right account from your password manager and it fills it in for you. You never even need to look at the password for the account you’re logging in to, let alone remembering it and typing it out. That solves the annoying to type out problem.&lt;/p&gt;
&lt;p&gt;Most if not all password managers have some mechanism for sharing those passwords with others. If one person changes the password, everybody gets the update and will auto-fill with the new one without ever even knowing it was changed. That solves the shared accounts problem.&lt;/p&gt;
&lt;p&gt;Most password managers come with some other tools that also help boost your password security:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identifies if you’ve used the same password on more than one service. If you already had repeated passwords, this helps you find them.&lt;/li&gt;
&lt;li&gt;Identifies which services offer multi-factor authentication, to help encourage you to enable it. Some even function as a code generator themselves and will auto-fill the code for you, although I personally prefer the extra work of having a separate authenticator app.&lt;/li&gt;
&lt;li&gt;Identifies if any credentials have been leaked, as found on &lt;a href=&quot;https://haveibeenpwned.com/&quot;&gt;haveibeenpwned.com&lt;/a&gt;. If any credentials show up here, you need to change them immediately – on everywhere with that password, not just the one that leaked it.&lt;/li&gt;
&lt;li&gt;Identifies weak passwords that have low levels of randomness and could be easier for an attacker to guess or brute force.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;getting-started&quot; tabindex=&quot;-1&quot;&gt;Getting started &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-password-manager/#getting-started&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most of the password managers have some level of free trial with limited functionality. That’s a great way to get a sense of what it is like to use one before you commit to spending on a particular service.&lt;/p&gt;
&lt;p&gt;Personally, I am now using &lt;a href=&quot;https://1password.com/&quot;&gt;1Password&lt;/a&gt;. It offers all of the things I have mentioned above, in a friendly user interface and a reasonable monthly price.&lt;/p&gt;
&lt;p&gt;Before that I used the free version of LastPass. For a long time it had the best free offering by far, but that has been scaled back since.&lt;/p&gt;
&lt;p&gt;Then I used Enpass, which functions a bit differently. Instead of everything sitting in their secure cloud that you pay for on a monthly basis, it instead sets up your password vaults in your existing cloud services like OneDrive or Dropbox and syncs through that. It’s nice in that there’s only an up-front fee, not a monthly one, but needing to set up separate vaults in separate cloud services did make for a hassle trying to share with others.&lt;/p&gt;
&lt;p&gt;Take your time trying out some different services to find what fits your workflow best. But the most important thing is simply that you start using one regularly and take advantage of what it offers so you get unique, strong passwords that you no longer have to memorize. Plus, unlike multi-factor authentication that makes logging in a bit more complicated occasionally, a password manager is both more secure and saves you a lot of time and mental energy.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Security Essentials: Multi-factor Authentication</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-multi-factor-authentication/"/>
		<updated>2021-03-07T22:33:08Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-multi-factor-authentication/</id>
		<content type="html">&lt;p&gt;I typically have two main pieces of advice for basic information security that anybody can and should do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use multi-factor authentication everywhere it is offered&lt;/li&gt;
&lt;li&gt;Use a password manager to generate good passwords, remember them, and make your life easier with auto-fill&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll look at the benefits of a password manager in another post soon. But first, let’s look at multi-factor authentication.&lt;/p&gt;
&lt;h2 id=&quot;the-idea&quot; tabindex=&quot;-1&quot;&gt;The idea &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-multi-factor-authentication/#the-idea&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The idea of multi-factor authentication is that you prove you are who you say you are through an extra “factor” beyond just a password. This is because it is relatively easy for a password to be stolen, distributed, and used. If all it takes for somebody to get into your important accounts is a username and password, that’s a low barrier to cause a lot of damage, especially when you add that most people reuse the same passwords on multiple sites (more on that in the password manager post).&lt;/p&gt;
&lt;h2 id=&quot;verification-options&quot; tabindex=&quot;-1&quot;&gt;Verification options &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-multi-factor-authentication/#verification-options&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The extra factor may be something you know like a security question or something you have like a fingerprint. &lt;a href=&quot;https://docs.microsoft.com/en-gb/learn/modules/secure-aad-users-with-mfa/5-configure-authentication-methods&quot;&gt;This Microsoft doc breaks down the options in terms of what is available within Azure AD authentication&lt;/a&gt;, but most services offer some subset of those options.&lt;/p&gt;
&lt;p&gt;At the lowest end of the security scale are security questions, which are essentially just an extra password except easier to guess. Many places including Microsoft don’t offer a security question option.&lt;/p&gt;
&lt;p&gt;In the middle and the most common are SMS codes texted to your phone or voice calls made to your phone saying the code. That’s good enough for most people, but determined hackers can carry out &lt;a href=&quot;https://www.vice.com/en/article/3kx4ej/sim-jacking-mobile-phone-fraud&quot;&gt;sim-jacking&lt;/a&gt; to get through.&lt;/p&gt;
&lt;p&gt;The highest end of the security scale is an authentication app on your phone (Microsoft Authenticator, Google Authenticator) or a dedicated security key device that must be plugged into your computer via USB (&lt;a href=&quot;https://www.yubico.com/products&quot;&gt;YubiKey&lt;/a&gt;). With these protections, a hacker would have to know your username and password AND also have your phone logged in to the authenticator app or the physical security key. That means they would have to physically rob you on top of cracking your password, which significantly cuts down on how many people can realistically pull it off. It also makes it likely you’ll notice before much damage is done.&lt;/p&gt;
&lt;h2 id=&quot;using-an-authenticator-app&quot; tabindex=&quot;-1&quot;&gt;Using an authenticator app &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-07-security-essentials-multi-factor-authentication/#using-an-authenticator-app&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The authenticator apps may sound like more work than a simple text, but it really is easier on top of being more secure. I use Microsoft Authenticator and that’s what I will be referencing specifically, but Google Authenticator and others have similar if not identical functionality.&lt;/p&gt;
&lt;p&gt;Adding an account is simple. The hardest part may be finding the setting to enable it on the desired account. Some services make it obvious and strongly encourage you to enable multi-factor authentication. Others offer it but tuck it away in settings that you may not ever notice without looking for it. But once you do, if there’s an option to use an authenticator app, choose that and you’ll get a QR code.&lt;/p&gt;
&lt;p&gt;In the top right corner of Microsoft Authenticator is a menu option with “Add account.” It then offers you the choice of a Microsoft personal account, a Microsoft work or school account, or other. The Microsoft option will allow you to set it up with a simple login, but all of the options allow you to scan the QR code. A quick point of your phone camera at your screen and you’re good to go.&lt;/p&gt;
&lt;p&gt;The next time you try to log in and get prompted for the multi-factor – and it won’t typically be every time you log in since most services don’t prompt in low-risk scenarios like the same browser on the same computer at the same IP address as a login yesterday – then there are a couple of ways to verify your identity.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft accounts in Microsoft Authenticator will push a notification prompt and all you need to do is select the Approve button. The small risk in this scenario is that people get used to clicking Approve whenever it pops up and may do it without thinking twice when an attacker is trying to get in.&lt;/li&gt;
&lt;li&gt;Otherwise you’ll need to copy the 6 digit code generated in the app into the web browser or app you’re trying to log into. These codes recycle quickly, generating new ones every 30 seconds, so it is virtually impossible for an attacker to guess the right one in time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s it! It’s true that it is more work than just a password, but very little. You won’t have to do it often, mostly just when you use a new computer or phone. In exchange, you get a level of security that stops approximately 99.9% of attacks before they even get into your account. You won’t regret taking that bit of extra time to set up multi-factor authentication, but you will absolutely will regret it if you don’t and somebody gets into your account.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>WordPress: .com vs .org</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-16-wordpress-com-vs-org/"/>
		<updated>2021-03-16T15:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-16-wordpress-com-vs-org/</id>
		<content type="html">&lt;p&gt;For years I’ve built most of my sites using the open source WordPress platform, i.e. WordPress.org. I recently decided to try the free offering of WordPress.com instead.&lt;/p&gt;
&lt;h2 id=&quot;setup&quot; tabindex=&quot;-1&quot;&gt;Setup &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-16-wordpress-com-vs-org/#setup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Setup is significantly easier on WordPress.com. If you already have a web host, setting up your own may not be much extra work, but if this first time setting up a website, there is always some degree of hosting configuration to go through before installing WordPress. I won’t detail those steps here and they will vary by the hosting provider, but at minimum you’ll need to pick a hosting provider, set up payment, buy a domain or point an existing domain to it, and install WordPress. It might be much more complicated like setting up databases, uploading the WordPress code yourself, and so on.&lt;/p&gt;
&lt;p&gt;With the .com, you just say you want a new site, pick a domain, and you’re pretty much done. If you want to get up and going in a hurry, it’s a good way to go.&lt;/p&gt;
&lt;p&gt;It is somewhat limited. It has WordPress.com ads which you won’t get any money from. You can’t use your own domain. You can’t add your own plugins. You can’t customize your own code. If you want to be able to do those things, you might be cheaper (but more work) looking elsewhere. But if you just want a personal blog like this, it’s enough, easy to use, and free.&#92;Update: soon after writing this, I started adding portfolio content and I don’t like the lack of flexibility in setting up those pages, so I am likely going to move to a self-hosted WordPress soon.&lt;a href=&quot;https://wordpress.com/pricing/&quot;&gt;Check out the WordPress.com pricing page for all the details of pricing.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot; tabindex=&quot;-1&quot;&gt;Maintenance &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-16-wordpress-com-vs-org/#maintenance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is zero maintenance needed for a site hosted on WordPress.com, other than paying for your domain and/or paid account here. All of the software updates are handled for you and you don’t control things like the PHP version on the server.&lt;/p&gt;
&lt;p&gt;If you’re hosting your own site, it is important that you maintain it. That means running the software updates on a semi-regular basis (at least every 3 months), updating the PHP version (about once a year) and testing to make sure it didn’t break anything, perhaps other hosting details like Plesk updates and security settings.&lt;/p&gt;
&lt;p&gt;If you don’t want to worry about maintaining your site or paying a third-party provider to do it, then WordPress.com is a good easy way out.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-16-wordpress-com-vs-org/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Both approaches to WordPress are great. Which one is better for you depends on your needs and goal for the site.&lt;/p&gt;
&lt;p&gt;Hosting your own WordPress site is great if you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have a host anyway or want to have a host anyway&lt;/li&gt;
&lt;li&gt;Want to use all the features like editing your own code&lt;/li&gt;
&lt;li&gt;Are prepared to do the maintenance work or pay somebody else to do it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the other hand, using WordPress.com is great if you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Want something free&lt;/li&gt;
&lt;li&gt;Don’t need many features past having a public place to write&lt;/li&gt;
&lt;li&gt;Don’t want to worry about maintenance&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>IT on Film: Flight Attendant Episode 3</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-29-it-on-film-flight-attendant-episode-3/"/>
		<updated>2021-03-29T17:04:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-29-it-on-film-flight-attendant-episode-3/</id>
		<content type="html">&lt;p&gt;In episode 3 of &lt;a href=&quot;https://www.imdb.com/title/tt7569576/?ref_=fn_al_tt_1&quot;&gt;The Flight Attendant (HBO Max)&lt;/a&gt;, Megan agrees to do some corporate espionage against her husband’s large company. It isn’t clear what the company is – maybe it will explain as the story continues in later episodes – but it is clear that he has access to some significant trade secrets. So Megan encourages her husband to bring his laptop home, then casually finds the file and copies it to a jump drive.&lt;/p&gt;
&lt;p&gt;Two things immediately stood out to me as problems with this scene from a basic IT security perspective.&lt;/p&gt;
&lt;h2 id=&quot;the-computer-password&quot; tabindex=&quot;-1&quot;&gt;The Computer Password &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-29-it-on-film-flight-attendant-episode-3/#the-computer-password&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one that I catch a lot in movies and TV. Why could she just open her husband’s work laptop and be logged in, no password needed? It’s possible there’s some simple user error here, where her husband was just on the computer and didn’t bother to lock it in his own house when he walked away.&lt;/p&gt;
&lt;p&gt;That is understandable, but given how important these trade secrets of a large company are, I would have thought there would be some stronger policies enforced on the machine. With Microsoft Endpoint Manager (and probably similar in other device management systems), the IT Administrator for this big company with important secrets could force the device to lock after x minutes of inactivity, as low as 1 minute. It could be paired with Windows Hello for Business – a fingerprint reader or infrared camera – so that he could still get in quickly each time it locked, but nobody else could. If this policy was set, Megan would have had to act fast to get in, even when her husband was careless about locking.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/03/Device-Compliance-10-Minute-Lock.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of the configuration settings for automatic lock after 10 minutes of inactivity.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Windows 10 also has options like Dynamic Lock, which will automatically lock the computer when a paired Bluetooth device (most likely a phone) is out of range. There may not be an option in Microsoft Endpoint Manager to force that, though, and would require the user to do the Bluetooth pairing.&lt;/p&gt;
&lt;p&gt;Of course none of this matters if Megan’s husband intentionally let her in, but there’s a lot the IT Admins can go to almost eliminate scenarios like her breaking in without his help.&lt;/p&gt;
&lt;h2 id=&quot;information-protection&quot; tabindex=&quot;-1&quot;&gt;Information Protection &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-29-it-on-film-flight-attendant-episode-3/#information-protection&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ok, so let’s assume that Megan has successfully gotten into the computer and found the file. Maybe her husband intentionally let her in. Maybe he was a little sloppy and either it didn’t have adequate protections or she was fast. That still leaves another problem: she still shouldn’t be able to copy it out to a jump drive.&lt;/p&gt;
&lt;p&gt;This can be prevented with &lt;a href=&quot;https://azure.microsoft.com/en-ca/services/information-protection/&quot;&gt;Azure Information Protection&lt;/a&gt; (again, it is possible that similar products from other providers offer the same idea). If this file is as sensitive as the context of the show suggests, it should be tagged with an appropriate protection policy, which can define things like not being allowed to copy it. If that was enabled, Megan would not have simply been able to copy sensitive data onto a USB drive.&lt;/p&gt;
&lt;p&gt;Of course responsible IT policy wouldn’t make very good TV. In this case, this subplot would hit a dead-end quickly if Megan couldn’t steal a file that was properly protected. But in the real world, if you’re dealing with sensitive data, you should be using every tool at your disposal to keep it from being stolen.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>CiviCRM: Overview</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/"/>
		<updated>2021-03-31T15:37:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/</id>
		<content type="html">&lt;p&gt;The platform I worked with more than any other in my previous job was &lt;a href=&quot;https://civicrm.org/&quot;&gt;CiviCRM&lt;/a&gt;. CiviCRM is an open-source CRM system aimed primarily at non-profits that builds on top of an existing WordPress, Joomla, or Drupal website. Drupal is the most powerful because Drupal has great permissions control already and CiviCRM can tie in to those, but the others are fine, too.&lt;/p&gt;
&lt;p&gt;After a few years, I have a pretty good sense of the strengths and weaknesses that CiviCRM offers and will do a quick breakdown here.&lt;/p&gt;
&lt;h2 id=&quot;the-good&quot; tabindex=&quot;-1&quot;&gt;The Good &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#the-good&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CiviCRM does two non-profit functions really well:&lt;/p&gt;
&lt;h3 id=&quot;contributions&quot; tabindex=&quot;-1&quot;&gt;Contributions &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#contributions&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CiviCRM is great with contribution pages. If you want to add a donation page to your website, it will do that and it works well. It ties in with third-party payment processors, the most reliable and cheapest being iATS and Stripe, so they securely handle transferring the money to your account while CiviCRM tracks data about the donor and the donation. It’s smooth enough and works well out of the box, with a good set of configuration options.&lt;/p&gt;
&lt;h3 id=&quot;events&quot; tabindex=&quot;-1&quot;&gt;Events &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#events&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Similarly, CiviCRM has some good functionality around public event signup forms. People can sign up online, including payment through a payment processor, and all the data about the event and the participants will be saved in CiviCRM. It even includes functions like a limit on attendees, a waitlist for any beyond that limit, the ability to require an approval for the registration, and more. All of that works pretty well out of the box as well.&lt;/p&gt;
&lt;h2 id=&quot;the-cautions&quot; tabindex=&quot;-1&quot;&gt;The Cautions &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#the-cautions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;everything-else&quot; tabindex=&quot;-1&quot;&gt;Everything else &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#everything-else&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you look up CiviCRM you’ll see it offer several components which sound great, like bulk mailing, case management, and volunteer management. They aren’t lying, but they are really at varying degrees of a complete solution. A lot of the components end up a disappointment once you start putting them to heavy use and realize they don’t offer much beyond the minimum. For example, there is a bulk mail tool and some features of it work great, but with some major caveats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It’s up to you to configure the server in the best way to avoid being marked as spam, which is hard to do.&lt;/li&gt;
&lt;li&gt;The mailing designer tool is quite limited.&lt;/li&gt;
&lt;li&gt;There is some handling for unsubscribing from lists or opting out entirely, but nothing out of the box that handles scenarios like making sure you comply with Canadian Anti-Spam Legislation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bugs&quot; tabindex=&quot;-1&quot;&gt;Bugs &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#bugs&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;All software has bugs. The difference between a big corporate cloud service solution and an open-source self-hosted one is that bugs in the big corporate solution will usually be fixed by that big corporation within a day before most people notice.&lt;/p&gt;
&lt;p&gt;If there’s a bug in CiviCRM, the best case is that the community has already issued a new release with a fix. In that case, you just need to apply the update. How long that takes depends on your experience and the speed of the server, but could be only around 10 minutes.&lt;/p&gt;
&lt;p&gt;The rest of the time, you have to make a decision to either leave the bug alone and accept the consequences or try to fix the code yourself. The latter requires a completely different expertise and there’s always some risk in messing around with code that handles sensitive data.&lt;/p&gt;
&lt;p&gt;Most of these bugs are not security risks. Your data is generally safe. The consequences of the bugs are usually more like being unable to edit contributions of time, or issue tax receipts, or view a certain report. They may not be site breaking bugs or security risks, but it’s also hard to fully trust the system housing important data and processes.&lt;/p&gt;
&lt;h3 id=&quot;it-s-not-really-free&quot; tabindex=&quot;-1&quot;&gt;It’s not really free &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#it-s-not-really-free&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A common misconception is that open-source means that it is free forever. This is especially pointed out in contrast to the monthly costs of systems like Salesforce or Dynamics (both of which do offer charitable discounts).&lt;/p&gt;
&lt;p&gt;CiviCRM is not really free in practice. The code base is free, but that’s it. You still need to spend on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A website host, with some heavier processing power and configuration requirements than your typical website&lt;/li&gt;
&lt;li&gt;Maintenance work to provide software updates regularly, either your staff’s time or your money going to a third-party provider&lt;/li&gt;
&lt;li&gt;A consultant to help you set it up properly&lt;/li&gt;
&lt;li&gt;Programmers who can code any changes you need and maintain that code to continue to work with updates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The big question is whether it will still be cheaper for your non-profit. The answer is that it depends. There are several factors to consider, particularly how many users you have and whether the solution can meet your needs out of the box or if you need to add more to it.&lt;/p&gt;
&lt;p&gt;For example, a potential best-case scenario: if you’re a charity (not just a non-profit) with less than 10 users and Salesforce can do everything you need, you can get that completely for free. That’s a better much better deal than CiviCRM.&lt;/p&gt;
&lt;p&gt;But if you have 50 users, or if Salesforce doesn’t do everything you need and you have to also buy licenses to several add-ons, that’s going to get much more expensive very fast.&lt;/p&gt;
&lt;h3 id=&quot;no-email-integration&quot; tabindex=&quot;-1&quot;&gt;No email integration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#no-email-integration&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of the most central concepts of a CRM system is that it is provides one system of record for everything you need to know about your constituents. Other CRMs like Salesforce and Dynamics provide tools built right into your email to track your email communications into the CRM, so there is no extra work needed to keep those records up to date.&lt;/p&gt;
&lt;p&gt;CiviCRM does not do that. The closest it offers is a tool that allows you to cc or bcc a separate email address, which CiviCRM then checks on a schedule (not immediately) and tries to match to a contact in the system. If there is no match, it doesn’t work. If there are multiple matches with the same email, it may put attach it to the wrong one. If you forget to bcc the special email – which in my experience everybody does quickly, no matter how much they liked the sound of the feature – then CiviCRM won’t record it. The result is that CiviCRM is missing most of your email communications, which takes away a huge amount of relevant information and leads to scenarios like trying to sell a client on the same thing that your colleague did last week.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-03-31-civicrm-overview/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;CiviCRM can be the right choice for your non-profit, but you shouldn’t assume that just because it is designed for non-profits it will be better. Some hints where it may be the best option:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You already have a Drupal, WordPress, or Joomla site that you want to integrate into, or you want to build a new website on one of those platforms anyway.&lt;/li&gt;
&lt;li&gt;You want a nice simple donation page and/or event management built into your website.&lt;/li&gt;
&lt;li&gt;You don’t need too many code customizations to add features that aren’t provided out of the box. This is particularly true if all you need are the contribution and event components.&lt;/li&gt;
&lt;li&gt;You don’t need to track email communication, i.e. you don’t have multiple people communicating with the client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If those don’t describe your situation, maybe spend some more time researching and do a full needs analysis before you jump in.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SharePoint: Desktop Sync Files</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-02-desktop-sync-files-across-onedrive-and-sharepoint/"/>
		<updated>2021-04-02T11:18:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-02-desktop-sync-files-across-onedrive-and-sharepoint/</id>
		<content type="html">&lt;h2 id=&quot;what-goes-where&quot; tabindex=&quot;-1&quot;&gt;What Goes Where? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-02-desktop-sync-files-across-onedrive-and-sharepoint/#what-goes-where&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first question to consider when planning a file structure in Microsoft 365 is what files go where. That’s more complicated in an online cloud collaboration system than it is for one person on the computer. It needs to make sense for everybody and it needs to be able to easily maintain proper permissions.&lt;/p&gt;
&lt;p&gt;My typical guidance is this: it comes down to who owns the file. If the file is just for you, go ahead and put it in your OneDrive with whatever folder structure you want. But if the file is for others to also access, it should be in SharePoint with a group owning it.&lt;/p&gt;
&lt;p&gt;That can make it a bit less intuitive for individual users to still have easy access to everything they need, which might now be scattered across their OneDrive plus a handful of SharePoint libraries.&lt;/p&gt;
&lt;p&gt;The files can be accessed in multiple ways, like in OneDrive in the browser, in SharePoint in the browser, or in Teams. But this post will compare two different strategies for accessing files on your computer, for those who are most comfortable having content synced to their machine and browsing in Windows Explorer.&lt;/p&gt;
&lt;h2 id=&quot;sync-sharepoint-libraries&quot; tabindex=&quot;-1&quot;&gt;Sync SharePoint Libraries &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-02-desktop-sync-files-across-onedrive-and-sharepoint/#sync-sharepoint-libraries&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The older strategy is to sync each SharePoint library separately to the computer. To do this, navigate to each library in your browser, hit the Sync button in the toolbar, and follow the prompts to sync on your computer using the OneDrive client.&lt;/p&gt;
&lt;p&gt;The end result looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/03/SharePoint-library-synced-separately.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Communication site – Documents library synced separately&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It’s a completely different folder on your computer from your OneDrive.&lt;/p&gt;
&lt;p&gt;The biggest advantage of this over the next option is that there is a clear visual difference. It’s easy to remember which files are just yours in OneDrive and which are shared in SharePoint. That helps avoid scenarios like deleting a folder without realizing that deletes it for everybody, not just you.&lt;/p&gt;
&lt;h2 id=&quot;add-to-onedrive&quot; tabindex=&quot;-1&quot;&gt;Add To OneDrive &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-02-desktop-sync-files-across-onedrive-and-sharepoint/#add-to-onedrive&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A newer feature is the “add to OneDrive” option which appears in the toolbar when browsing a SharePoint location. Instead of syncing it separately, it will treat the shared file as if it was part of your OneDrive, while still maintaining all of the group permissions.&lt;/p&gt;
&lt;p&gt;The end result looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/03/SharePoint-library-added-to-onedrive.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Communication site’s documents are now in the business OneDrive alongside individual documents&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Everything is in one place, which many people like better than needing to remember which files are OneDrive and which are SharePoint. There is a little link icon in the status bar, indicating this is a shared library and not owned by that OneDrive, but that might be obvious enough to everybody.&lt;/p&gt;
&lt;p&gt;The other big advantage is that you won’t have to do this again on every device. The link is kept in your OneDrive, so even as you move between machines, you’ll only need to sync your OneDrive. If you’re on one machine all the time, that might not matter much, but even if you’re regularly switching from mobile to PC, it’s nice to know everything is always where you need it in OneDrive.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>PowerShell: Updating Site Scripts and Designs</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-05-powershell-updating-site-scripts-and-designs/"/>
		<updated>2021-04-05T15:20:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-05-powershell-updating-site-scripts-and-designs/</id>
		<content type="html">&lt;p&gt;This post begins a series on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/sharepoint-site-provisioning/&quot;&gt;SharePoint site provisioning&lt;/a&gt;, unpacking some of the problems I’ve faced and overcome in building SharePoint site provisioning solutions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview&quot;&gt;Site scripts and site designs&lt;/a&gt; are a great feature of SharePoint. They allow for developing and using templates on SharePoint sites that can do many useful things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a list or library&lt;/li&gt;
&lt;li&gt;Apply column or view formatting on a list or library&lt;/li&gt;
&lt;li&gt;Apply a site logo image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is one annoying limitation, though. These scripts and designed are entirely created through PowerShell. That can make it a pain when you’re testing out a new script and need to update it frequently with each change, especially if you’re handling multiple scripts at once.&lt;/p&gt;
&lt;p&gt;So I wrote some PowerShell that handled some basic logic for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/connect-sposervice?view=sharepoint-ps&quot;&gt;Connect to the Microsoft 365 account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/get-spositescript?view=sharepoint-ps&quot;&gt;Check if the script already exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If yes, &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/set-spositescript?view=sharepoint-ps&quot;&gt;update that script &lt;/a&gt;reading from the latest file with an incremented version number&lt;/li&gt;
&lt;li&gt;If no, &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps&quot;&gt;create a new site script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/get-spositedesign?view=sharepoint-ps&quot;&gt;Check if the site design already exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If yes, &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/set-spositedesign?view=sharepoint-ps&quot;&gt;update that design to include the relevant scripts&lt;/a&gt;, with an incremented version number&lt;/li&gt;
&lt;li&gt;If no, &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/add-spositedesign?view=sharepoint-ps&quot;&gt;create a new design to include the relevant scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code is available on &lt;a href=&quot;https://github.com/ryan-l-robinson/SharePoint-Site-Update&quot;&gt;my GitHub account&lt;/a&gt;. The current version is minimal, but I may return someday to make some more updates to it like how to automate multiple scripts on the same design.&lt;/p&gt;
&lt;p&gt;With this PowerShell script, you only need to tweak it to fit your scheme, and then run the PowerShell each time you need to upload your site script’s changes to your SharePoint tenant. The README file on GitHub provides more detail.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Search: Introduction</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/"/>
		<updated>2021-04-07T14:16:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/</id>
		<content type="html">&lt;p&gt;Microsoft Search may be the most underrated feature available as part of Microsoft 365. Maybe that’s because Microsoft themselves haven’t been promoting it that heavily, or maybe it’s because it is associated with Bing, the mention of which usually prompts the question “Bing still exists?” But those people are missing out on the potential productivity benefits that comes from having one search tool to find your data across all your Microsoft systems as well as yes, public Bing search.&lt;/p&gt;
&lt;p&gt;This was a common scenario for me in my previous job: I’m trying to help a client with an error they’re encountering. I have an error code or message to work with. I copy the error text into a new tab in my browser and hit enter to run a search. My results will include any company resources, e.g. if we’ve documented this problem before, or chatted about it in Teams. It will also include public Bing results. This makes it a one-stop shop to check the work resources first and then move on to public results if there isn’t anything.&lt;/p&gt;
&lt;p&gt;But that’s not all Microsoft Search can do. It starts with bringing together search results from many places into one, but also offers some more precise helpful tools.&lt;/p&gt;
&lt;h2 id=&quot;q-and-a&quot; tabindex=&quot;-1&quot;&gt;Q&amp;amp;A &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#q-and-a&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Microsoft Search supports an admin defining common questions and answers for their organization. This can be a great solution if you’re finding that people in your organization are asking the same questions over and over again. These could be common processes within a workday or could be common administrative questions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/03/MicrosoftSearch-QA.png&quot; alt=&quot;Demo of Microsoft Search with Q&amp;amp;A&quot; /&gt;
&lt;em&gt;Demo of Microsoft Search answering the question on why Microsoft Search is so great, which was defined by the admin&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;acronyms&quot; tabindex=&quot;-1&quot;&gt;Acronyms &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#acronyms&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Do you use a lot of acronyms within your workplace? Not everybody will always know what the acronym means. Defining those within the search will allow them to quickly see what the acronym stands for, possibly with some other extra context.&lt;/p&gt;
&lt;h2 id=&quot;bookmarks&quot; tabindex=&quot;-1&quot;&gt;Bookmarks &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#bookmarks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Bookmarks allow you to specify other websites which are important for your users to be able to find. This is particularly helpful if the preferred search result is not at the top of the public rankings, so this way can make sure those answers stay at the top where users see them.&lt;/p&gt;
&lt;h2 id=&quot;floor-plans&quot; tabindex=&quot;-1&quot;&gt;Floor plans &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#floor-plans&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I haven’t done a proper test of floor plans yet, but they allow loading office floor plans. Then users can search for another person in the company and see where in the floor plan their office is located. This can be helpful in larger offices where you may need to visit somebody for the first time.&lt;/p&gt;
&lt;h2 id=&quot;locations&quot; tabindex=&quot;-1&quot;&gt;Locations &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#locations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you find your users are regularly looking up certain locations, you can define them as a location with different search terms. The result will show with the map from Bing Maps.&lt;/p&gt;
&lt;p&gt;Suppose you have another office in Vancouver. You could set up a location titled “Vancouver Office” and people would be able to find it quickly without needing to know the address or trusting the public search.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/03/MicrosoftSearch-Location.png&quot; alt=&quot;Microsoft Search demo with a location for Kitchener City Hall, with a map&quot; /&gt;
&lt;em&gt;Demo of Microsoft Search&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;connectors&quot; tabindex=&quot;-1&quot;&gt;Connectors &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#connectors&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Connectors have the potential to make Microsoft Search far more powerful. This functionality is relatively new but allows for searching across other data systems as well, like a MediaWiki website, Azure DevOps, or a SQL Server. Without connectors, it’s already powerful to search across Bing and your company Microsoft 365 resources. This gets it a step further and lets you search data you control elsewhere, which eases any pain of keeping some data in non-Microsoft systems since you can still search them from Microsoft Search.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-07-microsoft-search-introduction/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many won’t seriously consider using the Bing component like I do. But even without that, there’s a lot of value in Microsoft Search to bring results across all of Microsoft 365 plus connectors plus custom search terms like acronyms into one place. It’s a great way to save time for your users searching and make sure they get to the right answers.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Visual Studio Code: Using GitHub</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/"/>
		<updated>2021-04-09T11:39:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/</id>
		<content type="html">&lt;p&gt;Working in Visual Studio Code but need that connected to your GitHub repository? No problem. Getting connected to GitHub from Visual Studio Code is straightforward. It’s also possible to connect to other Git servers, but the authentication process is a bit more complicated, so I’ll stick to &lt;a href=&quot;https://github.com/ryan-l-robinson&quot;&gt;GitHub which is now my primary code repository&lt;/a&gt;. I’m also sticking with Windows, but the general idea is the same for other platforms with Code.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot; tabindex=&quot;-1&quot;&gt;Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/#configuration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To get started:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;Git for Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open Visual Studio Code in the repository of your code.&lt;/li&gt;
&lt;li&gt;Click on the Source Control icon in the left menu.&lt;/li&gt;
&lt;li&gt;Follow the prompts to connect to your GitHub account by authenticating in your browser.&lt;/li&gt;
&lt;li&gt;Once that is done, the Source Control tab will now give you a couple of options, to either Initialize Repository (set up the source control on the folder but without connecting to GitHub) or Publish to GitHub (set up the source control on the folder and connect to GitHub). Select Publish to GitHub.&lt;/li&gt;
&lt;li&gt;The toolbar at the top will offer you the choice to change the name of the repository as well to make either a private or public repository. Choose which one makes more sense for your context.&lt;/li&gt;
&lt;li&gt;Finally, it will ask you which files from the folder to add to the repository. Unselect any that you don’t want to commit and continue.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That’s it. It’s a pretty intuitive process even if you are brand new to GitHub.&lt;/p&gt;
&lt;p&gt;Once it’s set up, you get a few useful features:&lt;/p&gt;
&lt;h2 id=&quot;visual-cues&quot; tabindex=&quot;-1&quot;&gt;Visual cues &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/#visual-cues&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most valuable component to me is the visual cues of changes. It’s like having a constant diff between your current version and the last commit. If you add a line, that line will be marked green in the sidebar. If you change a line, that line will be marked blue in the sidebar. If you delete a line, there will be a little red arrow where it was.&lt;/p&gt;
&lt;p&gt;Clicking on the area of those colour indicators will pop up a full diff of the changed section. That will also include quick options like reverting all changes on that section.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/VSCode-GitDiff.png&quot; alt=&quot;Blue bar on side indicates changed lines, and the diff is shown below&quot; /&gt;
&lt;em&gt;Demo of an altered line, after clicking on the blue bar to see the diff&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;commit-and-push&quot; tabindex=&quot;-1&quot;&gt;Commit and push &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/#commit-and-push&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Your standard git workflow actions can all be done from the Source Control section in the sidebar. It will show you everything that has changed since the last commit, with options to open the file, discard changes, or stage the file for the next commit. Above the file list you can enter your commit message and hit the checkmark to commit. Other actions like pushing and pulling are tucked away in the ellipses overflow menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/VSCode-SourceControl.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You still have to understand the basics of what is involved in git source control, but you don’t have to memorize the commands for each step. Everything is available visually.&lt;/p&gt;
&lt;h2 id=&quot;gitlens&quot; tabindex=&quot;-1&quot;&gt;GitLens &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-09-using-github-from-visual-studio-code/#gitlens&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The extension &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt; adds a few more useful features and is worth adding. Among other things, it will give you blame lines that shows who last changed a line, when, and as part of what commit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/GitLens-BlameLine.png&quot; alt=&quot;Blame line that identifies &amp;quot;You, 4 days ago, added site design update&amp;quot;&quot; /&gt;
&lt;em&gt;Demo of the blame line with GitLens from my SharePoint site script PowerShell&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Visual Studio Code: Remote SSH Development</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/"/>
		<updated>2021-04-12T14:27:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/</id>
		<content type="html">&lt;p&gt;One of the greatest improvements to my website development workflow came the day I discovered I could directly code on a web server in Visual Studio Code. Before this realization I was opening files with FileZilla, which worked but took a few clicks for each change:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Browse to file in FileZilla&lt;/li&gt;
&lt;li&gt;Double-click to prompt opening in Code&lt;/li&gt;
&lt;li&gt;Switch over to Code, make changes, and save the file&lt;/li&gt;
&lt;li&gt;Switch back to FileZilla&lt;/li&gt;
&lt;li&gt;Say yes on the prompt to upload the change&lt;/li&gt;
&lt;li&gt;Test in browser to see if it did what I wanted it to do&lt;/li&gt;
&lt;li&gt;Repeat 3-6 if necessary for next change&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By comparison, when you access the file directly in Code, that process gets cut down to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open file in Code, make changes, and save the file&lt;/li&gt;
&lt;li&gt;Test in browser to see if it did what I wanted it to do&lt;/li&gt;
&lt;li&gt;Repeat 1-2 if necessary for next change&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you’re making a lot of changes like testing out new CSS designs which may take several iterations to get just right, all those extra clicks add up to a lot of time. It’s also easier to remember; something that happened for me regularly is I saved the file in Code but forgot to go back to FileZilla to upload the file, then was briefly confused why my changes weren’t showing up yet.&lt;/p&gt;
&lt;h2 id=&quot;setup&quot; tabindex=&quot;-1&quot;&gt;Setup &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/#setup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I won’t go step-by-step in getting this setup. There are &lt;a href=&quot;https://towardsdatascience.com/5-steps-setup-vs-code-for-remote-development-via-ssh-from-windows-to-linux-b9bae9e8f904&quot;&gt;lots of great blogs&lt;/a&gt; out there to walk you through it.&lt;/p&gt;
&lt;h2 id=&quot;peacock-extension&quot; tabindex=&quot;-1&quot;&gt;Peacock extension &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/#peacock-extension&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock&quot;&gt;This extension&lt;/a&gt; applies a different colour theme to my workspace for each website I was connected to. This is really valuable especially if you find yourself working on multiple websites on the same day as the visual cue helps avoid accidentally updating the wrong site.&lt;/p&gt;
&lt;p&gt;You can manually set these for each site, which could be used for scenarios like setting the code window to match the branding of that site for an even stronger visual cue, or you can check the box to surprise me with a random colour whenever one isn’t already set.&lt;/p&gt;
&lt;h2 id=&quot;git-integration&quot; tabindex=&quot;-1&quot;&gt;Git integration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/#git-integration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/using-github-from-visual-studio-code/&quot;&gt;I wrote another recent post that breaks down how Git integration in Code in general&lt;/a&gt;. The main difference here is how it ties into the next point: if you can’t use the integrated shell because of the security on the system, you also won’t be able to push in the version control interface.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/VSCode-SourceControl.png&quot; alt=&quot;Source control window showing the files staged and not staged yet, with interface options for everything you need.&quot; /&gt;
&lt;em&gt;Demo of the source control window&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;shell-integration&quot; tabindex=&quot;-1&quot;&gt;Shell integration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-12-visual-studio-code-remote-ssh-development/#shell-integration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is not something I can take advantage of due to security settings of the web server I mostly work on, but it is a great idea if your server allows it. With this feature, you can directly use your shell commands within Code instead of needing a separate window in something like PuTTY or the Windows Subsystem for Linux (WSL).&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>OneDrive: the Family Plan Loophole</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-14-the-onedrive-family-plan-loophole/"/>
		<updated>2021-04-14T11:35:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-14-the-onedrive-family-plan-loophole/</id>
		<content type="html">&lt;p&gt;When you get a Microsoft 365 Home plan, you get 1TB of OneDrive storage per user. That’s a good amount of storage, but you might want more. For example, I have a lot of photos going back almost 20 years. Tens of thousands of photos. A significant subset of those also have copies of the original RAW file taken from the DSLR, which are much larger. 1TB is a lot, but it’s reasonable that even for typical consumer purposes you might hit your limit.&lt;/p&gt;
&lt;p&gt;Here&#39;s how it works:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get &lt;a href=&quot;https://www.microsoft.com/en-ca/microsoft-365/p/microsoft-365-family/cfq7ttc0k5dm?activetab=pivot%3aoverviewtab&quot;&gt;a Microsoft 365 Family plan&lt;/a&gt; if you don’t have one already. Even without this loophole it is a pretty great deal.&lt;/li&gt;
&lt;li&gt;In &lt;a href=&quot;https://account.microsoft.com/services/microsoft365/overview&quot;&gt;the family setup&lt;/a&gt;, share with your family members that you want to have a subscription, whether that’s for OneDrive or the desktop apps or something else.&lt;/li&gt;
&lt;li&gt;Distribute your family’s files across the family’s accounts. For example, perhaps I own the raw photos while my partner owns the edited jpg photosShare from the person who owns the folder to everybody else in the family that needs access. For example, if I own the raw photos, I then share them with my partner so they also show up in her OneDrive.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, the raw photos count against my storage limit and the edited jpg photos count against my partner’s, but we both have access to everything.&lt;/p&gt;
&lt;p&gt;What if that still isn’t enough storage? If you haven’t used up all of your family slots yet, you can create new Microsoft accounts for free and repeat steps 2-4 with the new account.&lt;/p&gt;
&lt;p&gt;It’s a bit more hassle to get started than if you just had 6TB of storage in one Microsoft account, but after that initial setup is done, it is functionally the same: you’ve got 6TB of storage, all accessible from one OneDrive account, at a cheap $110 CAD per year (plus that cost also gives you the desktop Office apps, Skype minutes, etc.).&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>WordPress: Accessibility Basics</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/"/>
		<updated>2021-04-16T12:59:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/</id>
		<content type="html">&lt;p&gt;Accessibility is an important part of designing a website. You want your site to be usable to as many people as possible, right? Here are some things to consider as you develop a WordPress site to make it as accessible as you can.&lt;/p&gt;
&lt;h2 id=&quot;testing-with-wave&quot; tabindex=&quot;-1&quot;&gt;Testing with WAVE &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#testing-with-wave&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The best tool for testing out a website is the WAVE evaluation tool, which is available as an extension for your browser. It will scan the code of the page and tell you any accessibility problems it finds, flagging them with different levels of seriousness. It also has a section for contrast issues when the foreground colour of text is too close to the background colour.&lt;/p&gt;
&lt;p&gt;Note that with WordPress WAVE will always pick up a few issues from the admin toolbar if you are logged in when you run it. That’s not great, but it’s out of the control of the site developer and it doesn’t impact regular visitors.&lt;/p&gt;
&lt;h2 id=&quot;pick-a-theme&quot; tabindex=&quot;-1&quot;&gt;Pick a theme &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#pick-a-theme&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The theme decision will determine a lot of your site’s accessibility. Some themes have a lot of accessibility problems built right into them and it will be hard for you to change the code yourself to fix it. Take your time shopping for themes. Activate a theme and use the WAVE accessibility tool to see how well it scores. If there are little things like missing ALT text, you might be able to work around that without changing the theme, but be cautious if it has a lot of issues like inconsistent headers or a search bar without a label.&lt;/p&gt;
&lt;p&gt;You may not find a theme that’s perfect, but if you put in the time, you’ll at least get pretty close.&lt;/p&gt;
&lt;h2 id=&quot;contrasting-colours&quot; tabindex=&quot;-1&quot;&gt;Contrasting colours &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#contrasting-colours&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Picking a colour scheme of a site goes beyond simply looking good. There needs to be strong enough contrast between the background colour and the foreground text colour to be sure that people with low vision can differentiate.&lt;/p&gt;
&lt;p&gt;There are levels to this. Hitting the most strict AAA sometimes can be hard to do in light of other factors like brand consistency, but you want to make sure you at least hit the AA standard. The WAVE tool can help measure your contrast and even help you pick colours for stronger contrast.&lt;/p&gt;
&lt;h2 id=&quot;the-wp-accessibility-plugin&quot; tabindex=&quot;-1&quot;&gt;The WP-Accessibility plugin &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#the-wp-accessibility-plugin&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes if your theme doesn’t do a great job hitting all the accessibility requirements, the WP-Accessibility plugin can help. It includes a few helpful tools like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adds the title of the blog post to the “read more” text. This helps for people with screenreaders. When all the links say “read more,” a screenreader jumping through links just says “read more” over and over again, which isn’t helpful. It’s a lot more helpful when it says “read more Accessibility in WordPress.”&lt;/li&gt;
&lt;li&gt;Adds an accessibility toolbar on the side of your site for adjusting font size and contrast.&lt;/li&gt;
&lt;li&gt;Attempts to add a label to the search bar, although I’ve had mixed success with that option.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;use-the-right-headers&quot; tabindex=&quot;-1&quot;&gt;Use the right headers &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#use-the-right-headers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That covers the general site setup. Now we’re into features that anybody should consider when writing content like this blog post.&lt;/p&gt;
&lt;p&gt;Many people misuse header tags. They are not solely for formatting. They also help identify how content is related to each other. Your site should have an h1 tag, either for the site title or page title. Then everything below that should be an h2. Content that is a sub-category of an h2 should be identified with an h3. And so on. You shouldn’t skip tags from an h2 down to an h5, for example, or always use h2 no matter what without considering what should maybe be lower.&lt;/p&gt;
&lt;h2 id=&quot;always-add-alt-text&quot; tabindex=&quot;-1&quot;&gt;Always add ALT text &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-16-accessibility-in-wordpress/#always-add-alt-text&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the accessibility issue that most often gets discussed, but it’s still very easy to miss in WordPress. ALT text is a technique to describe what a screenreader says to a user that can’t see the picture. You should always set ALT text unless the photo is purely decorative like an icon.&lt;/p&gt;
&lt;p&gt;WordPress offers the option to set ALT text, but it doesn’t require it. It’s also not quite as in-your-face in the new Gutenberg block editor as it used to be in the classic WordPress editor, so it’s easy to add an image and forget to dig into the settings for the ALT text option.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Web Browser: Microsoft Edge vs Chrome</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/"/>
		<updated>2021-04-19T16:50:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/</id>
		<content type="html">&lt;p&gt;It should come as no surprise that my web browser of choice is Microsoft Edge, given Microsoft’s offering is my choice in almost everything (except Microsoft News which I don’t like at all).&lt;/p&gt;
&lt;p&gt;This was not always true. The previous version of Edge was not great for me. Internet Explorer before it was very bad, not just for me but pretty much everybody. That changed when Microsoft opted to rebuild Edge based on the Chromium open-source code base. It now has all the best parts of Google Chrome including themes, extensions, and the rendering engine.&lt;/p&gt;
&lt;p&gt;On top of that, it does a few things I like better than Chrome.&lt;/p&gt;
&lt;h2 id=&quot;privacy&quot; tabindex=&quot;-1&quot;&gt;Privacy &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#privacy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The key difference for me is privacy.&lt;/p&gt;
&lt;p&gt;Most of Google’s profit comes from advertising targeted based on a massive amount of data they know about you because they track you all over the Internet. Chrome helps them build up more data about you in a few ways.&lt;/p&gt;
&lt;p&gt;For one, Chrome syncs your account using a Google account. All of your browsing is data sent back to Google. Microsoft has a similar syncing function but using a Microsoft account instead. It’s a fair argument if you don’t see a difference between giving lots of data to Google vs Microsoft, but Microsoft’s business is not built on data mining in the same way.&lt;/p&gt;
&lt;p&gt;Google Chrome is also very forgiving of everybody else’s trackers, like Facebook’s. Most websites you visit have a bunch of trackers on them so ad sales companies like Facebook can follow you around the Internet. If you don’t want to be followed around the Internet, Edge is more aggressive about blocking these blockers than Chrome.&lt;/p&gt;
&lt;h2 id=&quot;speed&quot; tabindex=&quot;-1&quot;&gt;Speed &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#speed&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tomsguide.com/news/chrome-firefox-edge-ram-comparison&quot;&gt;Edge uses up less memory and runs faster&lt;/a&gt;. That may be because of the blocking of trackers, since all of those trackers running take up resources in the system.&lt;/p&gt;
&lt;p&gt;If you’re somebody who runs a lot of tabs at once, or using a machine with limited memory, this could be a deciding factor on its own.&lt;/p&gt;
&lt;h2 id=&quot;new-tab-for-office-accounts&quot; tabindex=&quot;-1&quot;&gt;New tab for Office accounts &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#new-tab-for-office-accounts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you’re logged in through a business account, one of the options for the New Tab screen is your Office documents. It’s essentially the same screen you get when you visit office.com. Putting that on the New Tab screen is a great way to be reminded and have quick access to your most important documents within the flow of your normal browsing.&lt;/p&gt;
&lt;h2 id=&quot;timeline&quot; tabindex=&quot;-1&quot;&gt;Timeline &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#timeline&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When you use Edge, on desktop or mobile, it integrates with your Windows 10 Timeline. This makes it convenient to scroll back through your history if you need something, like if you first viewed a page on mobile and now want to continue on desktop.&lt;/p&gt;
&lt;p&gt;Update: it sounds like the Timeline sync will be going away for consumer accounts and will only be available for business accounts soon.&lt;/p&gt;
&lt;h2 id=&quot;vertical-tabs&quot; tabindex=&quot;-1&quot;&gt;Vertical tabs &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#vertical-tabs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Lining up your browsing tabs on the left side of your screen instead of the top takes some getting used to, but once you get the hang of it, it is a much more efficient use of space at least on widescreen monitors where you already have more width than most websites are designed for, but could really use the extra height. The main downside is that it’s slower to switch tabs using a mouse, so I may get used to Alt+Tab to switch instead of using a mouse so much.&lt;/p&gt;
&lt;h2 id=&quot;it-s-already-installed&quot; tabindex=&quot;-1&quot;&gt;It’s already installed &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-19-web-browser-microsoft-edge-vs-chrome/#it-s-already-installed&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a little thing, and yes, the argument I’m about to make is exactly what got Microsoft into anti-trust trouble years ago. The argument is simple: Windows 10 comes with Edge.&lt;/p&gt;
&lt;p&gt;Having Edge and Chrome installed means that both update in the background, eating up memory. Having both means double the potential security vulnerabilities. And of course, it simply takes that bit of extra time to go download and configure Chrome.&lt;/p&gt;
&lt;p&gt;Even if it was otherwise equal to Chrome, there is no reason to install Chrome. If it’s a bit better, as I believe, there’s even less reason.&lt;/p&gt;
&lt;p&gt;If you haven’t tried Edge yet and you’re not heavily invested in the Google ecosystem, it might be worth a shot for you too.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>OneDrive vs SharePoint</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-21-onedrive-vs-sharepoint/"/>
		<updated>2021-04-21T06:59:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-21-onedrive-vs-sharepoint/</id>
		<content type="html">&lt;p&gt;The first question that typically comes up when moving files to Microsoft 365 is this: what’s the difference between OneDrive and SharePoint? Which files should I put where?&lt;/p&gt;
&lt;h2 id=&quot;permissions&quot; tabindex=&quot;-1&quot;&gt;Permissions &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-21-onedrive-vs-sharepoint/#permissions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most important difference is the default permissions. &lt;strong&gt;In short, files that are for just you should be in OneDrive. Files that are for others should be in SharePoint.&lt;/strong&gt; OneDrive is individual by default. SharePoint is shared by default.&lt;/p&gt;
&lt;p&gt;This includes files where you are doing most/all of the work but others might need to access them at some point in the future. You want to minimize friction if somebody else on a team suddenly needs to access that file. At best when the file was put initially in your OneDrive, they need to request that you share it, which could have been avoided by putting it in a shared location in the first place. At worst, what if you aren’t available? They might not be able to get to the file they need right now, or might need to take up the time of an administrator to step in.&lt;/p&gt;
&lt;p&gt;There is a mechanism for admins to give one user access to another user’s OneDrive. This can be helpful in circumstances like a sudden termination where it turns out the terminated employee had some files that others need. But at most this should be used for times like a new employee taking over the same role as a previous user, where there are files that are only used by that one role.&lt;/p&gt;
&lt;p&gt;SharePoint sites are most easily set up attached to Microsoft 365 Groups. Those Groups already carry permissions across all the services of Microsoft 365 like Planner and Teams. If you devise some logical groups, your files can neatly into those groups. Users don’t have to think about permissions for each file; they just need to put it in the relevant group.&lt;/p&gt;
&lt;p&gt;This also extends to search. When files are in SharePoint, anybody with the permissions to see it will also be able to find it within &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-search-introduction/&quot;&gt;Microsoft Search&lt;/a&gt;, unless search indexing is turned off for that SharePoint site.&lt;/p&gt;
&lt;h2 id=&quot;columns-views-and-content-types&quot; tabindex=&quot;-1&quot;&gt;Columns, views, and content types &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-21-onedrive-vs-sharepoint/#columns-views-and-content-types&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;SharePoint brings a pile of functionality that isn’t available in OneDrive. These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Columns, for tracking custom data about the file&lt;/li&gt;
&lt;li&gt;Views, for presenting the files in different ways such as sorting, filtering, and grouping the results&lt;/li&gt;
&lt;li&gt;Content types, for enforcing certain types across multiple document libraries, including possibly with file templates&lt;/li&gt;
&lt;li&gt;Power Automate processes shared with others&lt;/li&gt;
&lt;li&gt;Power Apps forms shared with others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your workflow benefits from anything more complicated than just a few people able to see the same file, these extra tools can make a huge difference. This lines up nicely with the permissions aspect, since those functions are also generally most useful when the file is for multiple users.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SharePoint: Accessing Files</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/"/>
		<updated>2021-04-23T01:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/</id>
		<content type="html">&lt;p&gt;Suppose you’ve now set up all of your files for your organization in &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/onedrive-vs-sharepoint/&quot;&gt;the ideal way, with some in individual user OneDrives and others in group SharePoint sites&lt;/a&gt;. The natural follow-up question is: now how do I access those files within my workflow?&lt;/p&gt;
&lt;p&gt;There are a lot of options. This isn’t an exhaustive list, but in this post I’ll quickly mention several different ways to access your files that are housed in Microsoft 365 (OneDrive for Business and SharePoint). If you know of more that I missed, leave a comment.&lt;/p&gt;
&lt;h2 id=&quot;directly-in-your-browser&quot; tabindex=&quot;-1&quot;&gt;Directly in your browser &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#directly-in-your-browser&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can access in your web browser directly looking at the location of the file, either on the SharePoint site or the OneDrive site. Browsing on the site has some advantages like seeing all the columns (metadata) about the files and views for easy filtering and sorting.&lt;/p&gt;
&lt;p&gt;This is something that is more worthwhile if you’re going to use other features of SharePoint, particularly if you’ve built navigation between the different sites. If you don’t have an intuitive navigation between the sites, it still creates the problem of having to find the file. It depends on your environment and your workflow, but for the most part, this is more of a fallback plan and not how you are likely to most often access your regular files.&lt;/p&gt;
&lt;h2 id=&quot;teams&quot; tabindex=&quot;-1&quot;&gt;Teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If Teams is your primary work dashboard, this is the best solution all around. In this scenario, you create a Team and the channels within the Team. Each channel will automatically create a folder in the document library of the corresponding SharePoint site, named to match that of the channel. This folder is automatically added to the channel as a tab at the top called “Files.”&lt;/p&gt;
&lt;p&gt;This creates a great intuitive interface where you can do almost everything in Teams. As of this writing there are few exceptions for features available in the SharePoint bar that isn’t on the Teams bar, features which are more for power users:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit in Grid View&lt;/li&gt;
&lt;li&gt;Add to OneDrive&lt;/li&gt;
&lt;li&gt;PowerApps&lt;/li&gt;
&lt;li&gt;Automate&lt;/li&gt;
&lt;li&gt;Alert Me&lt;/li&gt;
&lt;li&gt;Manage My Alerts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is, however, a button to open the document library in SharePoint in your browser. The average user doesn’t need to do any of those functions very often if ever and would be perfectly happy doing all their file access in Teams, but if you do start out in Teams and realize you need more, there’s a quick link to do it.&lt;/p&gt;
&lt;h2 id=&quot;onedrive-sync-client&quot; tabindex=&quot;-1&quot;&gt;OneDrive sync client &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#onedrive-sync-client&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If Teams is the most modern way to work, using the OneDrive sync client is the most traditional and the most comfortable for a lot of people. In this way, you access files housed in the cloud just as easily as you’re already used to accessing files on your computer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/sharepoint/desktop-sync-files-across-onedrive-and-sharepoint/&quot;&gt;In another post, I broke down two different approaches to syncing your files from OneDrive and SharePoint together to your computer with the OneDrive sync client&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;desktop-and-mobile-apps&quot; tabindex=&quot;-1&quot;&gt;Desktop and mobile apps &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#desktop-and-mobile-apps&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Know that you’re looking for a Word document, particularly one that you’ve accessed recently? A quick solution to open it again is to open the Word app. The launch page will show your recent documents, your pinned documents, and documents shared with you. You can also fully browse your SharePoint structure to find the file, although that might not be the most intuitive for many people.&lt;/p&gt;
&lt;p&gt;This is also true for mobile. There are mobile apps for Word, Excel, PowerPoint, Office (one app with lightweight versions of the core apps), OneNote, OneDrive, and SharePoint. These all work for finding your recent files of that type and with some degree of ability to browse.&lt;/p&gt;
&lt;h2 id=&quot;windows-search&quot; tabindex=&quot;-1&quot;&gt;Windows Search &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#windows-search&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On a related note: Windows Search will turn up results on all recent documents you’ve opened on that computer, not just files that are synced and located on that computer. If you’ve opened it once from Teams and closed it, you can get back quickly using the search bar built into Windows.&lt;/p&gt;
&lt;h2 id=&quot;office-com-and-similar&quot; tabindex=&quot;-1&quot;&gt;Office.com (and similar) &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#office-com-and-similar&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are multiple places that give you more or less the same interface that helps surface your recent documents, pinned documents, documents recommended for you, files shared with you. These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.office.com/&quot;&gt;The Office.com launching page&lt;/a&gt; or the Office app in Windows&lt;/li&gt;
&lt;li&gt;The New Tab page in Microsoft Edge when you’ve set that up and you’re logged in to sync with a Microsoft 365 business account&lt;/li&gt;
&lt;li&gt;The homepage in Delve&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The exact details vary, but they share in common a similar idea of trying to help you get back to your most important files quickly. You won’t necessarily find everything this way, but a lot of the time you just want to find that file again that you were using yesterday, and this will help a lot in those scenarios.&lt;/p&gt;
&lt;h2 id=&quot;microsoft-search&quot; tabindex=&quot;-1&quot;&gt;Microsoft Search &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#microsoft-search&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ve written another post already about &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-search-introduction/&quot;&gt;my appreciation for Microsoft Search as perhaps the most underrated tool in Microsoft 365&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;android-launcher&quot; tabindex=&quot;-1&quot;&gt;Android launcher &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-22-accessing-microsoft-365-files/#android-launcher&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you’re using Android for your mobile device, you can use &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.microsoft.launcher&amp;amp;hl=en_US&amp;amp;gl=US&quot;&gt;the Microsoft Launcher&lt;/a&gt;. This is a nice Android launcher in a few ways, but among its features are some quick widgets for accessing things like your calendar and yes, your recent documents. If you find yourself in scenarios like working on a file on your computer and then wanting to continue on your mobile during your bus ride home, this is a helpful way to immediately do that.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SMTP Through a Google Account</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-28-smtp-through-a-google-account/"/>
		<updated>2021-04-28T19:55:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-28-smtp-through-a-google-account/</id>
		<content type="html">&lt;p&gt;Many applications like business scanners or hosted CRM systems come with features that send email. To do so, it has to be able to connect to an email account that it sends on behalf of. The main challenge is that most good modern email services are strict about allowing emails to be sent on their behalf. Microsoft 365 is particularly strict. Google is a bit easier, but does require an extra step which is not obvious.&lt;/p&gt;
&lt;p&gt;First, decide which Google account you’ll want to do this. I recommend that it is an account solely for this purpose. &lt;strong&gt;It definitely should not be a regular user account that might contain sensitive data&lt;/strong&gt;. The reason is what will come up below: by nature of this functionality you will need to disable some of the advanced Google security so that &lt;a href=&quot;https://tech.ryanrobinson.ca/security-essentials-multi-factor-authentication/&quot;&gt;it is protected only by a password&lt;/a&gt; (generally a bad idea). Create a specific Gmail account for this purpose, like &amp;lt;company name&amp;gt;.crm@gmail.com.&lt;/p&gt;
&lt;h2 id=&quot;configure-settings&quot; tabindex=&quot;-1&quot;&gt;Configure settings &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-28-smtp-through-a-google-account/#configure-settings&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next, you need to find the options in the application trying to send the email. Look for something with “SMTP” in it. It could also be something more generic like “outbound email.”&lt;/p&gt;
&lt;p&gt;Once you find those settings options in the system that you want to be able to send from as your Gmail, fill in the valued needed for Gmail. &lt;a href=&quot;https://support.google.com/mail/answer/7126229?hl=en&quot;&gt;The values are mostly easy to find on the Internet&lt;/a&gt;, but I’ll copy them here as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SMTP Server: smtp.gmail.com&lt;/li&gt;
&lt;li&gt;Requires SSL: yes&lt;/li&gt;
&lt;li&gt;Requires TLS: yes (if available)&lt;/li&gt;
&lt;li&gt;Requires authentication: yes&lt;/li&gt;
&lt;li&gt;Port for SSL: 465&lt;/li&gt;
&lt;li&gt;Port for TLS (if available): 587&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;less-secure-access&quot; tabindex=&quot;-1&quot;&gt;Less secure access &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-04-28-smtp-through-a-google-account/#less-secure-access&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There’s one more important step that is not obvious. By default, Google accounts do not allow you to access by SMTP over anything it deems a “less secure app.” Your CRM or scanner connecting over SMTP will probably be considered a less secure app.&lt;/p&gt;
&lt;p&gt;So, you’ll also need to disable that option. You can do that here when logged in: &lt;a href=&quot;https://myaccount.google.com/lesssecureapps&quot;&gt;Less Secure Apps option&lt;/a&gt;. Note that you’ll also have to turn off two-factor authentication to be allowed to do this.&lt;/p&gt;
&lt;p&gt;Once that’s done, go ahead and test to confirm it worked.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Change Your Profile Picture as a Guest</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-04-30-change-your-profile-picture-as-a-guest-in-microsoft-teams/"/>
		<updated>2021-04-30T14:10:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-04-30-change-your-profile-picture-as-a-guest-in-microsoft-teams/</id>
		<content type="html">&lt;p&gt;If you’ve operated as a guest in a different company’s Microsoft Teams tenant, you may have noticed that you don’t get the same user photo that you do in your own tenant. Instead, you only get your initials in a colour background. If you’re signing in as a guest regularly in a different tenant, that can get a bit annoying. There’s no clear interface option to change it either.&lt;/p&gt;
&lt;p&gt;Fortunately, &lt;a href=&quot;https://blog.yannickreekmans.be/change-own-profile-picture-as-guest-in-microsoft-teams/&quot;&gt;Yannick Reekmans has found a way to do it and detailed it in his blog&lt;/a&gt;. I won’t cover all the steps here and I have not personally tried it yet, but this sounds like it would be worth it – at least for those of us who are comfortable looking at developer tools in our browser. Check out the details there and let me know if it works for you.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Data Loss Prevention (DLP) Policies</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/"/>
		<updated>2021-05-03T16:04:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/</id>
		<content type="html">&lt;p&gt;Data Loss Prevention in Microsoft 365 is a feature that helps prevent loss of sensitive data (that makes sense) coming out of your system. This can be within emails or within files, although the latter requires a higher license. Here’s how it works.&lt;/p&gt;
&lt;h2 id=&quot;sensitive-data-types&quot; tabindex=&quot;-1&quot;&gt;Sensitive data types &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/#sensitive-data-types&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At the heart of the DLP functionality is the idea of sensitive data types and the ability to recognize those types automatically using pattern recognition.&lt;/p&gt;
&lt;p&gt;A common example is a credit card. In general, you don’t want people in your organization to be able to share credit card information (especially not by email). Credit card numbers follow a particular pattern of 16 digits. That makes it easier for the Microsoft pattern recognition to detect.&lt;/p&gt;
&lt;p&gt;Other patterns may not be as easy to identify, but Microsoft is able to draw on a massive amount of data points and come up with a level of confidence. It may come back saying that it is 70% confident that this document contains a credit card number.&lt;/p&gt;
&lt;p&gt;You can also add your own sensitive data types and train them with enough data for the machine learning machine to establish some confidence in what does and does not meet that type. Perhaps you have your own internal system with ID numbers for clients that you want to protect in some way; you could set that up as a sensitive data type.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/DLP-Sensitive-Information-Types.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of current sensitive info types available by default&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;dlp-rules&quot; tabindex=&quot;-1&quot;&gt;DLP rules &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/#dlp-rules&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next question is what you want to do when that sensitive data is identified. This is where the DLP rules come in. With DLP rules you can set multiple options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What sensitive data type(s) should the rule apply to&lt;/li&gt;
&lt;li&gt;Name of the policy&lt;/li&gt;
&lt;li&gt;What systems should the rule be monitoring, for example Exchange, OneDrive, SharePoint&lt;/li&gt;
&lt;li&gt;What to do when the data type is detected: notify the user, email an admin, and/or restrict access to the content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/DLP-Policy-Settings.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of DLP policy setting options&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;other-uses-of-sensitive-data-types&quot; tabindex=&quot;-1&quot;&gt;Other uses of sensitive data types &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/#other-uses-of-sensitive-data-types&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These sensitive data types can also inform other types of security and compliance rules throughout your Microsoft 365. For example, you can have retention rules based on the sensitive data type scanner which says, for example: if the file has a passport number, retain for 7 years after last modification and then delete.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/Retention-Tag.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of making a retention tag based on sensitive information type&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;learn-more&quot; tabindex=&quot;-1&quot;&gt;Learn more &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-03-data-loss-prevention-dlp-policies/#learn-more&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a very broad introduction to the idea. To dig in deep to what is possible, &lt;a href=&quot;https://docs.microsoft.com/en-us/exchange/security-and-compliance/data-loss-prevention/data-loss-prevention&quot;&gt;check out the Microsoft docs&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>My (Freelance) Web Development Workflow</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/"/>
		<updated>2021-05-04T13:11:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/</id>
		<content type="html">&lt;p&gt;When I work on a freelance website (I have more advanced tools in my day job), especially once I need to deploy some custom code, I have several tools at my disposal I want to set up. Here’s what those tools and that setup process looks like. For the purpose of this post, I’m assuming I already have the SFTP and SSH credentials from the website host.&lt;/p&gt;
&lt;h2 id=&quot;ssh-keys&quot; tabindex=&quot;-1&quot;&gt;SSH keys &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#ssh-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The one-time need is to prepare my SSH keys. This requires three files which can be created with PuTTYgen, part of the package that comes with PuTTY.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create your SSH key using the “Generate” button, if you don’t already have one you could load.&lt;/li&gt;
&lt;li&gt;Save the private key file using the “Save private key” button. It is often recommended to put this in a folder called .ssh in your user directory, but at least for my purposes it can be anywhere.&lt;/li&gt;
&lt;li&gt;Create a file named “id_rsa.pub”. Copy the text at the top of the PuTTYgen window and paste it into that file using a code editor and save.&lt;/li&gt;
&lt;li&gt;Use the “Conversions” -&amp;gt; “Export OpenSSH key (force new file format)” option in the menu. Save that file as “id_rsa” (without the .pub extension).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/PuTTYgen.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;PuTTYgen window, before creating/loading a key&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The file created by step 2 will be used in PuTTY. The file created in step 3 will be added to each site’s authorized_keys file as well as GitHub. The file created in step 4 will be used by Visual Studio Code.&lt;/p&gt;
&lt;h2 id=&quot;putty&quot; tabindex=&quot;-1&quot;&gt;PuTTY &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#putty&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;PuTTY’s piece of the puzzle is to provide SSH access for executing shell commands on the site. This may not be necessary if you can use the integrated terminal in Visual Studio Code, but the host I use does not allow that due to security restrictions.&lt;/p&gt;
&lt;p&gt;Before adding any specific site, I want to change a couple of settings for the default configuration to aid in using the SSH key for authentication. In the sidebar menu, select Connection -&amp;gt; SSH -&amp;gt; Auth, then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check the box for “Allow agent forwarding.” This is necessary to use the same SSH key to authenticate to GitHub.&lt;/li&gt;
&lt;li&gt;Under “Private key file for authentication” click the Browse button and navigate to the private key file.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then go back to the top settings option, select “Default Settings” and “Save” to overwrite the defaults.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/PuTTY.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;PuTTY window, with some of my clients already set up as stored sessions&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When it’s time to add a new site, there’s little configuration needed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the “Host Name” field, enter &amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;.&lt;/li&gt;
&lt;li&gt;Enter a new title under “Saved Sessions.”&lt;/li&gt;
&lt;li&gt;Click “Save.”&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the future when I want to open it, I simply double-click on the saved session.&lt;/p&gt;
&lt;h2 id=&quot;authorized-keys&quot; tabindex=&quot;-1&quot;&gt;Authorized_keys &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#authorized-keys&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you’ve done the first part and try to load up a site, you will get prompted for the password. That’s because the web server hasn’t been told it’s safe to authorize with that SSH key yet. To do that, update the file at ~/.ssh/authorized_keys to contain a line with the contents of id_rsa.pub file. You can have multiple lines in authorized_keys if there are more people working on the site.&lt;/p&gt;
&lt;p&gt;There are lots of approaches to updating that file (cPanel, SFTP, etc.), but I usually do it by connecting first with PuTTY (using a password the first time) and then editing the file with vi:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; .ssh
&lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; .ssh/authorized_keys
i &lt;span class=&quot;token comment&quot;&gt;#enters insert mode&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#paste the contents of your id_rsa.pub by right-clicking&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;#esc key to exit insert mode&lt;/span&gt;
:wq&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;#saves and exits vi&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;700&lt;/span&gt; .ssh
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;700&lt;/span&gt; authorized_keys &lt;span class=&quot;token comment&quot;&gt;#limits access to this file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then close the session in PuTTY and try opening the saved session again. It should be able to connect and only need the SSH key password, not the site user password.&lt;/p&gt;
&lt;p&gt;When I first tried this, it also worked to allow me to push from the server to GitHub. That stopped working when I came back a few months later, though. So here’s what I also had to do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upload the id_rsa file to the .ssh folder&lt;/li&gt;
&lt;li&gt;Assign it restricted permissions and then add the key&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;700&lt;/span&gt; ~/.ssh/id_rsa
ssh-add ~/.ssh/id_rsa&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;github&quot; tabindex=&quot;-1&quot;&gt;GitHub &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#github&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Any code that I want to customize unique to this site, not just using available plugins and themes published elsewhere, I want to commit my code to GitHub.&lt;/p&gt;
&lt;p&gt;Here’s a common scenario for me: I’ve created a child theme to apply some tweaks to a published theme elsewhere. When a core theme gets updated, that can create conflicts, so I usually want to see specifically what files got updated. If that includes any of the files I overrode in my child theme, I want to know that. Then I can look at the specific lines that have been changed, and copy those changes if necessary into my child theme.&lt;/p&gt;
&lt;p&gt;Here are the commands for me to configure the git repository, using the themes folder as the example:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/public_html/wp-content/themes
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; init
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; *
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; branch &lt;span class=&quot;token parameter variable&quot;&gt;-M&lt;/span&gt; main
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; origin &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;SSH path to repository&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push &lt;span class=&quot;token parameter variable&quot;&gt;-u&lt;/span&gt; origin main&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is important that you use the SSH path to the repository, not the HTTPS path. You’ll need it to be using the SSH path to be able to forward your SSH key using PuTTY to connect to GitHub. Note that it is possible to initialize the GitHub repository all in Visual Studio Code, but it does default to using the HTTPS path instead of SSH, so doing it that way means you’d have to change the .git/config file later.&lt;/p&gt;
&lt;h2 id=&quot;visual-studio-code&quot; tabindex=&quot;-1&quot;&gt;Visual Studio Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#visual-studio-code&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; is my code editor of choice, so this is an essential piece of the puzzle if I am doing any customizations to the site. I’ve written more about Visual Studio Code in the past:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/visual-studio-code-remote-ssh-development/&quot;&gt;Remote SSH in Visual Studio Code.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/using-github-from-visual-studio-code/&quot;&gt;GitHub in Visual Studio Code.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When I have a new site to add, I do this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on the Remote SSH icon in the left menu.&lt;/li&gt;
&lt;li&gt;Scroll over the “SSH Targets” header so the little gear icon appears and click on that.&lt;/li&gt;
&lt;li&gt;It should pop up offering different locations of SSH config files on your computer. Select the relevant one.&lt;/li&gt;
&lt;li&gt;Add a new section to the file using the format below. I like to organize them alphabetically and use the URL of the site for the host name.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;Host [URL]
  HostName [URL]
  User [SSH username]
  IdentityFile [Path to id_rsa file]
  ForwardAgent yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refresh the list of SSH targets in the remote explorer so the new URL will appear. Click on the “Connect to Host in New Window” icon beside the new URL. Enter the SSH key passphrase to connect. Click on the file browser icon in the left menu and select “Open Folder.” Browse to the root location of the site that you want to work from. Once you’ve opened a specific folder, you can jump straight to that folder from the SSH Targets list.&lt;/p&gt;
&lt;h2 id=&quot;filezilla&quot; tabindex=&quot;-1&quot;&gt;FileZilla &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-04-my-web-development-workflow/#filezilla&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://filezilla-project.org/&quot;&gt;FileZilla&lt;/a&gt; is a great tool for SFTP access to a website. I don’t need this too often, but it can come in handy if I have to transfer files from my computer to the web server or vice versa. This is all done in the interface.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on the Site Manager link in the top left.&lt;/li&gt;
&lt;li&gt;Click the New Site button.&lt;/li&gt;
&lt;li&gt;Fill in the credentials needed.&lt;/li&gt;
&lt;li&gt;Click Ok to save, and then Connect to start the connection.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After that, I like to export my list of sites. This will serve as a backup if I need to switch computers: This option is available from File -&amp;gt; Export.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Azure AD: Guest Users from Google</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-06-microsoft-365-guest-users-from-google/"/>
		<updated>2021-05-06T11:29:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-06-microsoft-365-guest-users-from-google/</id>
		<content type="html">&lt;p&gt;Most users of Microsoft 365 have encountered the idea of guest users at some point. If you want to share company resources to somebody outside the company, you can do that. By default this works with the guest able to sign in with a business Microsoft account (Office) or a consumer Microsoft account (MSA).&lt;/p&gt;
&lt;p&gt;This is not on by default, but you can take that a step further and allow guest users to authenticate logging in to guest resources using their &lt;strong&gt;Google&lt;/strong&gt; accounts. In many scenarios, this is helpful compared to the default. Especially if it’s something like dealing with volunteers, you don’t really want to force them to make a Microsoft account if they don’t otherwise have one. If they don’t have a Microsoft they probably have a Google. It can also help if you use Google Suite for your main company email but also want some other functionality with Office, so that you only need to login with the Google rather than have a whole new set of users.&lt;/p&gt;
&lt;p&gt;I won’t repeat the full steps here. &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/active-directory/external-identities/google-federation&quot;&gt;Microsoft’s documentation covers that well&lt;/a&gt;. I just wanted to share that it was possible as it is a bit of a hidden gem that isn’t obvious when you get started in Microsoft 365.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Azure AD: Conditional Access Policies</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-10-microsoft-conditional-access-policies/"/>
		<updated>2021-05-10T12:24:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-10-microsoft-conditional-access-policies/</id>
		<content type="html">&lt;p&gt;Passwords are inadequate. Even for standard consumer tools, you should have at least two more tools in your toolbox: &lt;a href=&quot;https://tech.ryanrobinson.ca/security-essentials-password-manager/&quot;&gt;a password manager&lt;/a&gt; and &lt;a href=&quot;https://tech.ryanrobinson.ca/security-essentials-multi-factor-authentication/&quot;&gt;multi-factor authentication&lt;/a&gt;. Those help make passwords suck less. But they do leave open some questions like: should you need to perform multi-factor authentication every time you log in? Should access be all or nothing, or should there be any accounting for degrees of risk?&lt;/p&gt;
&lt;p&gt;Conditional access policies, part of Microsoft Azure AD, goes a step further. It’s built on a &lt;a href=&quot;https://www.microsoft.com/en-ca/security/business/zero-trust&quot;&gt;zero trust model&lt;/a&gt;, meaning that it starts by assuming that you shouldn’t have access and then builds up trust based on several factors. Those factors usually include a password (except for &lt;a href=&quot;https://www.microsoft.com/en-ca/security/business/identity-access-management/passwordless-authentication&quot;&gt;the new passwordless option&lt;/a&gt;), but are not limited to them, in order to help cover over all the problems that come with passwords. Some of these other conditions include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sign-in risk&lt;/strong&gt;: a tool in Azure Identity Protection that evaluates risk on this particular sign-in, which includes variables like signing in from an anonymous IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User risk&lt;/strong&gt;: also part of Azure Identity Protection that evaluates risk based on the user’s behaviour over time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Device platform&lt;/strong&gt;: what kind of device are they trying to sign in on&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;: based on IP address, e.g. your office&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Device state&lt;/strong&gt;: paired with device compliance policies from Endpoint Management, this can set access rules based on whether the device is compliant or not&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/04/Conditional-Access-Policies.png&quot; alt=&quot;&amp;quot;Conditional Access Policies options&amp;quot;&quot; /&gt;
&lt;em&gt;Screenshot of options for conditional access policies&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Conditional access policies allow you to define exactly what you want to happen depending on a variety of risk factors. Along with those conditions, you get options to configure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What users or groups this policy applies to. For example, you probably want stricter conditions for admin accounts.&lt;/li&gt;
&lt;li&gt;What cloud apps or actions are affected. For example, perhaps in a low user risk scenario, you want to block access to SharePoint but not email.&lt;/li&gt;
&lt;li&gt;Whether you want to block or grant access. Grant access will allow signing in, but only after some extra security checks, like multi-factor or device compliance. Imagine a scenario like a user taking their work laptop to a coffee shop (use the location for the condition). You may want to allow that but require MFA again. The extra MFA check helps protect against the possibility that the laptop was stolen but it still lets the real user in.&lt;/li&gt;
&lt;li&gt;Session restrictions which can require signing in more frequently. In that coffee shop example, you may want to require signing in again every hour to limit potential that the user left their machine open to go to the bathroom.&lt;/li&gt;
&lt;li&gt;Whether the policy is on, off, or report-only. The report-only option can be helpful as a trial run to see how many people meet the conditions over a week before starting to enforce the restrictions. You may discover a lot more people work in coffee shops than you realized and that could alter your strategy of how to best enforce security.&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Endpoint Manager: Enrolling Devices</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/"/>
		<updated>2021-05-12T08:11:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/</id>
		<content type="html">&lt;p&gt;Suppose you’ve started to move toward managing your devices in Microsoft Endpoint Manager (Intune). &lt;a href=&quot;https://docs.microsoft.com/en-us/mem/intune/enrollment/device-enrollment&quot;&gt;There are a lot of methods available to do that&lt;/a&gt;. I’ll highlight just a few of the most interesting:&lt;/p&gt;
&lt;h2 id=&quot;windows-autopilot&quot; tabindex=&quot;-1&quot;&gt;Windows Autopilot &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/#windows-autopilot&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If the device was set up with Windows Autopilot, enrolling to Endpoint Manager is one of the options to happen immediately as part of the setup. No further actions are necessary.&lt;/p&gt;
&lt;h2 id=&quot;auto-enroll&quot; tabindex=&quot;-1&quot;&gt;Auto-enroll &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/#auto-enroll&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Auto-enrollment makes the process very simple. If you’ve set up automatic Mobile Development Management (MDM) and/or Mobile App Management (MAM) for all users or for a group that includes that user, then as soon as the user signs in on the machine with their business account, the device is added to Endpoint Manager.&lt;/p&gt;
&lt;p&gt;There are some other settings around this including whether they have to agree to a terms of use when they first sign in.&lt;/p&gt;
&lt;h2 id=&quot;device-enrollment-manager&quot; tabindex=&quot;-1&quot;&gt;Device enrollment manager &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/#device-enrollment-manager&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you prefer a more manual approach, you can designate specific staff (e.g. your IT team) as Device Enrollment Managers. Users with this permission can enroll up to 1000 devices each.&lt;/p&gt;
&lt;h2 id=&quot;co-management&quot; tabindex=&quot;-1&quot;&gt;Co-management &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-12-enrolling-devices-in-endpoint-manager/#co-management&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have an on-premise network with Configuration Manager, you can use co-management to split MDM duties between the two systems. You can even pick which workloads you want to be handled by Configuration Manager and which you want to be handled by Endpoint Manager.&lt;/p&gt;
&lt;p&gt;This can be a good strategy if you already have Configuration Manager and want to transition to Endpoint Manager one workload at a time, or could be a more permanent solution if you want to keep certain workloads on Configuration Manager.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Cannot Modify Header Information: Headers Already Sent</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-14-cannot-modify-header-information-headers-already-sent/"/>
		<updated>2021-05-14T14:34:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-14-cannot-modify-header-information-headers-already-sent/</id>
		<content type="html">&lt;p&gt;Recently I loaded up a client website to do some standard WordPress. The public site was fine, but when I tried to login to the admin, I got the dreaded White Screen of Death. For those unfamiliar, this is a blank white screen, with no error visible to help diagnose the problem.&lt;/p&gt;
&lt;p&gt;I began doing some general research on the White Screen of Death and trying the different common solutions: disable plugins (by renaming the plugins folder via FTP), update themes, update WordPress core. Nothing worked.&lt;/p&gt;
&lt;p&gt;Then I checked out the Apache error log and got a big hint:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP Warning: Cannot modify header information – headers already sent by (output started at [file structure]/wp-config.php:174) in [file structure]/wp-login.php on line 530&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I did some more research on that error and found this: &lt;a href=&quot;https://blog.templatetoaster.com/cannot-modify-header-information/&quot;&gt;How to fix PHP/WordPress Warning: Cannot Modify Header Information (templatetoaster.com)&lt;/a&gt;. The bottom line: look at the first file cited. That’s where the problem is.&lt;/p&gt;
&lt;p&gt;In my case, the error was in my wp-config file. It was as simple as having extra whitespace at the end of the file. That’s enough to take down the entire admin section of the site. Ultimately it was an easy fix, but hard to find, so hopefully this helps you if you have a similar problem.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>This Page Can&amp;#8217;t Load Google Maps Correctly</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-17-google-maps-error/"/>
		<updated>2021-05-17T19:54:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-17-google-maps-error/</id>
		<content type="html">&lt;p&gt;You may be browsing a website – your own or somebody else’s – and see this error:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“This page can’t load Google Maps correctly. Do you own this website?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It also has “For development purposes only” as a watermark repeating over the whole map.&lt;/p&gt;
&lt;p&gt;This error has become pretty common in the past few years. It comes out of a change in Google policies. Previously, you could use the Google Maps API to put a map on your website with no extra charge. You did not need to have a credit card on the Google account. That has changed. There’s no notification, so you won’t notice this unless you happen to visit the map on your website again, which most people rarely do after it’s been designed.&lt;/p&gt;
&lt;p&gt;You now need to meet two requirements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An API key on the site connecting to a project associated with your Google account*. If you’re building a Google Map into a CMS website (Drupal, WordPress, etc.) then it probably includes some instructions on how to do this connection.&lt;/li&gt;
&lt;li&gt;A valid payment method on the Google account. You can do this from pay.google.com. The billing account of the Map API project has to be connected to that payment method.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As with most other scenarios like this, you should have a generic Google account that can be shared by at least a couple of staff members. Do not use an individual user’s Google account – personal or business – as that will cause complications if you ever need to make changes and that person isn’t available.&lt;/p&gt;
&lt;p&gt;Importantly, you get a certain amount of API credit for free before you have to start paying. Most small to medium websites will likely end up not paying any extra fee. That’s at least true of Google’s rules today; they could easily change someday. You do need to be aware of that slight possibility.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Endpoint Manager: Windows Autopilot</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-19-windows-autopilot/"/>
		<updated>2021-05-19T20:08:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-19-windows-autopilot/</id>
		<content type="html">&lt;p&gt;Windows Autopilot is a great system for deploying new Windows 10 devices, especially in the age of COVID-19 and so many working from home. &lt;a href=&quot;https://docs.microsoft.com/en-us/mem/autopilot/windows-autopilot&quot;&gt;Here’s the official documentation breaking down the details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The high level overview is that the user of the machine receives it, perhaps at home or perhaps in an office. They turn it on. Depending on the configuration options the admin has set up, they may have as few as two things they need to do to get the device ready for use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect to the Internet.&lt;/li&gt;
&lt;li&gt;Login with their business Microsoft 365 email.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is much more straightforward than a typical Windows 10 setup, helping get around all those extra questions that usually come up. It also takes care of adding some key points of configuration, including connecting the device to Azure AD, enrolling in Microsoft Endpoint Manager, and restricting the creation of admin accounts (if you’re effectively being a remote admin).&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Power Automate: Create Site with SharePoint REST API</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-21-power-automate-create-site-with-sharepoint-rest-api/"/>
		<updated>2021-05-21T16:13:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-21-power-automate-create-site-with-sharepoint-rest-api/</id>
		<content type="html">&lt;p&gt;This post continues a series on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/sharepoint-site-provisioning/&quot;&gt;SharePoint site provisioning&lt;/a&gt;, unpacking some of the problems I’ve faced and overcome in building SharePoint site provisioning solutions.&lt;/p&gt;
&lt;p&gt;This post will look at dynamically creating SharePoint sites using Power Automate. An advantage of doing it this way is to automate different settings that can incorporate variables, as opposed to the standard interface tools for users to create new sites.&lt;/p&gt;
&lt;h2 id=&quot;check-if-site-already-exists&quot; tabindex=&quot;-1&quot;&gt;Check if site already exists &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-21-power-automate-create-site-with-sharepoint-rest-api/#check-if-site-already-exists&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This can be done with &lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/apis/site-creation-rest&quot;&gt;the SharePoint REST API&lt;/a&gt; if you want just a SharePoint site, or a new Group if you want all of the Group functionality (Teams, Planner, etc.). For this example, I’ll use the former.&lt;/p&gt;
&lt;p&gt;You will likely want some error checking, specifically to see if the site already exists at the requested URL. There could be a few ways to handle what to do if there is a conflict, depending on your context. Maybe you want to stop and send an email to notify the user of the issue. Maybe you want to assign a different URL and create a new site. Or you could allow it to update the existing site. For this demo, I’ll go with the last one. That makes my logic pretty simple: if site doesn’t exist, make it.&lt;/p&gt;
&lt;p&gt;I’ll use the Get Site API call to see if the site already exists.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Check-if-site-already-exists.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of settings for checking if site already exists&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action type: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: the root site, or another site that you know already exists&lt;/li&gt;
&lt;li&gt;Method: GET&lt;/li&gt;
&lt;li&gt;URI: /_api/SPSiteManager/status?url=’https%3A%2F%2F@{variables(‘tenant’)}.sharepoint.com%2Fsites%2F@{variables(‘projectURL’)}’&lt;/li&gt;
&lt;li&gt;Header 1 key: accept&lt;/li&gt;
&lt;li&gt;Header 1 value: application/json;odata.metadata=none&lt;/li&gt;
&lt;li&gt;Header 2 key: odata-version&lt;/li&gt;
&lt;li&gt;Header 2 value: 4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part of what that returns is a SiteStatus value. A value of 0 means that it hasn’t been created yet. A value of 2 means it has. There are also two less common responses: 1 means it is currently being provisioned and 3 means there was an error provisioning the site.&lt;/p&gt;
&lt;p&gt;In a more intensive real situation, I would also want to deal with those less common scenarios. But for this example, I’ll stay simple and just say that if it is 0, go ahead and make the site.&lt;/p&gt;
&lt;p&gt;Here’s the condition statement:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/If-Site-Exists.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of condition for if site already exists&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First piece of equation: int(body(‘Check_if_site_already_exists’)?[‘SiteStatus’])&lt;/li&gt;
&lt;li&gt;Boolean test: is equal to&lt;/li&gt;
&lt;li&gt;Second piece of equation: 0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;create-site&quot; tabindex=&quot;-1&quot;&gt;Create site &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-21-power-automate-create-site-with-sharepoint-rest-api/#create-site&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We’re ready to create the site, which can also be done with REST API calls.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Create-site.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of creating a SharePoint by REST API&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Site address: root site, or some other site you already know exists&lt;/li&gt;
&lt;li&gt;Method: POST&lt;/li&gt;
&lt;li&gt;Uri: /_api/SPSiteManager/create&lt;/li&gt;
&lt;li&gt;Header 1 key: accept&lt;/li&gt;
&lt;li&gt;Header 1 value: application/json;odata.metadata=none&lt;/li&gt;
&lt;li&gt;Header 2 key: odata-version&lt;/li&gt;
&lt;li&gt;Header 2 value: 4.0&lt;/li&gt;
&lt;li&gt;Body:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;pre class=&amp;quot;wp-block-code&amp;quot;&amp;gt;```
{
&amp;quot;request&amp;quot;: {
&amp;quot;Url&amp;quot;:&amp;quot;@{variables(&#39;siteURL&#39;)}&amp;quot;,
&amp;quot;Title&amp;quot;:&amp;quot;@{variables(&#39;projectName&#39;)}&amp;quot;,
&amp;quot;Description&amp;quot;:&amp;quot;Project site for: @{variables(&#39;projectName&#39;)}&amp;quot;,
&amp;quot;Lcid&amp;quot;:1033,
&amp;quot;WebTemplate&amp;quot;:&amp;quot;STS#3&amp;quot;
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can customize details from here, like adding error checking for the other site statuses, added an owner to the site you create, changing the template of the site, and so on.&lt;/p&gt;
&lt;p&gt;The next post in this series will work on adding temporary site scripts and designs for the new site.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SharePoint: Content Types</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-24-sharepoint-content-types/"/>
		<updated>2021-05-24T20:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-24-sharepoint-content-types/</id>
		<content type="html">&lt;p&gt;Content types are one of those features of SharePoint where you can be using SharePoint for years and never notice is there. They often aren’t an absolute necessity. But they do make some things much easier. The average user may not need to be familiar with them, but administrators should be.&lt;/p&gt;
&lt;p&gt;There are two major advantages to using content types: a standardized set of columns (metadata) and file templates.&lt;/p&gt;
&lt;h2 id=&quot;columns&quot; tabindex=&quot;-1&quot;&gt;Columns &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-24-sharepoint-content-types/#columns&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Columns in SharePoint are metadata about a file or about a list item. These can be of a variety of data types including yes/no fields, dropdown option lists, short text, long text, and more. The easy way to remember why they’re called columns is to imagine them in the most common view, with one row in a table for each item and a column in the table for each piece of data about that item. Once they’re all set up, columns can make a lot of things easier including seeing relevant data at a glance, searching for, sorting, and filtering the content.&lt;/p&gt;
&lt;p&gt;Now suppose you have 20 custom SharePoint lists that are fundamentally the same idea. Perhaps they had to be split to exist on different sites with different permissions, or perhaps they had to be split to keep each list under the 5000 limit threshold where viewing a list gets limited. They should all have the same 30 custom columns of data that needs to be tracked.&lt;/p&gt;
&lt;p&gt;Without content types, the way to do this is to repeat the process creating a column on every list separately. That’s already annoying. It gets even more annoying if you have to make a change – perhaps you realize a certain column should be long text instead of short text – and go through all 20 lists again. What if you make a mistake and name the column differently on one of the 20 lists but there’s already data in it by the time you notice? That might throw off other pieces like Power Automate processes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Custom-columns-on-content-type.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Custom columns for the Press Release content type&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With content types, it gets much easier and much less error-prone. You define the columns on the content type in one place, either specific to one site or globally for all sites, and add the content types to the list/library. If globally, it can take a couple of hours to propagate to all of the lists, but that’s it. That’s the whole process.&lt;/p&gt;
&lt;p&gt;Most of the time the instinct with a new list or library is to add the columns directly to that list or library and completely ignore content types. That’s fine if you know if you’re never going to need the same column set on another list. But if there’s any chance you will need it again, save yourself a lot of hassle and make it a content type in the first place.&lt;/p&gt;
&lt;h2 id=&quot;templates&quot; tabindex=&quot;-1&quot;&gt;Templates &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-24-sharepoint-content-types/#templates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The other big selling point of content types is specific to file libraries (not lists). Suppose you have a company template that all of your press release statements start from (company letterhead, etc.).&lt;/p&gt;
&lt;p&gt;Without content types with templates, your process may look something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep the template starting point file in a SharePoint site where only those who need it can see it.&lt;/li&gt;
&lt;li&gt;Every time somebody needs it, they go find that file and make a copy of it into the new location where they need a new one.&lt;/li&gt;
&lt;li&gt;They are then free to edit the copied version.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At best this is slow, with time needed to copy the template every time. At worst, it introduces other problems: can you adequately control who can edit the template file? what if somebody accidentally starts editing the template instead of making a new copy, an easy mistake to make?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Advanced-settings-on-content-type.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Advanced settings on a content type, including being able to upload a template&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With a content type, this gets much cleaner. Add the template file to the content type. Then when somebody tries to make a new item of that content type, it will start with the templated file instead of a blank document. They can edit the file from there. It’s fast and intuitive, access to editing the template is tightly controlled, and there’s no risk of somebody forgetting to copy before they dive in to edit.&lt;/p&gt;
&lt;h2 id=&quot;sharepoint-syntex&quot; tabindex=&quot;-1&quot;&gt;SharePoint Syntex &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-24-sharepoint-content-types/#sharepoint-syntex&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ll add a third point. &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-365/contentunderstanding/#get-started&quot;&gt;SharePoint Syntex&lt;/a&gt; is a relatively new product offering that uses machine learning to read data from files and apply that to the columns. It’s a valuable way to help automate applying metadata to files, which is something that people tend to not enjoy doing manually. I have not extensively tested out SharePoint Syntex, but it is my understanding that the machine learning models are applied on specific content types. If you want to use this tool you’ll end up using content types whether you realize it or not.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Endpoint Manager: Device Configuration Policies</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-26-device-configuration-policies/"/>
		<updated>2021-05-26T07:38:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-26-device-configuration-policies/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/enrolling-devices-in-endpoint-manager/&quot;&gt;You’ve got your devices enrolled in Endpoint Manager&lt;/a&gt;. Now what? This opens up lots of tools including configuration policies.&lt;/p&gt;
&lt;p&gt;Configuration policies allow for quickly rolling out the desired configuration to the device, without the user having to manually set it up. This can include a lot of different settings and vary by the operating system of the device. Some of the more interesting tools for Windows 10 includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email, contacts, calendar, and tasks (add the account corresponding to the user logged in)&lt;/li&gt;
&lt;li&gt;Restrict apps to only those from the Store&lt;/li&gt;
&lt;li&gt;Block access to system settings&lt;/li&gt;
&lt;li&gt;Password requirements&lt;/li&gt;
&lt;li&gt;Start menu&lt;/li&gt;
&lt;li&gt;Battery saver settings&lt;/li&gt;
&lt;li&gt;Edition upgrade (from Pro to Enterprise)&lt;/li&gt;
&lt;li&gt;Domain join&lt;/li&gt;
&lt;li&gt;VPN&lt;/li&gt;
&lt;li&gt;Wi-Fi&lt;/li&gt;
&lt;li&gt;Windows Hello for Business&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/VPN-Device-Config.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of options for configuring a VPN on Windows 10&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;VPN particularly stands out to me in the age of COVID-19 and lots of people working from home. Setting up a VPN is not something that is intuitive to most users. With a device configuration profile, they don’t have to figure that out themselves or lose time letting an IT staff member remote access to set it up.&lt;/p&gt;
&lt;p&gt;That’s not a comprehensive list. Ultimately, you can do a lot which helps save the user time configuring themselves and/or helps enforce some security blocking them from features they don’t need.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Power Automate: Temporary Site Scripts and Designs</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/"/>
		<updated>2021-05-28T11:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/</id>
		<content type="html">&lt;p&gt;This post continues a series on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/sharepoint-site-provisioning/&quot;&gt;SharePoint site provisioning&lt;/a&gt;, unpacking some of the problems I’ve faced and overcome in building SharePoint site provisioning solutions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/power-automate/create-site-with-sharepoint-rest-api/&quot;&gt;In the last post in this series&lt;/a&gt;, I created a SharePoint site programmatically. Suppose you want to update site scripts or site designs onto that new site. The advantage of doing this is that it can be fully automated based on another causal event setting it off, like filling out a Power App or creating an item in a SharePoint list, and incorporate variables. My simple example will use a variable of a link that will be added to the navigation of this new site.&lt;/p&gt;
&lt;h2 id=&quot;write-the-temporary-script&quot; tabindex=&quot;-1&quot;&gt;Write the temporary script &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#write-the-temporary-script&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Prepare your SharePoint site script, but leave a gap for the part where you need to put the variable. I recommend doing this in a separate code editor and saving the file. That makes it easier to roll back any changes and to detect syntax errors like a missing ]. Editing code directly in Power Automate can get messy.&lt;/p&gt;
&lt;p&gt;Once your script is ready, add that to a new Initialize Variable action in Power Automate, setting up a new string variable for the entire script. Within that script, you can insert any other variables you need to. Here’s my simple script:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/SiteScript.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of setting up the site script variable&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Initialize Variable&lt;/li&gt;
&lt;li&gt;Name: siteScript&lt;/li&gt;
&lt;li&gt;Type: String&lt;/li&gt;
&lt;li&gt;Value:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;$schema&amp;quot;: &amp;quot;https://developer.microsoft.com/json-schemas/sp/site-design-script-actions.schema.json&amp;quot;,
    &amp;quot;actions&amp;quot;: [
      {
        &amp;quot;verb&amp;quot;: &amp;quot;addNavLink&amp;quot;,
        &amp;quot;displayName&amp;quot;: &amp;quot;External Site&amp;quot;,
        &amp;quot;url&amp;quot;: &amp;quot;@{variables(&#39;linkURL&#39;)}&amp;quot;,
&amp;quot;isWebRelative&amp;quot;: false
      }
    ],
    &amp;quot;version&amp;quot;: 1
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;register-the-temporary-script&quot; tabindex=&quot;-1&quot;&gt;Register the temporary script &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#register-the-temporary-script&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that you’ve got the script written, complete with variable, you can use the SharePoint REST API action to register that site script on your SharePoint instance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Register-Site-Script.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of action to register site script&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: root site, or some other site on the tenant you know already exists&lt;/li&gt;
&lt;li&gt;Method: POST&lt;/li&gt;
&lt;li&gt;Uri: /_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.CreateSiteScript(Title=’Temporary script for adding link’)&lt;/li&gt;
&lt;li&gt;Header 1 key: accept&lt;/li&gt;
&lt;li&gt;Header 1 value: application/json;odata.metadata=minimal&lt;/li&gt;
&lt;li&gt;Header 2 key: Content-Type&lt;/li&gt;
&lt;li&gt;Header 2 value: application/json;charset=utf-8&lt;/li&gt;
&lt;li&gt;Header 3 key: odata-version&lt;/li&gt;
&lt;li&gt;Header 3 value: 4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also created a variable to capture the ID of the site script that was just created. You could do without this step, instead referencing back to the body of the response every time you need it, but it is easier to keep track of with a variable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/SiteScript-ID.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of setting the siteScriptID variable&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Initialize Variable&lt;/li&gt;
&lt;li&gt;Name: siteScriptID&lt;/li&gt;
&lt;li&gt;Type: String&lt;/li&gt;
&lt;li&gt;Value: body(‘Create_temp_site_script’)?[‘Id’]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;create-the-temporary-design&quot; tabindex=&quot;-1&quot;&gt;Create the temporary design &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#create-the-temporary-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you have a site script, you can now do essentially the same thing with registering a temporary site design that uses that script.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Create-Site-Design.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of registering the site design&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: root site, or another site on the tenant you know exists&lt;/li&gt;
&lt;li&gt;Uri: /_api/Microsoft.SharePoint.Utilities.WebTemplateExtensions.SiteScriptUtility.CreateSiteDesign&lt;/li&gt;
&lt;li&gt;Headers: [same as registering the site script above]&lt;/li&gt;
&lt;li&gt;Body:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;info&amp;quot;:{
&amp;quot;Title&amp;quot;:&amp;quot;Temporary site design for @{variables(&#39;siteName&#39;)}&amp;quot;,
&amp;quot;Description&amp;quot;:&amp;quot;Applies navigation links&amp;quot;,
&amp;quot;SiteScriptIds&amp;quot;:[&amp;quot;@{variables(&#39;siteScriptID&#39;)}&amp;quot;],
&amp;quot;WebTemplate&amp;quot;:&amp;quot;68&amp;quot;
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that WebTemplate 68 is a communication site. 64 would be a team site.&lt;/p&gt;
&lt;p&gt;As with site scripts, I want to grab the ID into a variable to make it a bit easier to reference in future actions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Site-Design-ID.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of setting site design ID variable&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Initialize Variable&lt;/li&gt;
&lt;li&gt;Name: siteDesignID&lt;/li&gt;
&lt;li&gt;Type: String&lt;/li&gt;
&lt;li&gt;Value: body(‘Create_temp_site_design’)?[‘Id’]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;delay&quot; tabindex=&quot;-1&quot;&gt;Delay &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#delay&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You may want a bit of a delay before applying the site design. This is to ensure that the site does already exist before you try to apply the design. Rather than guessing a specific amount of time for the site to be prepared (5 minutes has always been sufficient in my tests), you could also use a test to see if the site exists yet with a REST API call like the one above. In that case you could put that within a loop:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter loop only if site does not exist.&lt;/li&gt;
&lt;li&gt;In loop, delay one minute, then check if site exists yet.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That could result in small gains on average compared to always delaying 5 minutes. For this demo I stuck with simply delaying 5 minutes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Delay-5-minutes.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You also may need to delay much longer if your site scripts rely on &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/sharepoint/content-types/&quot;&gt;global content types&lt;/a&gt;. Those content types won’t be available on the site immediately. They could be up to 90 minutes in my tests. If you are using content types, you may want to do only a 3 or 5 minute delay now, apply one design that does most of what you want, then delay another 90 minutes before applying another design that handles those components. That way the site is at least partially usable in that 90 minute wait.&lt;/p&gt;
&lt;h2 id=&quot;apply-the-site-design&quot; tabindex=&quot;-1&quot;&gt;Apply the site design &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#apply-the-site-design&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Yet another REST API call will allow you to apply the site design that is now registered.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Apply-Site-Design.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of applying the site design&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: the new project site’s URL&lt;/li&gt;
&lt;li&gt;Uri: /_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.ApplySiteDesign&lt;/li&gt;
&lt;li&gt;Headers: [same as registering the site script above]&lt;/li&gt;
&lt;li&gt;Body:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;siteDesignId&amp;quot;:&amp;quot;@{variables(&#39;siteDesignID&#39;)}&amp;quot;,
&amp;quot;webUrl&amp;quot;:&amp;quot;@{variables(&#39;siteURL&#39;)}&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;clean-up&quot; tabindex=&quot;-1&quot;&gt;Clean up &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-28-power-automate-temporary-site-scripts-and-designs/#clean-up&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You don’t want to leave a script and design every time this runs, so you’ll want the Flow to delete those temporary scripts. This can also be done with SharePoint REST calls. First remove the design, then the script, since the design depends on the script.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Delete-Site-Design.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of deleting the site design&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: the root site, or another site on tenant you know exists&lt;/li&gt;
&lt;li&gt;Uri: /_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.DeleteSiteDesign&lt;/li&gt;
&lt;li&gt;Headers: [same as registering the site script above]&lt;/li&gt;
&lt;li&gt;Body:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{&amp;quot;id&amp;quot;:&amp;quot;@{variables(&#39;siteDesignID&#39;)}&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Delete-Site-Script.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of deleting the site script&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: Send an HTTP Request to SharePoint&lt;/li&gt;
&lt;li&gt;Site Address: the root site, or another site on tenant you know exists&lt;/li&gt;
&lt;li&gt;Uri: /_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.DeleteSiteScript&lt;/li&gt;
&lt;li&gt;Headers: [same as registering the site script above]&lt;/li&gt;
&lt;li&gt;Body:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;{&amp;quot;id&amp;quot;:&amp;quot;@{variables(&#39;siteScriptID&#39;)}&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it: you now have a Flow that generates temporary site scripts and designs, applies them, and then cleans up afterward.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Endpoint Manager: Device Compliance Policies</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-05-31-device-compliance-policies/"/>
		<updated>2021-05-31T15:16:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-05-31-device-compliance-policies/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/enrolling-devices-in-endpoint-manager/&quot;&gt;Once you’ve got devices enrolled in Microsoft Endpoint Manager&lt;/a&gt;, one of the very useful things you can apply are compliance policies. These provide you a way to monitor and enforce restrictions on devices which are not following the proper practices that you want in your organization.These compliance policies can be set up for devices of multiple operating systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Windows 10 and later&lt;/li&gt;
&lt;li&gt;Windows 8.1 and later&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As is the case elsewhere in Endpoint Manager, Chromebook is the noticeable omission.&lt;/p&gt;
&lt;p&gt;The exact options from there will vary depending on the platform, but they break down into three decisions: how do you define non-compliance (compliance settings), what happens if it’s not compliant (actions for noncompliance), and who is bound by this compliance policy (assignments).&lt;/p&gt;
&lt;h2 id=&quot;compliance-settings&quot; tabindex=&quot;-1&quot;&gt;Compliance settings &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-31-device-compliance-policies/#compliance-settings&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This tab defines what it takes to be considered compliant vs non-compliant. Windows 10 has the most options and I won’t list them all, but some that stand out include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Require Bitlocker&lt;/strong&gt;: encrypted hard drive&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minimum and maximum OS version&lt;/strong&gt;: this is a great way to make sure that updates are happening, e.g. you may want to make sure nobody is on a version older than a year&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Firewall&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Antivirus&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Antispyware&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microsoft Defender Antimalware&lt;/strong&gt;, including &lt;strong&gt;Real-time protection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microsoft Defender for Endpoint&lt;/strong&gt;: require that the device is under a certain score if it is enrolled in Defender for Endpoint&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, I suggest that you at least require Bitlocker, firewall, antivirus, antispyware, and Defender antimalware with real-time protection. There are a lot of variables, e.g. if you are using a different anti-virus solution instead, but I think that’s a good baseline.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Device-Compliance-Settings.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of some of the device compliance settings, including requiring Bitlocker&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;actions-for-noncompliance&quot; tabindex=&quot;-1&quot;&gt;Actions for noncompliance &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-31-device-compliance-policies/#actions-for-noncompliance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next question is what you want to happen if the device violates the compliance rules. There are a few options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mark as noncompliant&lt;/strong&gt;: you’ll always want this, but you get an option of how long before that happens. That decision will depend largely on other settings. For example, if this is the only consequence, it can be a good way to monitor violations to mark noncompliant immediately. But if you’re pairing it with something like conditional access, you don’t want to end up immediately locking out a user from company resources because they were a little slow updating Windows. In that case, you’re likely better off sending an email warning right away and not marking noncompliant for a couple of weeks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Send email to end user:&lt;/strong&gt; this is a helpful tool if the factor not in compliance is something that the end user can easily fix themselves. You can even define a message template to provide instructions on how to fix it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Retire the noncompliant device:&lt;/strong&gt; this will remove company information from the device. This should be the last resort only if the user did not get the device back into compliance quickly enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Device-Compliance-Actions.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Possible actions when device is not compliant&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;assignments&quot; tabindex=&quot;-1&quot;&gt;Assignments &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-05-31-device-compliance-policies/#assignments&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, there are options for who this compliance policy applies to: all users or specific groups. You may want to apply a more lenient policy to everybody, then have more strict policies for users like senior management who have access to the most sensitive information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/05/Device-Compliance-Assignments.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Options for who this policy is applied to&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Power Automate: The First Function</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-02-power-automate-the-first-function/"/>
		<updated>2021-06-02T17:41:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-02-power-automate-the-first-function/</id>
		<content type="html">&lt;p&gt;A scenario I’ve encountered several times in Power Automate is needing to get just one item from a data source, such as a SharePoint list, based on a specific column such as Title matching what I am looking for. Power Automate only has a function to get all the SharePoint items that match the criteria, unless you already know the specific ID you are looking for. So you end up with an array returned, even if there’s only one item in it. That then creates a bit of nuisance when you want to access that one item, since Power Automate will go ahead and put that within a for each loop structure. Knowing there’s only one item, it is a negligible difference in Flow speed, but it is suboptimal code looking at a for each loop that isn’t really looping.&lt;/p&gt;
&lt;p&gt;How do you get around that? The Microsoft Tech Community recently answered that with the first() function. The full details are in the link below:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-365-pnp-blog/avoid-unnecessary-looping-apply-to-each-in-power-automate/ba-p/2190265?WT.mc_id=m365-24198-cxa&amp;amp;utm_source=collab365&amp;amp;utm_medium=collab365today&amp;amp;utm_campaign=daily_digest&quot;&gt;Avoid Unnecessary Looping (Apply to each) in Power Automate – Microsoft Tech Community&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>HTwoO in SharePoint Framework</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-04-htwoo-in-sharepoint-framework/"/>
		<updated>2021-06-04T17:48:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-04-htwoo-in-sharepoint-framework/</id>
		<content type="html">&lt;p&gt;I recently learned about a new framework for a fully HTML and CSS implementation of Microsoft’s Fluent Design system. This can make your life a lot easier when designing web apps that stick to that design. I haven’t tried it out yet – I’m hoping to get a full SharePoint Framework experiment together soon – but it looks very promising.&lt;/p&gt;
&lt;p&gt;Here are some key links to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://n8d.at/htwoo-ui-launched-fluent-design-in-html-and-css/&quot;&gt;Introduction to HTwoO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://n8d.at/how-to-use-htwoo-with-a-reactjs-web-part/?utm_source=collab365&amp;amp;utm_medium=collab365today&amp;amp;utm_campaign=daily_digest&quot;&gt;Adding HTwoO to a React SharePoint Framework web part&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoftcloudshow.com/podcast/Episodes/407-htwoo-a-pure-html-css-fluent-design-system-stefan-bauer/&quot;&gt;Microsoft Cloud Show podcast episode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>The Time I Recommended Yammer</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-07-the-time-i-recommended-yammer/"/>
		<updated>2021-06-07T11:38:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-07-the-time-i-recommended-yammer/</id>
		<content type="html">&lt;p&gt;Yammer is often the forgotten piece of Microsoft 365. Some people would even argue that Microsoft has largely forgotten about it. It’s an enterprise social network. It feels a lot like using Facebook, but it’s restricted to your organization.&lt;/p&gt;
&lt;p&gt;Several years ago I was tasked with planning an intranet based on SharePoint. A significant portion of the goal was to further enhance communication across the organization, including more casual conversations and not just strictly work conversations. The assumption going in was that SharePoint was the solution for that as well as sharing resource files.&lt;/p&gt;
&lt;p&gt;Note that this was not long before modern SharePoint began. It was mostly ugly. The conversation web part sucked. It was quite functional for managing files, but was not a pleasant experience. I realized that no, SharePoint is not the solution for everything.&lt;/p&gt;
&lt;p&gt;But I discovered another part of Microsoft 365: Yammer. Yammer was a perfect solution for what we needed in terms of easy communication. I pitched it to the ultimate decision-maker and at first she was a little tentative to commit to a second app, but she came around to realizing my point.&lt;/p&gt;
&lt;p&gt;The graphic I’m including below is a newer depiction from Microsoft that helps capture the same idea:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/yammer-vs-teams.jpg&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Graphic demonstrating how Teams, Yammer, Outlook, and SharePoint fill different roles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Teams is great for the inner loop: the conversations you have with your core teams regularly. Outlook is the ubiquitous targeted communication tool: everyone has email and it’s a good failsafe especially for communication outside your organization. SharePoint is the file system underneath it all, which you may or may not browse directly. And Yammer is the outer loop, great for all-staff and more casual communication.&lt;/p&gt;
&lt;p&gt;So, would I still recommend Yammer? In some circumstances, yes. Some things have changed since then, like the introduction and centrality of Teams to take up that “inner loop.” But Yammer, while not the most complete tool in the world, is still good for the same thing I recommended it for all those years ago: the “outer loop” user-friendly open conversations across a wide organization.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Cloud App Security</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-10-microsoft-cloud-app-security/"/>
		<updated>2021-06-10T11:05:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-10-microsoft-cloud-app-security/</id>
		<content type="html">&lt;p&gt;If you’re an IT admin, do you know what apps users are putting on devices alongside company data? Do you know all the apps that they are directly putting company data into, thinking it helps solve a problem for them? This is the problem of “Shadow IT.” If it’s a personal device, it’s even worse, as they might be installing all kinds of insecure apps without IT approval and it wouldn’t take much to make a mistake like copying and pasting company data or uploading a file into the wrong app.&lt;/p&gt;
&lt;p&gt;The first lesson of this problem is that it is very important that IT provides the apps that every user needs. Users shouldn’t have to decide for themselves what to use and whether it is secure enough. If they’re forced to make those decisions instead of IT, there’s a good chance they won’t consistently make good ones.&lt;/p&gt;
&lt;p&gt;The Microsoft Cloud App Security dashboard helps with this problem. It empowers admins to see the apps being installed on corporate devices. It also allows you to set policies around those apps to help contain data.&lt;/p&gt;
&lt;h2 id=&quot;discover&quot; tabindex=&quot;-1&quot;&gt;Discover &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-10-microsoft-cloud-app-security/#discover&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Step one is discovering what apps are on the devices. The Discover -&amp;gt; Create snapshot report will allow you to create a report based on the logs from services like corporate firewalls.&lt;/p&gt;
&lt;p&gt;The Cloud app catalog will show all of the apps in Microsoft’s directory. There are thousands. They all come with detailed risk scores providing information on the app, including its security, and legal. For example, SugarCRM scores an 8 overall, with a 7 in general, 10 in security, 4 in compliance, and 10 in legal. That’s pretty good, but depending on the needs of your organization (like HIPAA compliance), there might be some issues to look into there. This is helpful information to decide whether to approve or deny an app for your users.&lt;/p&gt;
&lt;h2 id=&quot;investigate&quot; tabindex=&quot;-1&quot;&gt;Investigate &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-10-microsoft-cloud-app-security/#investigate&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Investigate section allows for checking in on reports for users, files, and activity across connected apps. You can set up connected apps in this section as well, so that apps like Office 365 report back to CAS.# PPoliciesThe policies section comes with several great policies by default. Familiarize yourself with these defaults before starting to create a new one, as there might already be something close to what you want that just needs a bit of tweaking. There’s a lot here, so I’ll run down the policy types quickly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Access:&lt;/em&gt;  these require first having &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-conditional-access-policies/&quot;&gt;conditional access policies&lt;/a&gt; configured. Then you can enforce access requirements logging in to other apps.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Activity:&lt;/em&gt;  these monitor user activity within their apps, like logging in from a risky IP address or mass downloads (which could suggest something like a disgruntled employee grabbing as much as they can on the way out).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;App discovery:&lt;/em&gt;  these policies help you respond when a new app is discovered to be in use in the organization.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Cloud discovery anomaly detection:&lt;/em&gt;  these help detect unusual behaviour like suddenly uploading a lot more data than in a normal workday.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;File:&lt;/em&gt;  these help with detecting potential issues at a file level, such as using &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/data-loss-prevention-dlp-policies/&quot;&gt;a DLP engine&lt;/a&gt;  to notice when sensitive data is shared to a different app, or files shared to other domains.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Session:&lt;/em&gt;  these provide real-time monitoring and control over what users are doing in cloud apps, while they’re signed in to that session. They also require conditional access policies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With each policy, you can set the severity level and whether you want to be alerted by email, text message, or start off a Flow in Power Automate to respond in other ways.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SharePoint: Overriding a Site&amp;#8217;s Home Page</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-14-overriding-a-sharepoint-sites-home-page/"/>
		<updated>2021-06-14T17:26:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-14-overriding-a-sharepoint-sites-home-page/</id>
		<content type="html">&lt;p&gt;This post continues a series on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/sharepoint-site-provisioning/&quot;&gt;SharePoint site provisioning&lt;/a&gt;, unpacking some of the problems I’ve faced and overcome in building SharePoint site provisioning solutions.&lt;/p&gt;
&lt;p&gt;At this point in the series, we’ve now created new SharePoint sites and applied temporary site scripts and site designs. There is one big feature missing from site scripts and site designs, though: templating the home page. You can’t simply say that a project site design should always contain a home page with these specific web parts. This may not be true forever – Microsoft is steadily improving site templating – but as of working on this project a few months ago, it required a bit of a workaround.&lt;/p&gt;
&lt;h2 id=&quot;the-idea&quot; tabindex=&quot;-1&quot;&gt;The idea &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-14-overriding-a-sharepoint-sites-home-page/#the-idea&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here’s the basic idea that we’ll do to get around this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Design your homepage on some other SharePoint site, with permissions locked down so that nobody sees it or can edit it who shouldn’t.&lt;/li&gt;
&lt;li&gt;Within the provisioning Flow, after the new site is created, copy the page from the template site to the new site, overriding the name of “Home” so that it takes over the homepage.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;the-pro-and-con&quot; tabindex=&quot;-1&quot;&gt;The pro and con &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-14-overriding-a-sharepoint-sites-home-page/#the-pro-and-con&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The nicest thing about this approach is that it makes it very easy to update the home page. Anybody with the permission to do so can go to that template site’s home page and edit it. That’s it. There is no PowerShell or JSON to update a site script or design.&lt;/p&gt;
&lt;p&gt;The biggest negative is the other side of that coin: it requires that nobody delete or rename that homepage file on that template site and there’s no warning if somebody did try to do that. You can recover within 93 days if somebody does delete it and you notice by way of the Flow failing, but it’s still not ideal that it’s even possible for a user to do that without knowing the consequences.&lt;/p&gt;
&lt;h2 id=&quot;the-copy-action&quot; tabindex=&quot;-1&quot;&gt;The copy action &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-14-overriding-a-sharepoint-sites-home-page/#the-copy-action&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you don’t already have a template site with some locked down permissions, create it and then design the homepage. This homepage can use relative web parts, like the documents library of that site.&lt;/p&gt;
&lt;p&gt;When that’s ready, it only takes a “Copy file” SharePoint action in the Flow to handle the copying. This can be a bit smoother than some previous actions which required the HTTP REST API calls. Those needed more flexibility using variables defined in the Flow. This one is copying from the same location every time, so it can stay simpler.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/CopyHomepage.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Current site address: select your template site&lt;/li&gt;
&lt;li&gt;File to copy: /SitePages/Home.aspx&lt;/li&gt;
&lt;li&gt;Destination site address: the SiteURL variable used previously, for the full URL of the new site&lt;/li&gt;
&lt;li&gt;Destination folder: /SitePages&lt;/li&gt;
&lt;li&gt;If another file is already there: Replace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that this action depends on the new site already being fully created. &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/power-automate/temporary-site-scripts-and-designs/&quot;&gt;If you followed my previous post&lt;/a&gt;, there was a delay there for the purpose of applying the site design. If you don’t already have a delay between the request to create the site and copying this file, you’ll need to add one.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Considerations Migrating IMAP to M365</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/"/>
		<updated>2021-06-16T13:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/</id>
		<content type="html">&lt;p&gt;Email migrations are one of those tasks you won’t have to do often, but you’ll really want to make sure you’re doing it correctly when it does need to happen. As much as collaboration tools like Microsoft Teams and Slack have taken over a lot of communication, email is still a central component of many organizations.&lt;/p&gt;
&lt;p&gt;There are lots of permutations of migrating email from one service to another. In this post I’ll focus on one I’ve done a few times and is more likely with smaller organizations: from a web server to Microsoft 365. These smaller organizations often set up their email on the same server as their website many years ago. Those email services are usually quite bad – slow, low storage limits, bad spam filtering, emails might sync across devices but contacts and calendar don’t, etc. – but maybe they were good enough for a long time and it’s a pain to switch. The need for a migration might also come up when the organization wants to move their website hosting and suddenly realizes the flaw in having their email hosting connected to the same account.&lt;/p&gt;
&lt;p&gt;I’m not going to break down the detailed steps of a migration. These are well documented by Microsoft. Instead, I’m going to mention a few potential complications to be aware of.&lt;/p&gt;
&lt;h2 id=&quot;plan-your-time&quot; tabindex=&quot;-1&quot;&gt;Plan your time &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/#plan-your-time&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some of the steps take time. You won’t do this all in one day. But if you plan it properly, it can be a seamless transition for the users. So plan out what your steps will look like, which might be something like this:&lt;/p&gt;
&lt;p&gt;Day one: create the new accounts in Microsoft 365. Take a look at the migration process to make sure you’ve got a good understanding. Especially if you haven’t done it before, do a trial run with just one of the email accounts. Put out the request for all the credentials you need, including the IMAP server details and the passwords of current users. Make sure to collect these securely, using tools like &lt;a href=&quot;https://quickforget.com/&quot;&gt;QuickForget&lt;/a&gt;. Also make sure you have any alternate emails for users in case you need to contact them while they don’t have their work email.&lt;/p&gt;
&lt;p&gt;Wait a couple of days to get all the passwords.&lt;/p&gt;
&lt;p&gt;Day three: prepare the spreadsheet with all the user names and passwords. Start the migration process.&lt;/p&gt;
&lt;p&gt;Day four: check in to see how the migration went. Ask a few users to confirm that all their content copied correctly. Notify everybody of the time that their email will change and what they need to do to access it, with some detailed instructions of how to log in to their new accounts and add them to Outlook. They can try to access their new accounts already – they exist, just might not have all the content yet.&lt;/p&gt;
&lt;p&gt;Day five: once you’ve confirmed everything is copied over well, change the DNS records to point all new email to Microsoft 365 instead of the IMAP server. This could take from minutes to a day depending on the DNS server. Do this outside of business hours if possible, so the users never notice the in-between period where some emails go to the old mailbox and some to the new. Let the users know that they should start accessing from Microsoft 365 any time now, reminding them of the instructions.&lt;/p&gt;
&lt;p&gt;Day six: confirm everybody is successfully accessing the new mailbox, providing added training or support as necessary.&lt;/p&gt;
&lt;p&gt;You don’t have to follow this exact timeline. It’s just a demonstration to point out there will be gap times where you have to wait between steps, so plan accordingly.&lt;/p&gt;
&lt;h2 id=&quot;pop-and-imap&quot; tabindex=&quot;-1&quot;&gt;POP and IMAP &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/#pop-and-imap&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Make sure people aren’t accessing via POP. If a user is checking their email only using Outlook on a single computer with the POP protocol instead of IMAP, changes they make on their computer (like folder structures) do not sync back to the server. The migration process is server-to-server, so this means that you end up migrating the unsorted mailbox on the server instead of the nicely organized structure of the computer. That’s not good.&lt;/p&gt;
&lt;p&gt;In this case, the best solution may be to use the PST export and import in desktop Outlook to migrate this mailbox.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Walk the user through exporting their mailbox as a PST.&lt;/li&gt;
&lt;li&gt;Either walk them through adding their new account in Outlook, or have them send you the file and you can do it for them.&lt;/li&gt;
&lt;li&gt;Import the PST of the old mailbox into the new mailbox in Outlook.&lt;/li&gt;
&lt;li&gt;Wait for everything to sync back to the Microsoft server, possibly hours depending on the mailbox size.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a slow but straightforward process, not too onerous as long as you don’t have to do it for a lot of users.&lt;/p&gt;
&lt;h2 id=&quot;contacts-and-calendar&quot; tabindex=&quot;-1&quot;&gt;Contacts and calendar &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/#contacts-and-calendar&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;IMAP migrations handle email, including folder structures. They don’t include contacts and calendar. Users have to do that manually. If the users want to migrate those things (they may not, depending how they use them), make sure they have instructions for how to export their address book and calendar and then import to the new Microsoft mailbox.&lt;/p&gt;
&lt;h2 id=&quot;training&quot; tabindex=&quot;-1&quot;&gt;Training &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-16-considerations-migrating-imap-to-m365/#training&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ve already mentioned this, but don’t forget training. If you spend a lot of time in Microsoft 365 like I do, it might be easy to overlook that you’ve just set up accounts for people who may have never used Microsoft services before. You’ll need to make sure they know everything they need to know. That includes things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to check their new email: on the web, desktop Outlook, mobile Outlook or other app&lt;/li&gt;
&lt;li&gt;Installing the desktop Office apps if they’re starting those subscriptions at the same time, which is likely&lt;/li&gt;
&lt;li&gt;Some core Microsoft 365 admin functions like adding new users, groups, and resetting passwords for a couple of their trusted admin users&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Movie Directory Part 1: The Data</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-18-movie-directory-part-1-the-data/"/>
		<updated>2021-06-18T13:52:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-18-movie-directory-part-1-the-data/</id>
		<content type="html">&lt;p&gt;I recently decided to do more experimentation with Dataverse (formerly Common Data Service) in the Power Platform. I did this by making myself an app to solve a need I have myself: a movie directory app. I wanted to be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Track in what formats I own a movie (Blu-ray, DVD, digital)&lt;/li&gt;
&lt;li&gt;Link to JustWatch to find where I could stream a movie&lt;/li&gt;
&lt;li&gt;Assign a movie to different lists&lt;/li&gt;
&lt;li&gt;Streamline a process for grabbing the movie cover image&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are good apps out there that do these things, but I never found something to do them all in one place. More than intending to use it, though, it was mostly an excuse to try out some things in Dataverse and Power Apps. In this post I’ll describe my data structure in Dataverse. In the next post I’ll walk through a couple complicated features of the Power App itself. Then I’ll detail the Power Automate Flow that I used to help streamline grabbing movie cover images, with some limitations on how much I could do without a premium license.&lt;/p&gt;
&lt;p&gt;Here’s the table that I created, appropriately named “Movie.”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Dataverse-table.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Table summarizing my Movie DataVerse structure&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many of these fields are the defaults that come with any new table, but this is what I added:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cover&lt;/strong&gt;: data type Image and the flag set for Primary Image.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JustWatch&lt;/strong&gt;: data type URL.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Last Watched&lt;/strong&gt;: data type Date Only. This is used to track when we last watched something, particularly something we owned, to help us easily identify when we completely forgot about a movie we own.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Owned:&lt;/strong&gt; data type Choice, where the choice options are Blu-ray, DVD, Movies Anywhere, Google Play, Microsoft, Vudu.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Watchlist:&lt;/strong&gt; data type Choice, where the choice options are whether this movie is for just me, just my wife, together, or not on any list at the moment. This is to help prevent “Netflix cheating:” watching something independently that the other was expecting to be together.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Year:&lt;/strong&gt; data type Whole Number. This is to help distinguish when multiple movies over different years have the same title.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s it. It’s a pretty simple data structure. I did at times toy with more like a Streaming choice that allowed for specifying the services the movie is currently on, but cut that out and replaced it with the JustWatch link because it would be much more hassle than it’s worth to keep those up-to-date.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>CiviCRM: Personal Campaign Pages</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-21-civicrm-personal-campaign-pages/"/>
		<updated>2021-06-21T14:28:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-21-civicrm-personal-campaign-pages/</id>
		<content type="html">&lt;p&gt;Have you ever taken part in a non-profit fundraising event where you get your own personal webpage that you can direct people to as a way for them to sponsor you directly in the event? Personally I am happy to participate in &lt;a href=&quot;https://cnoy.org/home&quot;&gt;the Coldest Night of the Year&lt;/a&gt; every year, which does have this type of system (not in CiviCRM).&lt;/p&gt;
&lt;p&gt;In the language of &lt;a href=&quot;https://tech.ryanrobinson.ca/crm/civicrm/civicrm-overview/&quot;&gt;CiviCRM&lt;/a&gt;, these are Personal Campaign Pages. While CiviCRM does offer this functionality, it has some major holes in it. Like a few areas of CiviCRM, it feels like somebody threw it together quickly and then mostly forgot about it. Consequently, I had a hard time ever recommending it as a good solution, even if a client was already heavily using CiviCRM happily. &lt;a href=&quot;https://docs.civicrm.org/user/en/latest/contributions/personal-campaign-pages/&quot;&gt;Here’s the official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are the three biggest problems I found when trying to use this feature:&lt;/p&gt;
&lt;h2 id=&quot;confusing-to-set-up&quot; tabindex=&quot;-1&quot;&gt;Confusing to set up &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-21-civicrm-personal-campaign-pages/#confusing-to-set-up&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The way that CiviCRM presents options to you is confusing. Personal campaign pages can be used to recruit new participants or to gather donations. They can also be attached to either an event or a contribution page. So there are four combinations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On an event, using campaign pages to recruit new participants&lt;/li&gt;
&lt;li&gt;On an event, using campaign pages for participants to fundraise (the most common I’ve seen, like the CNOY setup)&lt;/li&gt;
&lt;li&gt;On a contribution page, using campaign pages to recruit participants (this scenario makes the least sense to me)&lt;/li&gt;
&lt;li&gt;On a contribution page, using campaign pages to fundraise&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maybe having all four options is justifiable. The bigger problem is the settings don’t make it clear enough which combination you want until you try it out and realize you got it wrong.&lt;/p&gt;
&lt;h2 id=&quot;no-participant-directory&quot; tabindex=&quot;-1&quot;&gt;No participant directory &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-21-civicrm-personal-campaign-pages/#no-participant-directory&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most natural thing that you want in a scenario like Coldest Night of the Year? A list of all the participants so that visitors to the site can find who they want to support, as well as things like leaderboards. This is common in these fundraising systems. The CiviCRM PCPs do not offer this.&lt;/p&gt;
&lt;p&gt;If your CiviCRM is built on top of a Drupal site (the best option), you can make something work using views to find all the PCPs of participants tied to an event. But that shouldn’t be necessary; that really should be a feature that’s part of the CiviCRM offering. We put in a lot of effort with views and custom PHP development to try to make some friendly user interfaces for participants and donors and even then it was a little rough compared to other systems out there.&lt;/p&gt;
&lt;h2 id=&quot;no-teams&quot; tabindex=&quot;-1&quot;&gt;No teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-21-civicrm-personal-campaign-pages/#no-teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A lot of these types of events go most smoothly when the participants can sign up as part of a team, which adds elements of comradery and competition. The CiviCRM function does not handle this at all. There was an extension that did it, but that extension got abandoned after a couple of years, leaving one of our clients stranded without that working at all anymore and data in their database with no easy way to convert it to something useful. When it was working, it was similarly as rough as our participant directory workarounds.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Excel vs SharePoint Lists</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/"/>
		<updated>2021-06-23T18:50:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/</id>
		<content type="html">&lt;p&gt;I’ve been asked the question before: when should I use Microsoft Excel and when should I use SharePoint lists? At first I didn’t have a great answer, but I thought about it, looked into it a bit more, and this is what I settled on:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Excel is better when you need to do operations on the whole data set. SharePoint lists are better when the list items stand more-or-less as independent objects.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let’s break down a bit of why I concluded that.&lt;/p&gt;
&lt;h2 id=&quot;excel-operations&quot; tabindex=&quot;-1&quot;&gt;Excel: operations &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/#excel-operations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Excel can do a lot of data crunching that SharePoint lists don’t on their own (maybe with Power BI, but let’s ignore that for now). You want to make an easy chart summarizing the data? That’s Excel. You want to sum a column? That’s Excel. You want to calculate different multipliers based on different variables, like a complex budget or quote spreadsheet? That’s Excel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Excel-sums.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;A simple Excel table doing sum calculations in both directions&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;sharepoint-list-editing&quot; tabindex=&quot;-1&quot;&gt;SharePoint list: editing &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/#sharepoint-list-editing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;SharePoint lists are much easier to edit if you need to change one particular item. You can open up a form, either using the default SharePoint forms or a connected Power App, to edit that particular item. You can also edit that one through a stand-alone Power App, through a Flow in Power Apps, or through the mobile Lists app. Much more than with Excel, it is designed to see a single item on its own and make edits as necessary.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Edit-Issue.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Form to edit a single item in SharePoint&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;sharepoint-list-sorting-and-filtering&quot; tabindex=&quot;-1&quot;&gt;SharePoint list: sorting and filtering &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/#sharepoint-list-sorting-and-filtering&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Excel can do some sorting and filtering, but it isn’t completely intuitive. It’s easy to accidentally end up sorting just one column instead of all the associated data in other columns, ruining the data (hit undo).&lt;/p&gt;
&lt;p&gt;Sorting and filtering is much more intuitive in SharePoint lists. You’ve likely encountered the same kinds of interface on many other websites with rows of data. Just click on the heading to sort or bring up the filters menu. You won’t ever accidentally jumble your data because every row is a distinct object.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Column-settings.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Options that appear when clicking on a column header, including sorting&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;sharepoint-list-saved-views&quot; tabindex=&quot;-1&quot;&gt;SharePoint list: saved views &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-23-microsoft-excel-vs-sharepoint-lists/#sharepoint-list-saved-views&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Related to sorting and filtering, SharePoint makes it easy to save different views. These views can be simple tables but with different sorts and filters applied, or could be much more complicated with &lt;a href=&quot;https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/column-formatting&quot;&gt;list and column formatting&lt;/a&gt;. These views can be saved and shared with everybody else that uses the list, or could be kept private for just you. This is extremely valuable functionality.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Views-menu.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Views menu including editing views and changing between existing views&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Movie Directory Part 2: Gallery and Filters</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-25-movie-directory-part-2-gallery-and-filters/"/>
		<updated>2021-06-25T18:03:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-25-movie-directory-part-2-gallery-and-filters/</id>
		<content type="html">&lt;p&gt;In &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/power-apps/movie-directory-part-1-the-data/&quot;&gt;Movie Directory Part 1&lt;/a&gt;, I described what I was aiming to achieve with this personal project, as well as the Dataverse structure.&lt;/p&gt;
&lt;p&gt;In this post, I’ll describe at a high level the design of the Power App and the gallery view and filters. Most of it I’ll keep at a high-level, not step-by-step, as I used a lot of the out-of-the-box functionality.&lt;/p&gt;
&lt;h2 id=&quot;screens&quot; tabindex=&quot;-1&quot;&gt;Screens &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-25-movie-directory-part-2-gallery-and-filters/#screens&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are four screens involved in the app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gallery view that shows all of the movies, with the cover art behind the title, year, and last time we watched it&lt;/li&gt;
&lt;li&gt;Filters screen that allows you to specify filters that apply on the gallery view&lt;/li&gt;
&lt;li&gt;View details screen of a single movie&lt;/li&gt;
&lt;li&gt;Edit details screen of a single movie, including a new movie&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;all-movies&quot; tabindex=&quot;-1&quot;&gt;All Movies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-25-movie-directory-part-2-gallery-and-filters/#all-movies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Gallery-view.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Gallery view. We own all the Alien movies&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The majority of this screen is a Gallery component, with some minor changes to show exact details I wanted to show. The biggest change is incorporating the filters from the filters screen, which required this in the OnVisible field to handle whether there are filters set or not:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set(MoviesFilter1,If(!IsBlank(varWatchlist)&amp;amp;&amp;amp;varWatchlist&amp;lt;&amp;gt;&amp;quot;None&amp;quot;,Filter(Movies,Text(Watchlist)=varWatchlist),Movies));
Set(MoviesFilter2,If(!IsBlank(varOwned),Filter(MoviesFilter1,varOwned in Owned),MoviesFilter1));
Set(MoviesFilter3,If(!IsBlank(varLastWatched),Filter(MoviesFilter2,&#39;Last Watched&#39;&amp;gt;=varLastWatched||IsBlank(&#39;Last Watched&#39;)),MoviesFilter2));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this in the Items field to only show those with the right filters:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SortByColumns(
    If(IsBlank(TextSearchBox1.Text),MoviesFilter3, Filter(Movies,TextSearchBox1.Text in Text(Name))),
        &amp;quot;crfa4_name&amp;quot;, 
        If(SortDescending1, SortOrder.Descending, SortOrder.Ascending)
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The OnSelect field of the Overlay on the gallery has this, to navigate to viewing that specific movie:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Navigate(ViewMovieDetails,ScreenTransition.Fade)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting the background image was a bit simpler, putting this into the Image field of the Image component in the Gallery:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ThisItem.Cover.Full
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another minor tweak included adding the Filters icon, which navigates to the filters screen with this formula in the OnSelect:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Navigate(MovieFilters)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;filters&quot; tabindex=&quot;-1&quot;&gt;Filters &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-25-movie-directory-part-2-gallery-and-filters/#filters&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Filters.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Filters screen&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The filters screen is nothing flashy, but functional. The watchlist field is a simple dropdown, where the items field comes from the Dataverse tables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Choices(Movies.Watchlist)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similar for the Owned Platform field:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Choices(Movies.Owned)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hide Movies Watched Since is a standard date picker field, but those are hard to blank out if you had that set and then wanted to turn it off, so I had to add an accompanying button with this OnSelect value:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Reset(LastWatchedFilter)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The hardest part is the Save button, which needed to update the filter variables and navigate back to the gallery view, so this goes into the OnSelect for that button:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set(varWatchlist,WatchlistFilter.SelectedText.Value);
Set(varOwned,OwnedFilter.Selected.Value);
Set(varLastWatched,LastWatchedFilter.SelectedDate);
Navigate(AllMovies)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it for the gallery view and filtering. The next post in this series will describe viewing and editing of a single movie.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Movie Directory Part 3: View and Edit</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-06-29-movie-directory-part-3-view-and-edit/"/>
		<updated>2021-06-29T11:05:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-06-29-movie-directory-part-3-view-and-edit/</id>
		<content type="html">&lt;p&gt;This continues a short series about &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/movie-directory/&quot;&gt;a movie directory personal project&lt;/a&gt; exploring Power Apps and Dataverse. In the first two posts, I’ve laid out the data structure in Dataverse and the gallery and filters screens in the Power App. This post will tackle viewing and editing a single movie record in the app.&lt;/p&gt;
&lt;h2 id=&quot;view-screen&quot; tabindex=&quot;-1&quot;&gt;View screen &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-29-movie-directory-part-3-view-and-edit/#view-screen&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The view screen started out as a pretty bland list of fields, but rapidly evolved into something more attractive and more functional:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/View-Movie.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;View movie screen of Alien3, with all the options selected&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The text fields are straightforward. The icons are a bit more complicated. There is one data field with choices for all the different platforms that we own a movie, but I wanted to show it differently, with one icon for everywhere we owned it while hiding the icons for platforms we don’t own it.&lt;/p&gt;
&lt;p&gt;There are six icons for ownership plus a JustWatch link. I grouped the six into two rows, putting Blu-ray, DVD, and Movies Anywhere on one line and Google Play, Microsoft, and Vudu on the next. Whether each icon is visible or not is determined by this value in the Visible field:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If([@Owned].&#39;Blu-ray&#39; in BrowseGallery1.Selected.Owned, true, false)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Making that more complicated, though, is that it looks awkward if you have the third icon in a row without the first two, e.g. Movies Anywhere without Blu-ray or DVD. To solve this, I dynamically set the width of the icon to 0 if we don’t own in that format, then set the X value for placement of the next icon in the row to be a certain distance after the width of the previous one.&lt;/p&gt;
&lt;p&gt;Here’s the formula for the width of the Blu-ray icon:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If([@Owned].&#39;Blu-ray&#39; in BrowseGallery1.Selected.Owned,142,0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;DVD then gets this for an X value:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If(BlurayLogo.Visible,50 + BlurayLogo.X + BlurayLogo.Width,BlurayLogo.X + BlurayLogo.Width)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And finally the X value on the Movies Anywhere button:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;If(DVDLogo.Visible,50 + DVDLogo.X + DVDLogo.Width,DVDLogo.X + DVDLogo.Width)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This does not handle dynamic placement on the Y axis. It can still be a little weird to look at to have one icon on the top row and then all three icons on the second row. Hypothetically a similar approach would work with some more complicated formulas to improve that, but I left it at this point.&lt;/p&gt;
&lt;p&gt;The other unique part of this view that adds a lot to the attractiveness of it is the cover image taking up the background. This is a straightforward image component stretched across the background, with this value for Image:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;BrowseGallery1.Selected.Cover.Full
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and a Transparency of 0.6, to make sure the text above it is still readable.&lt;/p&gt;
&lt;h2 id=&quot;edit-screen&quot; tabindex=&quot;-1&quot;&gt;Edit screen &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-29-movie-directory-part-3-view-and-edit/#edit-screen&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Edit-screen.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Edit screen for Alien3&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The layout of the edit screen is quite a bit simpler. The fields are standard editable fields tied to the Dataverse column.&lt;/p&gt;
&lt;p&gt;I did add one more complicated piece, though. I was worried about having the delete icon so close to the save button, despite that being the default placement within Power Apps. So, I built a confirmation dialogue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Delete-dialogue.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Delete dialogue&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The OnSelect value for the delete button is this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UpdateContext({showPopup:true})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This initiates a change that displays a rectangle in the middle of the screen which has the Visible property set to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;showPopup
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is also another larger rectangle that is solely to darken the movie screen behind it, to increase focus on the delete dialogue. This rectangle has a Fill property of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;RGBA(0, 0, 0, 0.6)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the same Visible property as the other delete dialogue boxes, showPopup.&lt;/p&gt;
&lt;p&gt;Clicking on the Cancel button will reverse the action of the initial Delete press and take you back to editing the movie, thanks to this OnSelect property:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;UpdateContext({showPopup:false})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pressing the Delete text will confirm the deletion, removing the movie and redirecting the user back to the gallery, with this OnSelect property:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Remove(Movies,BrowseGallery1.Selected);
UpdateContext({showPopup:false});
Navigate(AllMovies)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;what-s-left&quot; tabindex=&quot;-1&quot;&gt;What’s left &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-06-29-movie-directory-part-3-view-and-edit/#what-s-left&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At this point, I have a data structure and a fully functioning app. What I haven’t covered yet is how to most efficiently load in 300+ movies. A final post in this series will look at that problem, through a Power Automate Flow that I wrote to import all the movie information from our previous system and help collect cover images for all these movies quickly.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Movie Directory Part 4: Import</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/"/>
		<updated>2021-07-01T15:03:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/</id>
		<content type="html">&lt;p&gt;This continues a short series about &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/movie-directory/&quot;&gt;a movie directory personal project&lt;/a&gt; exploring Power Apps and Dataverse. In the first three posts, I’ve laid out the data structure in Dataverse and the app itself. This post will tackle how I was able to quickly fill in the 300+ movies in our collection converting from our previous system, files on a computer arranged for use on a Plex server. This will all be done in Power Automate.&lt;/p&gt;
&lt;h2 id=&quot;the-old-structure&quot; tabindex=&quot;-1&quot;&gt;The old structure &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#the-old-structure&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here’s how the old structure was, to work nicely with a &lt;a href=&quot;https://www.plex.tv/&quot;&gt;Plex&lt;/a&gt; server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There was a folder in my OneDrive differentiating where we owned each movie. Some movies were only on disc. Others were in one or more digital stores as well. As I tried to get more and more digital copies of movies we already owned, I would move a file from the general Movies folder into the correct digital store folder. This wasn’t a complete system, though. For example, it didn’t differentiate Blu-ray vs DVD, and if I had something in both Google and Microsoft it would only be in the Google folder.&lt;/li&gt;
&lt;li&gt;Every file was named in the format “Movie Title (Year).” The year is valuable in Plex to help differentiate if there are multiple movies with the same title.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-variables&quot; tabindex=&quot;-1&quot;&gt;The variables &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#the-variables&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To start the Flow, I declared several variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ownedPlatform: will come from what folder it was in&lt;/li&gt;
&lt;li&gt;fileName&lt;/li&gt;
&lt;li&gt;movieName: parsed from the file name&lt;/li&gt;
&lt;li&gt;movieYear: parsed from the file name&lt;/li&gt;
&lt;li&gt;yearStartIndex: to help with the parsing&lt;/li&gt;
&lt;li&gt;imdbAPIkey: my API key for IMDB, which I will use for grabbing cover images&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;get-the-movies&quot; tabindex=&quot;-1&quot;&gt;Get the movies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#get-the-movies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First I’ll get all the movies. This is straightforward with a OneDrive “get files” action. I did find that I could only do a certain number of files at once, so I did it in chunks by having a separate “To Copy” folder, in which I put the next batch as I needed to copy them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Get-Movies.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of getting movies from OneDrive&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I’ll then enter a loop of all the results, handling one movie at a time. This is a simple Apply to Each loop using the “value” from the previous step’s results.&lt;/p&gt;
&lt;h2 id=&quot;parse-name-and-year&quot; tabindex=&quot;-1&quot;&gt;Parse name and year &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#parse-name-and-year&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start by grabbing the file name and putting it into the variable:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/fileName.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Set variable to “Name without extension”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To parse the fileName, I needed to find where the movie name ends and the year begins. The easy way to do that is to look for the last instance of a closing parenthesis.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/yearStartIndex.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Set variable to: add(indexOf(variables(‘fileName’),&#39;(‘),1)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That will make it easy to get the movie name and year.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/movieName.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Set variable to: replace(substring(variables(‘fileName’),0,sub(variables(‘yearStartIndex’),2)),””,”)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/movieYear.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Set variable to: int(substring(variables(‘fileName’),variables(‘yearStartIndex’),4))&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;add-to-excel&quot; tabindex=&quot;-1&quot;&gt;Add to Excel &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#add-to-excel&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ll now add details for the movie into Dataverse. I also had some checking to confirm that the movie wasn’t already in the Dataverse table, but I’ll skip those details.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/CreateMovie.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Create a new record in Dataverse&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Of note here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Name and Year are filled by the variables we parsed from the file name earlier.&lt;/li&gt;
&lt;li&gt;The Owned dropdown is determined by the folder the file was in. In my case I just changed this manually between running it against each folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;imdb-api&quot; tabindex=&quot;-1&quot;&gt;IMDB API &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#imdb-api&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ll now use the IMDB API to get the cover image for the movie, which I’ll upload to my OneDrive to make it easier to attach them to the right Dataverse object. I likely could have gotten as far as it automatically uploading the image directly into Dataverse with a premium subscription, but I didn’t have that and didn’t find a way around it in a reasonable amount of time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/IMDB-API.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Get IMDB details. See the IMDB API for details.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Part of what that returns is a URL to the cover image for the movie. I’ll now upload that file into a designated folder in OneDrive.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/06/Upload-Cover-to-OneDrive.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Source URL: body(‘Get_IMDB’)?[‘results’][0][‘Image’]&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-01-movie-directory-part-4-import/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There were still some pieces I had to do manually, like attach the image to each movie, but even that was a much quicker process.&lt;/p&gt;
&lt;p&gt;In a different Flow, I also added some logic that guessed whether a movie was Blu-ray, DVD, or digital only based on the size of the file. That wasn’t very complicated, but I left it out of this version as I found I often needed to clean up the owned column anyway because of the number of other exceptions (a movie in both Google and Microsoft).&lt;/p&gt;
&lt;p&gt;Ultimately, I ended up not actually using this movie directory database app. The main reason was that it was too slow. It is not equivalent in performance to a native Android app. But it was a great test, achieving all the features I wanted to do, and I definitely learned a lot more about Dataverse, Power Apps, and Power Automate along the way.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Google vs Microsoft Personal and Business Accounts</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-07-05-google-vs-microsoft-handling-of-personal-and-business-accounts/"/>
		<updated>2021-07-05T14:05:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-07-05-google-vs-microsoft-handling-of-personal-and-business-accounts/</id>
		<content type="html">&lt;p&gt;I recently started doing an email migration into Google Workspace. As I was creating the users, I encountered a wrinkle: one of the email addresses already had a personal Google account associated with it. Google gave me two options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Notify the user of the personal account, prompting them to allow the account to be claimed by the organization.&lt;/li&gt;
&lt;li&gt;Create a different user.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There was no option to allow the email to be associated with both a personal and a business account at the same time.&lt;/p&gt;
&lt;p&gt;This is a different approach than Microsoft. Microsoft does allow you to have the same email address on both a personal account and a business account. This made me think about the pro’s and con’s of both approaches.&lt;/p&gt;
&lt;h2 id=&quot;the-problem-with-google-s-approach-what-if-you-want-the-same-email-on-both&quot; tabindex=&quot;-1&quot;&gt;The problem with Google’s approach: what if you want the same email on both? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-05-google-vs-microsoft-handling-of-personal-and-business-accounts/#the-problem-with-google-s-approach-what-if-you-want-the-same-email-on-both&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This new situation did remind me of hitting a similar situation when I got my first Android device. I had a Google account, but it was technically a business account, created years ago when GSuite was free. I initially set up my Android with that. Then I started hitting some limitations, like not being able to use family sharing of Google Play purchases.&lt;/p&gt;
&lt;p&gt;So I was stuck with three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Keep using the business account and lose that functionality.&lt;/li&gt;
&lt;li&gt;Use a different Gmail for Android, and consequently other services like Google Assistant. I did have one; I just didn’t use it for anything except the occasional testing of email tools.&lt;/li&gt;
&lt;li&gt;Delete my business Google account and create a new personal one, losing all the data that was previously associated with it, which wasn’t a lot but did have a few things like YouTube subscriptions and history.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I ultimately went with number 3. It took longer. Yes, I did lose my YouTube history, although that might have been a blessing in disguise as YouTube’s horrible algorithm had been pushing a lot of terrible videos at me and it seems to have been better since. I got to keep logging in with my primary email.&lt;/p&gt;
&lt;p&gt;I do still have one smaller problem with it. I have a Google account that is the same email as my primary Microsoft account. My calendar is on the Microsoft account. I would love for Google Assistant to see the calendar, but it can’t read the Microsoft calendar directly and I can’t share from Microsoft to Google because that is normally possible by sending an email and in this case that would just send the invite right back to the Microsoft mailbox sending it. Being able to put an alias on a Google account like you can a Microsoft would solve it, but Google doesn’t offer that.&lt;/p&gt;
&lt;p&gt;It will be a much bigger problem if I ever move that domain to Google business email. Aliases would also make this easier. With this particular domain, that is unlikely. But if I was advising somebody else on this problem, I would suggest number 2. Just use a separate email @gmail.com that is explicitly for all things Google. Don’t try to be cute with your custom domain, or you could end up in a very bad situation. It would be nice if Google warned you about this possibility when you sign up with a different domain (maybe it does in small print I missed).&lt;/p&gt;
&lt;p&gt;That situation demonstrates the advantage of Microsoft’s approach: &lt;strong&gt;you can choose to keep your personal content and your business content separate&lt;/strong&gt; even if you intentionally or accidentally used the same email address on both. Plus Microsoft offers aliases which can help you untangle them if you later need to; I would be a lot more sympathetic to Google’s approach if they offered that.&lt;/p&gt;
&lt;h2 id=&quot;the-problem-with-microsoft-s-approach-most-people-won-t-remember-what-is-on-personal-vs-business&quot; tabindex=&quot;-1&quot;&gt;The problem with Microsoft’s approach: most people won’t remember what is on personal vs business &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-05-google-vs-microsoft-handling-of-personal-and-business-accounts/#the-problem-with-microsoft-s-approach-most-people-won-t-remember-what-is-on-personal-vs-business&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The problem with Microsoft’s account is essentially the reverse. You’re allowed to have the same email on both a personal and a business account. That’s great to keep things separated. Now you need to remember which account you used for that thing you’re trying to do. If you’re diligent about keeping work in the work account and personal content in the personal content, that’s not too bad. That’s not always possible and people aren’t always going to be good at it.&lt;/p&gt;
&lt;p&gt;Here’s another scenario I’ve seen: an organization built a SharePoint portal system for partners across lots of organizations. Some of those partner organizations use Microsoft 365. Some do not. To let the partners in who are not using Microsoft 365, the portal has to allow logging in with consumer Microsoft accounts. In theory, the goal should be that every partner who does have Microsoft 365 business account uses their business account, while personal accounts are the fallback for everybody else.&lt;/p&gt;
&lt;p&gt;In practice, it got a lot messier than that. Some people had business accounts, but didn’t understand they could use that, so they created a separate personal account, maybe using their same business email and maybe using a different email. Then they go to the portal and it says they don’t have access. They confirm they are logged in with their work email, so that’s strange. They give up and contact me for support. I dig into the Azure Active Directory and discover this partner used a personal Microsoft account, not a business account. So they end up needing to log out of their business email account they use for everything else and logging in with a personal Microsoft account with the same email address that they’re using for just this one thing probably by accident. That’s confusing.&lt;/p&gt;
&lt;p&gt;This is the value of Google’s approach: &lt;strong&gt;there is no confusing dialogue asking you whether you want to sign in with the business or personal account&lt;/strong&gt;. There is no need to remember what services are associated with which account on the same email.&lt;/p&gt;
&lt;h2 id=&quot;winner&quot; tabindex=&quot;-1&quot;&gt;Winner? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-05-google-vs-microsoft-handling-of-personal-and-business-accounts/#winner&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For the majority of normal users in the majority of cases, Google’s scenario is better. It’s easier. Most average people just want a separate personal account from their business account using different emails and they’re not concerned about custom domains. Google’s approach enforces the simplicity that most people want.&lt;/p&gt;
&lt;p&gt;For Microsoft power users like me who can keep it straight, their approach is better. I’ve considered whether I should move my primary personal email (a custom domain that was signed up in the days of Windows Live Domain) from a consumer Microsoft account to a Microsoft 365 account. If I do decide to do that, here’s how I would:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Put an outlook.com alias on the consumer account&lt;/li&gt;
&lt;li&gt;Set up the domain and DNS on the Microsoft 365 business, create the user there&lt;/li&gt;
&lt;li&gt;Delete the custom alias from the consumer account&lt;/li&gt;
&lt;li&gt;Going forward, I can use the custom domain for the work account and the alias for the personal account&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There is no scenario where I don’t lose massive amounts of personal data if I ever decided to put my custom domain in Google Workspace.&lt;/p&gt;
&lt;p&gt;What Microsoft doesn’t offer is transferring an alias from one account to another. I have a better outlook.com alias on a different Microsoft account that I would love to switch to my main account, if I gave up the custom domain alias. I would pay extra for the ability to merge them / migrate the alias. As a few accounts with tech giants own more and more of our lives, I think it’s going to be more and more important that they offer a way to solve problems like this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The real ideal to me is probably to restrict it like Google, but have aliases like Microsoft.&lt;/strong&gt; That’s the best of both worlds to me: clear separation of accounts while having the flexibility if you need to make a change.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Web Hosting Distinctions</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/"/>
		<updated>2021-07-08T18:15:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/</id>
		<content type="html">&lt;p&gt;There’s a confusing thing that has come up with several clients who don’t know all the intricacies of website work (completely understandably; that’s why they pay me). When we talk about hosting services around website work, there are a few different things we could be referring to: the domain, the DNS, the website content, and email. To make it more confusing, sometimes all of them are with the same provider and other times they’ve divided up in different combinations.&lt;/p&gt;
&lt;h2 id=&quot;domain&quot; tabindex=&quot;-1&quot;&gt;Domain &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/#domain&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first step in the chain is registering the domain. Once you’ve got the domain registered, you own it and can do whatever you want with it. For example, I own the domain alliterationapplications.com that I bought through a particular domain registrar that I like.&lt;/p&gt;
&lt;p&gt;The important things to know about the domain registrar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep it renewed. You’ll have to pay a recurring fee to keep it or you risk everything associated with it going offline and then potentially somebody else swooping in and stealing it. Depending on the registrar, you can often buy multiple years at a time. Usually there is an option to auto-renew when it is ready to expire, but even that does require some attention that your payment details stay valid (i.e. credit cards expire every few years).&lt;/li&gt;
&lt;li&gt;WHOIS privacy is a great idea, especially if you’re not a big company. This hides your contact details from the public.&lt;/li&gt;
&lt;li&gt;Set the nameservers to point to the DNS provider. This may be in the same place as the domain registrar or may be elsewhere, like where the website content is hosted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dns&quot; tabindex=&quot;-1&quot;&gt;DNS &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/#dns&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Domain Name Service specifies details about what services are associated with the domain. The big two of these are the next items for clarification: email and website content. But there could be other things as well, like the Microsoft Endpoint Manager service for device management.&lt;/p&gt;
&lt;p&gt;DNS related to email should have at least two components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MX records: these specify where email sent to the domain should be directed. This could be Microsoft, Google, a web server, or something else.&lt;/li&gt;
&lt;li&gt;TXT record: a particular type of TXT record called an SPF record can be used to help differentiate legitimate email sent from the domain vs illegitimate. When somebody receives an email that says it from your domain, their email provider looks up the SPF on the domain. It compares what the SPF record says to where the email actually came from to determine if the sending server is allowed to send on behalf of that domain, and is likely to mark it as spam if there isn’t a match. It isn’t the only way to help make sure your emails don’t go into spam, but it’s the simplest action for the biggest impact.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DNS related to website content is typically a simple A record pointing to the IP address of the web server. Some DNS providers also have a FWD record type which will forward all browser traffic to a different URL, e.g. my ryanrobinson.ca domain currently forwards to my LinkedIn (although I think I will merge it together with this site at some point).&lt;/p&gt;
&lt;p&gt;You rarely need to change your DNS – only when you change those other services – and there typically is no recurring fee, with your DNS hosting most often combined with either your domain hosting or website content hosting.&lt;/p&gt;
&lt;h2 id=&quot;website-content&quot; tabindex=&quot;-1&quot;&gt;Website content &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/#website-content&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The content of your website, usually consisting of several files and at least one database, reside on a web server. I won’t dive into all the considerations choosing a web content host, but if you’re talking about a simple site like this one, you don’t need anything special.&lt;/p&gt;
&lt;p&gt;There will always be some recurring fee for website hosting, although it may get combined into a package with domain or DNS. If the server is well-managed by a good support team, then you won’t need to worry about much other than keeping the account active. If it is a web server where you have to manage it yourself, you will need to pay attention to details like security updates and PHP versions.&lt;/p&gt;
&lt;h2 id=&quot;email&quot; tabindex=&quot;-1&quot;&gt;Email &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-08-web-hosting-distinctions/#email&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, you may or may not have email associated with your domain. This email might be hosted on a web server (the same as the website content) or could be somewhere else like Google or Microsoft.&lt;/p&gt;
&lt;p&gt;If it’s on a web server with the website, it’s probably part of the package or a small fee extra. It is very low-quality email compared to Microsoft or Google: low storage limits, no sync of contacts/calendar, bad spam filters, etc.&lt;/p&gt;
&lt;p&gt;If the email is hosted elsewhere like Google or Microsoft, you do have another recurring fee (unless you’re a non-profit getting it for free), but you get much higher quality email as well as a variety of other services like cloud storage which can provide huge productivity advantages.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Favourite Hidden Features</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/"/>
		<updated>2021-07-21T12:24:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/</id>
		<content type="html">&lt;p&gt;Microsoft Teams is a very big program, essentially combining together equivalent functionality to Skype, Slack, Zoom, Google Drive, VOIP phone systems, and a few more all into one… plus the ability to develop your own apps for it. New features keep coming at a rapid pace. That makes it easy to miss some of the helpful little things that Teams offers. I’ll have more posts soon about organization admin settings and policies for Teams, but here are a few of my favourite tricks that most typical users can take advantage of in their own workflows but may not be obvious.&lt;/p&gt;
&lt;h2 id=&quot;title-on-conversations&quot; tabindex=&quot;-1&quot;&gt;Title on Conversations &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/#title-on-conversations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having conversations in the Teams channels is great. It is a useful tool for having quick conversations in a nice threaded interface that stay available for search later. One common problem, though, is that when there’s a bunch of conversations, it is hard to find your way back to the one that you’re looking for.&lt;/p&gt;
&lt;p&gt;One feature that really helps with this: add a title to the conversation. By default when you try to start a new conversation, you only get a little text book to enter the content. But there’s more you can do. One of those in the bottom left is a little format icon. Click on that and you’ll see a few options including bold, italics, underline, quote, code, and alignment. My favourite, though, is that it adds a place to add a title for the post. This makes it a lot easier when you’re scrolling through old conversations to see a summary of what that conversation is about, in larger font.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Title-on-Teams-Conversations.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Demo of a post with a title, a post without a title, and the options for a new conversation after hitting the Format button&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;tasks&quot; tabindex=&quot;-1&quot;&gt;Tasks &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/#tasks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This one is slightly less hidden. It might even be more obvious in the sidebar in your organization. But for me, when it became available, it was tucked away where it wasn’t obvious. If you use one of Planner or To-Do to manage your tasks, the Tasks app is helpful. If you use both, it is almost essential. It will combine together the tasks from all of your Planner boards and your To-Do list into one place, including tools like sorting. If your work setup is something like: Planner contains tasks for shared group projects and To-Do contains your individual tasks – basically what each are designed for – then this is currently the only way to see them all in one place.&lt;/p&gt;
&lt;p&gt;It is missing one thing, though: flagged emails don’t appear here. They do appear in To-Do and will appear alongside your tasks in Outlook, but it is missing from Tasks in Teams. So it still isn’t quite all your tasks in one place, but it’s a big step in the right direction.&lt;/p&gt;
&lt;h2 id=&quot;task-from-conversation&quot; tabindex=&quot;-1&quot;&gt;Task from Conversation &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/#task-from-conversation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Speaking of tasks, how common is it to be having a conversation and you realize you need to flag this as a task to take care of later, before it risks getting buried under too many other conversations? If you’ve flagged an email in Outlook, it’s the same concept.&lt;/p&gt;
&lt;p&gt;This was not originally an out-of-the-box feature, and I even made myself a Flow to handle it for me because I needed it so much. It is available now, but might be a little hidden. Scroll over the conversation so you see the reaction menu and an ellipses. Click on that ellipses to see more options. Scroll down to More Actions to see even more options. To add to confusion, you might see “Tasks” twice: one with the To-Do logo and one with the Tasks in Teams logo. If you want to make a task in To-Do, feel free to use either one. If you want to put it into Planner, you’ll have to use the Tasks in Teams one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Task-from-Conversation.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Demo of the menu finding the “create task” link&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;team-tags&quot; tabindex=&quot;-1&quot;&gt;Team Tags &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/#team-tags&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What if you have some sub-groups within a Team? For example, in my previous job, we had a Team dedicated to responding to website hacks. This Team included members from the website hosting team, the custom software team, and the web services team. In the context of a website hack, you might not want to slow down and be picky about who exactly in the team should take care of a certain task. You might prefer to simply say “we need somebody from hosting to come at this part of the problem while somebody from web services comes at it from this side.” In that type of scenario, how do you go about saying the “somebody in hosting” part, without tagging every member individually?&lt;/p&gt;
&lt;p&gt;You create a tag. A tag can function as short-hand for multiple members within a group. You can @ mention a tag the same way you can @ mention an individual or the entire Team.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Create-a-Tag.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Creating a tag called “Demo” with me as the only member&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-about-you&quot; tabindex=&quot;-1&quot;&gt;How about you? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-07-21-my-favourite-microsoft-teams-hidden-features/#how-about-you&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Do you have any favourite hidden features in Teams I didn’t mention?&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: App Policies</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-02-microsoft-teams-app-policies-define-sidebar-for-most-users/"/>
		<updated>2021-08-02T13:05:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-02-microsoft-teams-app-policies-define-sidebar-for-most-users/</id>
		<content type="html">&lt;p&gt;Suppose you want to lock the sidebar in Teams for some users to ensure that they don’t have different experiences, which can help with providing support and documentation as well as make sure nobody accidentally loses their easy access to the app they want to use. But you don’t want to lock all users; there are some like your IT department that might need some freedom to use their Teams differently.&lt;/p&gt;
&lt;p&gt;This can be done with an app setup policy in the Microsoft Teams admin centre.&lt;/p&gt;
&lt;p&gt;For this example, I’ll set the taskbar to contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Activity&lt;/li&gt;
&lt;li&gt;Chat&lt;/li&gt;
&lt;li&gt;Teams&lt;/li&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ve removed the Calls app from the default, since I don’t use Teams for a phone system and the Calls app is somewhat underwhelming without that.&lt;/p&gt;
&lt;p&gt;I’ll also default install Tasks by Planner and To Do, but not force it on the taskbar.&lt;/p&gt;
&lt;h2 id=&quot;edit-the-global-policy&quot; tabindex=&quot;-1&quot;&gt;Edit the global policy &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-02-microsoft-teams-app-policies-define-sidebar-for-most-users/#edit-the-global-policy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start out in the Teams Admin Centre, at &lt;a href=&quot;https://admin.teams.microsoft.com/&quot;&gt;https://admin.teams.microsoft.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the navigation, go to Teams Apps -&amp;gt; Setup Policies.&lt;/p&gt;
&lt;p&gt;Click on the Global (Org-wide default) policy. Change a few settings here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flip the toggle for “Allow user pinning” off.&lt;/li&gt;
&lt;li&gt;Under “Installed apps,” click on “Add apps,” search for Tasks by Planner and To Do, and add&lt;/li&gt;
&lt;li&gt;Under “Pinned apps,” select beside Calls and then click the Remove button&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click Save when done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Global-policy-changes.png&quot; alt=&quot;Policy editing screen with sections for general settings, installed apps, and pinned apps&quot; /&gt;
&lt;em&gt;Screenshot of Teams admin with the changes described above&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When a user signs in, they’ll now have this as their default app bar:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Global-policy-with-no-calls-app.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Sidebar, with no Calls app&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, if they try to pin any other apps to their sidebar, they will not see the “pin” option anymore.&lt;/p&gt;
&lt;p&gt;We now have a default locked sidebar for all users.&lt;/p&gt;
&lt;h2 id=&quot;create-a-custom-policy&quot; tabindex=&quot;-1&quot;&gt;Create a custom policy &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-02-microsoft-teams-app-policies-define-sidebar-for-most-users/#create-a-custom-policy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next step is that we want there to be an exception for one user. Back on the setup policies screen in the Teams Admin Centre, I’ll add a new policy.&lt;/p&gt;
&lt;p&gt;On the screen to edit the policy. This time I’ll:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set the toggle for “allow user pinning” to On&lt;/li&gt;
&lt;li&gt;Leave everything else the same as the default&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click Save when done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/07/Freedom-policy.png&quot; alt=&quot;Policy editing screen with general settings, installed apps, and pinned apps&quot; /&gt;
&lt;em&gt;Screenshot of the editing screen for the policy that does not lock the taskbar&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;apply-the-custom-policy&quot; tabindex=&quot;-1&quot;&gt;Apply the custom policy &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-02-microsoft-teams-app-policies-define-sidebar-for-most-users/#apply-the-custom-policy&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that the policy is created, you need to assign it to a user. Select the policy, then click the Manage user button. It will pop out a sidebar with a people search box to look up your users that you want to apply the policy to. Select Add for that user. Once you’ve added everybody, click Apply.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/08/Add-user-to-Teams-app-policy.png&quot; alt=&quot;Manager users for the &amp;quot;Freedom&amp;quot; policy, adding the user &amp;quot;Ryan Robinson&amp;quot;&quot; /&gt;
&lt;em&gt;Sidebar for adding users to a policy&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That’s it. You’ve successfully modified the default policy a bit more strict but then allowed an exception for a smaller group of users.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Network Tests</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-05-microsoft-teams-network-tests/"/>
		<updated>2021-08-05T12:19:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-05-microsoft-teams-network-tests/</id>
		<content type="html">&lt;p&gt;If you’re going to deploy Microsoft Teams in your business network, you’ll need to confirm first that your network can handle it. That means fast enough bandwidth speeds to handle everything you want all of your employees to be able to do, as well as having all the ports open for the necessary traffic to get through. If you’re going to need hundreds of users on the same network sharing their screens alongside their video and audio in meetings of 50 people, that will eat up a lot of network resources.&lt;/p&gt;
&lt;p&gt;Microsoft has offered a few tools to help with this preparation.&lt;/p&gt;
&lt;h2 id=&quot;required-bandwidth&quot; tabindex=&quot;-1&quot;&gt;Required bandwidth &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-05-microsoft-teams-network-tests/#required-bandwidth&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here’s the guidance from Microsoft for speeds required to use Teams well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Peer-to-peer audio: 30 Kbps (approximately dial-up Internet)&lt;/li&gt;
&lt;li&gt;Peer-to-peer audio + screen-sharing: 130 Kbps&lt;/li&gt;
&lt;li&gt;Peer-to-peer 360p video calls: 500 Kbps&lt;/li&gt;
&lt;li&gt;Peer-to-peer 720p HD video calls: 1.2 Mbps&lt;/li&gt;
&lt;li&gt;Peer-to-peer 1080p HD video calls: 1.5 Mbps&lt;/li&gt;
&lt;li&gt;Group video calls: 500 Kbps / 1 Mbps&lt;/li&gt;
&lt;li&gt;HD group video calls on a 1080p screen: 1 Mbps / 2 Mbps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most home high-speed Internet living in a city will be fast enough to cover a few people on a call at once pretty comfortably. But that might get a bit more complicated when you’re dealing with large numbers of people in a single office.&lt;/p&gt;
&lt;h2 id=&quot;network-planner-and-network-testing-companion&quot; tabindex=&quot;-1&quot;&gt;Network Planner and Network Testing Companion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-05-microsoft-teams-network-tests/#network-planner-and-network-testing-companion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Network Planner is a tool in the &lt;a href=&quot;https://admin.teams.microsoft.com/&quot;&gt;Teams Admin Centre&lt;/a&gt; that helps you determine just how fast of network you need to support all your users. You enter details about how much you think you’ll need to use Teams and it will calculate for you what bandwidth you need.&lt;/p&gt;
&lt;p&gt;Start out by selecting Network Planner from the menu. First, check the personas. These are the different types of users and what you expect they will need. Check the default ones to see if they meet your needs, or add more custom ones if the defaults don’t.&lt;/p&gt;
&lt;p&gt;Then select to add a new network plan and name the plan.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/08/Network-Planner-1.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Network plan screenshot&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Then select that plan, and specify all of the locations this plan includes (all your offices / remote users).&lt;/p&gt;
&lt;p&gt;Now you’re ready to run a report to see the results. Click to add a new report. You’ll be asked how many users you have of each persona.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/08/Network-Planner-2.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Preparing a report with 160 office workers and 40 remote workers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After you generate the report, it will tell you exactly what speeds you need for that many users to carry out the needed tasks.&lt;/p&gt;
&lt;p&gt;A related tool is the Network Testing Companion. This is an app that can be run on your PC to test out your network’s configuration and tell you things like what ports need to be opened.&lt;/p&gt;
&lt;h2 id=&quot;qos&quot; tabindex=&quot;-1&quot;&gt;QoS &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-05-microsoft-teams-network-tests/#qos&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Quality of Service configuration is a tool that allows you to prioritize certain traffic if you’re pushing the limits of your network. Generally speaking, if you’re on a video call with audio, it is more important that the audio gets through than the video. QoS can help make sure the audio gets through even if the video doesn’t.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Lifecycle</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/"/>
		<updated>2021-08-10T12:20:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/</id>
		<content type="html">&lt;p&gt;If you’ve been paying attention to Microsoft 365 products in the last 5 years or so, you’ve likely noticed that things have moved toward a much flatter architecture where users have more freedom to set up their own Teams / SharePoint sites, etc. In many ways this is great, but it does carry some risks of sprawl caused by users casually creating data structures and then forgetting about them.&lt;/p&gt;
&lt;p&gt;Fortunately, Microsoft does offer some mechanisms in the Teams lifecycle to help with this.&lt;/p&gt;
&lt;h2 id=&quot;templates&quot; tabindex=&quot;-1&quot;&gt;Templates &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/#templates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First up, when you’re creating a Team, a helpful tool to create them properly is templates. Some are available by default plus you can create your own. These help you establish if you have common needs for a Team, e.g. if you have a Team for every website project you can start that Team with a Web Project template that provides the exact channels and apps you need on website projects. This doesn’t stop the sprawl of creating too many groups, but it does help ensure that when groups are created, they are created properly and consistently.&lt;/p&gt;
&lt;h2 id=&quot;team-creation-policies&quot; tabindex=&quot;-1&quot;&gt;Team creation policies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/#team-creation-policies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default every user in the organization can create Groups and Teams. That can be restricted, though. Especially in larger organizations, you may want to restrict to only a select few others outside the IT team who can create Teams. This can be done by creating a security group in Azure AD and granting them and only them the permission to create groups.&lt;/p&gt;
&lt;h2 id=&quot;expiration-policies&quot; tabindex=&quot;-1&quot;&gt;Expiration policies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/#expiration-policies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One helpful tool to follow up on any groups that may have been created and never used is the expiration policy. The policy checks to make sure the group is still being used every x number of days. If it is, it will automatically renew. If it is not, it will email the group owner asking them if the group needs to be renewed or not. If the owner does not renew the group, it will be deleted.&lt;/p&gt;
&lt;h2 id=&quot;naming-policies&quot; tabindex=&quot;-1&quot;&gt;Naming policies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/#naming-policies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have a lot of teams, you want to name them consistently. Group naming policies can be used to add prefixes or suffixes to group names. For the example of project teams, maybe you want every team to start or end with the word Project.&lt;/p&gt;
&lt;h2 id=&quot;archive-restore-delete&quot; tabindex=&quot;-1&quot;&gt;Archive, restore, delete &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-10-microsoft-teams-lifecycle/#archive-restore-delete&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Archive is another option for a team that mostly shuts down the Team, but keeps all the content available in a read-only format. It’s a good way to say that we’re done with this Team, but we might still need to reference it in the future, or keep it for legal compliance reasons.&lt;/p&gt;
&lt;p&gt;If a team is archived, it can be restored back to the fully active mode.&lt;/p&gt;
&lt;p&gt;Deleting is the permanent action. You will have 30 days that an admin can recover the group, but otherwise, that’s it. In general, you probably should archive groups that had significant content in them, while delete is only used for cleaning up accidental creations or obsolete groups where all the relevant content has been moved elsewhere.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Guest Access</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/"/>
		<updated>2021-08-13T12:31:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/</id>
		<content type="html">&lt;p&gt;Microsoft Teams is not just for users in your organization. You can also use it to collaborate with people from other organizations or no organization at all. Here are a few things to keep in mind:&lt;/p&gt;
&lt;h2 id=&quot;chat-external-and-guest&quot; tabindex=&quot;-1&quot;&gt;Chat: External and Guest &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/#chat-external-and-guest&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The “chat” app in Microsoft Teams allows you to message users one-to-one or in small groups. This includes users in your organizations, but (if the organization allows it) also includes being able to message users with Teams in other organizations, in Skype for Business for other organizations, and in Skype consumer.&lt;/p&gt;
&lt;p&gt;It’s the Teams users in other organizations that have one of the more confusing issues with Teams: external vs guest. Guests are users in other organizations that you have invited into your organization’s Azure AD, most likely to join a Team or SharePoint site to share resources. They would be signed in to their account but on your organization’s resources. External users are users in other organizations, signed in to their usual tenant.&lt;/p&gt;
&lt;p&gt;Where it gets confusing is when somebody has become a guest in your organization. If you try to start a chat with them, you’ll see options to message them either as a guest or an external. Unfortunately, the Teams client only allows you to receive notifications from one tenant at a time. That user has to be either signed in to their tenant (which would make them external to you) or your tenant (which would make them a guest to you) at any given time, not both. You may need to have some preliminary conversations to know which one they expect you to message them on.&lt;/p&gt;
&lt;h2 id=&quot;guest-users&quot; tabindex=&quot;-1&quot;&gt;Guest Users &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/#guest-users&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The bigger question is adding guests to the resources within your tenant, to use within Teams as well as possibly elsewhere.&lt;/p&gt;
&lt;p&gt;Depending on what you want guests to be able to use, you need to enable guest access in a few Microsoft 365 workloads:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure AD to add guest users to groups&lt;/li&gt;
&lt;li&gt;SharePoint Admin Centre to allow sharing files with guests&lt;/li&gt;
&lt;li&gt;Teams Admin Centre to allow adding guests to teams&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anybody with permissions to do so can add guest users to a team. The user accepting the invitation is not always intuitive if they do not already have some familiarity with Microsoft 365, so you’ll want to have some documentation ready if you’re going to do this often.&lt;/p&gt;
&lt;h2 id=&quot;guest-permissions-in-teams&quot; tabindex=&quot;-1&quot;&gt;Guest permissions in Teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/#guest-permissions-in-teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://admin.teams.microsoft.com/&quot;&gt;Teams Admin Centre&lt;/a&gt; has plenty of options to configure exactly what you want guests to be able to do within the categories of calling, meeting, and messaging. You may want them to be able to do virtually everything an internal user can do, or you may want to significantly limit them to certain functions. It all depends on the relationship with your partner and the nature of the work you need to share.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/08/Guest-Policies.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Screenshot of guest policy options&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are also a couple smaller options that can be changed per team for whether guests can create, update, and delete channels in that team.&lt;/p&gt;
&lt;h2 id=&quot;access-reviews&quot; tabindex=&quot;-1&quot;&gt;Access reviews &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-13-guest-access-in-teams/#access-reviews&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/active-directory/governance/access-reviews-overview&quot;&gt;Azure AD access reviews&lt;/a&gt; are not only about guest access, but they are a tool in Azure AD for prompt group owners regularly to make sure they don’t have anybody in their groups who don’t still need to be there. Having extra users in a group are not quite as big of a deal with internal users. Internal users might be able to see it anyway and are more likely to remember to remove themselves from a group. Guest users are more likely to have been forgotten about because of a project a couple of years ago. Access reviews can be a good way to catch those.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Information Barriers</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-16-microsoft-teams-information-barriers/"/>
		<updated>2021-08-16T12:59:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-16-microsoft-teams-information-barriers/</id>
		<content type="html">&lt;p&gt;What if you need to partition your organization so that some members of your tenant cannot communicate with others in Teams? For example, maybe you have interns who you do want to have Teams access but not to any sensitive information.&lt;/p&gt;
&lt;p&gt;Information barriers are the solution you need. You can block interaction across the barriers so that the interns cannot see any content from anybody else or vice versa.&lt;/p&gt;
&lt;p&gt;Creating the barriers is done by PowerShell. There is not currently a web admin interface to do it.&lt;/p&gt;
&lt;p&gt;Create one organization segment for interns:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;New-OrganizationSegment -Name &amp;quot;Interns&amp;quot; -UserGroupFilter &amp;quot;Title -contains &#39;Intern&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Repeat for another segment called staff:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;New-OrganizationSegment -Name &amp;quot;Staff&amp;quot; -UserGroupFilter &amp;quot;Title -not (-contains &#39;Intern&#39;)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that you have the two segments, create the barrier between them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;New-InformationBarrierPolicy -Name &amp;quot;Interns&amp;quot; -AssignedSegment &amp;quot;Interns&amp;quot; -SegmentsBlocked &amp;quot;Staff&amp;quot; -State Inactive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, apply the information barriers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Start-InformationBarrierPoliciesApplication
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It could take several hours to go into effect.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Phone Numbers</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/"/>
		<updated>2021-08-19T06:58:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/</id>
		<content type="html">&lt;p&gt;I personally have not used Microsoft Teams as a phone system. My employers have stuck completely with Internet-based communications, mostly to others in the same organization. But if you want to integrate your organization’s phone system into Teams and have your phone calls ring through in Teams, that’s absolutely possible.&lt;/p&gt;
&lt;p&gt;Here’s an introduction on some of the things to consider:&lt;/p&gt;
&lt;h2 id=&quot;calling-plan-or-direct-routing&quot; tabindex=&quot;-1&quot;&gt;Calling Plan or Direct Routing &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/#calling-plan-or-direct-routing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Your first decision in setting up a phone system in Teams is between:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calling plan: simplest solution, letting Microsoft handle everything&lt;/li&gt;
&lt;li&gt;Direct routing: allows for more complexity and keeping a previous phone provider&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;add-phone-numbers&quot; tabindex=&quot;-1&quot;&gt;Add phone numbers &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/#add-phone-numbers&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are two basic options when you want to add phone numbers to your Teams deployment: add new numbers, or port existing numbers from a previous provider. You can do this from the &lt;a href=&quot;https://admin.teams.microsoft.com/&quot;&gt;Teams Admin Centre&lt;/a&gt; -&amp;gt; Voice -&amp;gt; Phone Numbers.&lt;/p&gt;
&lt;p&gt;Ordering numbers has a few types to choose from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User: a regular number for a single user&lt;/li&gt;
&lt;li&gt;Dedicated conference bridge (toll or toll-free): for conference rooms with multiple people calling in at once&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-call-queue&quot;&gt;Call queue&lt;/a&gt; (toll or toll-free): used to define how to route calls between multiple agents, with features like wait music&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoftteams/create-a-phone-system-auto-attendant&quot;&gt;Auto attendant&lt;/a&gt; (toll or toll-free): attendant for callers to be able to select how they would like to be routed, e.g. select 1 for tech support, 2 for accounts, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Along with the type, you’ll need to specify a location – country and area code – as well as the quantity for how many you need.&lt;/p&gt;
&lt;h2 id=&quot;emergency-addresses&quot; tabindex=&quot;-1&quot;&gt;Emergency addresses &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/#emergency-addresses&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Every phone number has to have an emergency address tied to it, so that if a user calls emergency services they can trace it back and find them. With Teams phone systems, you can and should have one emergency address configured for each of your office locations. When you are assigning the number, you then specify at which emergency location that person is working.&lt;/p&gt;
&lt;h2 id=&quot;dial-plans&quot; tabindex=&quot;-1&quot;&gt;Dial plans &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-08-19-microsoft-teams-phone-numbers/#dial-plans&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you’ve worked in most large offices, you’ve probably encountered the use of something like “dial 9 for external numbers.” These kinds of scenarios are handled with dial plans. You can specify what digits (up to 4 digits) must be used to dial out to external numbers.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Visual Studio Code: Favourite Extensions</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-06-favourite-visual-studio-code-extensions/"/>
		<updated>2021-09-07T01:13:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-06-favourite-visual-studio-code-extensions/</id>
		<content type="html">&lt;p&gt;I’ve written before about &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt;, my preferred text editor. One of the great things about VS Code is the large number of extensions that are available, while continuing to be a lightweight and efficient program even with lots of extensions installed.&lt;/p&gt;
&lt;p&gt;Here are some of my favourite VS Code extensions in my workflow:&lt;/p&gt;
&lt;h2 id=&quot;general&quot; tabindex=&quot;-1&quot;&gt;General &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-06-favourite-visual-studio-code-extensions/#general&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitLens&lt;/strong&gt;: If, like most, you are using Git for version control, GitLens is a nice addition on top of &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/using-github-from-visual-studio-code/&quot;&gt;the default Visual Studio Code capabilities for Git&lt;/a&gt;. It adds features like seeing who committed what line of code on what date, within the editor as you’re going, which can inform your decisions especially when examining legacy code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitLab Workflow&lt;/strong&gt;: If GitLab is the home for your code repositories and you make use of some of the GitLab project management features such as issues and merge requests, GitLab Workflow can be a good addition to your VS Code installation. I track much of my task list using GitLab Issues and it is very handy to be able to see them directly alongside my code, even if with only a subset of the features you would get in the web browser (e.g. you can view all the conversation but not change details like due date).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TODO Tree&lt;/strong&gt;: Many developers leave notes to themselves and their team in the comments in the form of writing TODO or FIXME. This extensions adds a sidebar pane showing you where all of those notes are across all the files in the workspace, making it easier to return to them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vscode-icons:&lt;/strong&gt; If you’re browsing a large file system, it can get a bit visually overwhelming to see long lists of directories. This extension helps by providing icons to differentiate more easily at a glance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prettier&lt;/strong&gt;: Code style is important, especially in a team. Prettier helps maintain consistent style.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;web-development&quot; tabindex=&quot;-1&quot;&gt;Web development &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-06-favourite-visual-studio-code-extensions/#web-development&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Remote – SSH&lt;/strong&gt;: &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/visual-studio-code-remote-ssh-development/&quot;&gt;I’ve written about this in more detail,&lt;/a&gt; but if you’re working remotely on some other server, this is essential. It’s a lot easier to work directly on one of those servers than to write on your computer and upload with every change. It even offers an integrated terminal so you don’t need a separate terminal app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remote – SSH: Editing Configuration Files&lt;/strong&gt;: In conjunction with the Remote SSH extension, this extension helps with syntax highlighting when you need to edit your SSH config files, which you will need to do setting up each site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apache Conf&lt;/strong&gt;: If you ever need to edit Apache configuration files, then Apache Conf will help by giving you syntax highlighting.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Peacock&lt;/strong&gt;: Peacock lets you change the colour palette of your workspace window. This isn’t just for attractive style. If you’re regularly jumping around between lots of servers – even dev vs staging vs production of the same site – then it can be really easy to accidentally change code or execute a terminal command in the wrong site. Having different colours for each one is a nice shortcut to cue your brain which one is which.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WordPress Hooks Intellisense&lt;/strong&gt;: Developing on WordPress? Install this extension to help with prompts and syntax highlighting for WordPress functions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Drupal Syntax Highlighting&lt;/strong&gt;: Similarly, if you’re developing on Drupal, this extension will help with Drupal-specific syntax and functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For any of these, you simply need to look up the extension name in the extension directory, available within your VS Code window. In some cases you’ll also be prompted with a recommendation based on editing a file of a certain type.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SimplyTest.Me: Drupal Project Test</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-10-simplytest-me-drupal-project-test/"/>
		<updated>2021-09-10T13:14:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-10-simplytest-me-drupal-project-test/</id>
		<content type="html">&lt;p&gt;Have you ever wanted to test out a Drupal module without actually installing it on your site? &lt;a href=&quot;https://simplytest.me/#&quot;&gt;SimplyTest.Me&lt;/a&gt; is the answer. All you have to do is pick a module or theme, including a specific version, that you want to test and it will generate a sandbox site for you to check it out. It’s fairly comprehensive and spins up the sandbox within a few minutes.&lt;/p&gt;
&lt;p&gt;As with many similar tools, whether this is useful to you or not depends on your workflow and your team’s requirements. If you are the sole developer and you have a safe testing environment already, you’ll have a more complete test by going ahead and installing the module on your test site. That way you can see not only how the module operates but also how it interacts with the rest of your site. But if you are just checking something out to get the basic idea of a module, especially a more intensive module like Drupal Commerce, or you don’t have your own playground site, then this can be a good first step.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>MySQL Workbench</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-15-mysql-workbench/"/>
		<updated>2021-09-15T05:17:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-15-mysql-workbench/</id>
		<content type="html">&lt;p&gt;You know what desktop app made the largest improvement to my workflows when I discovered it? Not &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt;, as much as my writing sometimes hypes it up as my preferred text editor. There were already good text editors.&lt;/p&gt;
&lt;p&gt;No, the desktop tool that made the biggest improvement to my workflows was &lt;a href=&quot;https://www.mysql.com/products/workbench/&quot;&gt;MySQL Workbench&lt;/a&gt;. If you work with MySQL databases at all, this will make your life so much easier than navigating those databases in a command line.&lt;/p&gt;
&lt;h2 id=&quot;advantages&quot; tabindex=&quot;-1&quot;&gt;Advantages &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-15-mysql-workbench/#advantages&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is much easier and more user-friendly to browse a database. You can see all the tables in a database along the side panel and clicking on one inserts it into a query, avoiding typos copying it. When you run a SELECT command and get lots of results in a terminal, it often doesn’t stay lined up very well. It’s virtually impossible to read large data sets not lined up. But in Workbench, everything stays perfectly in its columns.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/09/Result-Grid.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Demo of the result grid, using tests on my dev site&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Along the same lines, it is a lot easier to apply sorting by a column, by clicking on the headers in the results. This can be faster than writing out the query.&lt;/p&gt;
&lt;p&gt;If you want to edit a particular record from the results you’re viewing, all you need to do is hit the Form Editor option beside the results. You only need to worry about writing UPDATE queries when making bulk edits.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/09/Form-Editor.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Demo of the Form Editor&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You still need to know enough MySQL to write many types of queries, but an added bonus is that it provides syntax checking. If you know a bit but aren’t an expert in writing MySQL queries, this can be a big help.&lt;/p&gt;
&lt;p&gt;You can have multiple sites/databases saved to quickly switch between. You can also have multiple query tabs to jump back and forth between, which can be quite helpful when investigating several tables at once.&lt;/p&gt;
&lt;p&gt;Finally, MySQL Workbench includes a variety of features such as importing from csv and exporting to csv. That pair of features can be great if you need to migrate to another system with some data cleanup in between.&lt;/p&gt;
&lt;h2 id=&quot;download&quot; tabindex=&quot;-1&quot;&gt;Download &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-15-mysql-workbench/#download&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can &lt;a href=&quot;https://www.mysql.com/products/workbench/&quot;&gt;download MySQL Workbench for free&lt;/a&gt;. It will prompt you to create an account, but there is also a link to download without an account if you’d prefer.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Domain Change</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/"/>
		<updated>2021-09-19T19:46:56Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/</id>
		<content type="html">&lt;p&gt;This site is now ryanrobinson.technology instead of alliterationapplications.com. I felt that it was more representative of what this site has evolved to become. It is a repository of my technology knowledge and experience. It isn’t just about the rare freelance work that I do under the Alliteration Applications banner. Many of the blog posts came from personal study, personal projects, and (generalized versions of) work done within a full-time job – not from Alliteration Applications at all.&lt;/p&gt;
&lt;p&gt;With that rationale out of the way, I thought I’d break down how I changed the URL. I believe I could have done this a bit simpler by changing the URL on the same site, rather than making a copy first, but I decided to err on the side of caution where I would always have the old version if anything went wrong.&lt;/p&gt;
&lt;h2 id=&quot;rearrange-content&quot; tabindex=&quot;-1&quot;&gt;Rearrange content &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#rearrange-content&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I won’t get into all the details, but I had to rearrange a bunch of the content to make sense with the new broader goal for the site: the title of the site, the content of the homepage, and so on.&lt;/p&gt;
&lt;h2 id=&quot;change-domain-a-record&quot; tabindex=&quot;-1&quot;&gt;Change domain A record &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#change-domain-a-record&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To tell the wider Internet what to do when they try to visit ryanrobinson.technology, I had to go into my DNS records for the domain. It was previously using a simple FWD record to redirect any traffic to it to alliterationapplications.com, but now I want essentially the opposite. ryanrobinson.technology needs to be hosted and alliterationapplications.com needs to redirect traffic away instead. So, I removed the FWD record and added an A record to my IP address instead.&lt;/p&gt;
&lt;h2 id=&quot;add-domain-to-server-account&quot; tabindex=&quot;-1&quot;&gt;Add domain to server account &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#add-domain-to-server-account&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m on a shared hosting service with a cPanel. Step one was to add the extra domain ryanrobinson.technology to the same account as alliterationapplications.com. I specified that I wanted it to be a different document root than the existing site.&lt;/p&gt;
&lt;p&gt;I also took advantage of the AutoSSL feature in cPanel to generate an SSL certificate for the new domain.&lt;/p&gt;
&lt;h2 id=&quot;new-database&quot; tabindex=&quot;-1&quot;&gt;New Database &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#new-database&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I created a new database and new database user for the new site installation.&lt;/p&gt;
&lt;h2 id=&quot;duplicator&quot; tabindex=&quot;-1&quot;&gt;Duplicator &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#duplicator&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I used &lt;a href=&quot;https://wordpress.org/plugins/duplicator/&quot;&gt;Duplicator&lt;/a&gt; to make a copy of the site and install it in a new folder.&lt;/p&gt;
&lt;p&gt;At this point I had a functioning site at both domains.&lt;/p&gt;
&lt;h2 id=&quot;htaccess-on-old-domain&quot; tabindex=&quot;-1&quot;&gt;.htaccess on old domain &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#htaccess-on-old-domain&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I then wanted to redirect traffic from alliterationapplications.com to ryanrobinson.technology, and I didn’t want to simply redirect everything to the homepage. I wanted specific URLs to go to the matching URL.&lt;/p&gt;
&lt;p&gt;To achieve that, I added this to the .htaccess of alliterationapplications.com&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;pre class=&amp;quot;wp-block-code&amp;quot;&amp;gt;```
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine on
RewriteRule ^(.*)$ https://ryanrobinson.technology/$1 [R=301,L]
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;cleanup&quot; tabindex=&quot;-1&quot;&gt;Cleanup &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-19-domain-change/#cleanup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, I cleaned up everything from alliterationapplications.com that I no longer needed: the database and all the files in the alliterationapplications.com document root other than the .htaccess file. That’s not truly necessary, but does keep my storage usage down.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Browser Extension: Stylus</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-21-browser-extension-stylus/"/>
		<updated>2021-09-21T15:33:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-21-browser-extension-stylus/</id>
		<content type="html">&lt;p&gt;The &lt;a href=&quot;https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne&quot;&gt;stylus extension&lt;/a&gt; is a new addition to my browser (&lt;a href=&quot;https://tech.ryanrobinson.ca/web-browser-microsoft-edge-vs-chrome/&quot;&gt;Edge&lt;/a&gt;, available for all Chromium browsers). The core idea: it allows for changing stylesheets on websites while you browse without actually changing the server.&lt;/p&gt;
&lt;p&gt;This might be because it’s a website you don’t own. Get really annoyed at the new Twitter font (I actually really like it)? Write your own stylesheet so that whenever you’re browsing you see something else.&lt;/p&gt;
&lt;p&gt;It also can be a good technique for trying out a change over a period of time without actually needing to change the stylesheet on the server. This can simplify potential conflicts like others in your team editing at the same time or being confused by your in-progress changes.&lt;/p&gt;
&lt;h2 id=&quot;how-it-works&quot; tabindex=&quot;-1&quot;&gt;How it works &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-21-browser-extension-stylus/#how-it-works&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can write your stylesheet directly in the Stylus extension, including specifying which domains the change should apply to for you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/09/Stylus-Editor.png&quot; alt=&quot;&quot; /&gt;
&lt;em&gt;Stylus editor with a single change to font-size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Turn on the stylesheet in the extension and begin your regular testing. If you’ve worked with CSS on complex sites before (e.g. writing your own stylesheet on top of a WordPress or Drupal theme), you have probably encountered a scenario where the change you made applied it either too narrowly (missing a spot) or too broadly (changed something you didn’t mean to). Where Stylus can really be an advantage is that you can continue to browse the site as normal while working on other things. That gives you more opportunity to identify the problem before you actually save the change to the server. If there’s a problem, simply edit the CSS again and go back to browsing.&lt;/p&gt;
&lt;p&gt;Once satisfied, you can add the CSS to the site’s server for real.&lt;/p&gt;
&lt;h2 id=&quot;do-i-need-it&quot; tabindex=&quot;-1&quot;&gt;Do I need it? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-21-browser-extension-stylus/#do-i-need-it&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whether you need this extension or not depends on the nature of your workflow and your team. If you are the only person making changes on a development server, you probably may as well edit directly on the server right away instead of using Stylus for an extra test tool. But if others might also need to edit on the server, or if you want an extended period of time where you can test it without others seeing a change, then Stylus is a nice tool for the toolbox.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft 365: Tools for Recognizing Sensitive Data</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/"/>
		<updated>2021-09-27T11:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/</id>
		<content type="html">&lt;p&gt;There are a handful of tools in Microsoft 365 to help you with information protection. Which one is the best option will depend on the scenario you will need to use it for. Once you’ve identified sensitive data using one of these tools, you can use it apply compliance rules like blocking sharing outside the organization or retaining for a certain number of years.&lt;/p&gt;
&lt;h2 id=&quot;sensitive-information-types-dlp&quot; tabindex=&quot;-1&quot;&gt;Sensitive Information Types (DLP) &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/#sensitive-information-types-dlp&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sensitive information types, the backbone of data loss protection (DLP), relies on pattern recognition. Many sensitive types of data such as credit cards, passport numbers, and social insurance numbers have strict formatting requirements. These formatting requirements can be used to help identify them when they appear in a document, email, Teams chat, etc.&lt;/p&gt;
&lt;p&gt;Many common sensitive information types are already defined in Microsoft 365. If there’s something missing, you can add your own custom types.&lt;/p&gt;
&lt;h2 id=&quot;document-fingerprint&quot; tabindex=&quot;-1&quot;&gt;Document Fingerprint &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/#document-fingerprint&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Document fingerprints are valuable for documents that were created from a shared template. If you use a template document as the starting point for all invoices, and you want to implement some compliance policy on all invoices, a document fingerprint is the answer. This tool identifies the sensitivity of the document based on recurring word patterns.&lt;/p&gt;
&lt;h2 id=&quot;keyword-dictionary&quot; tabindex=&quot;-1&quot;&gt;Keyword Dictionary &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/#keyword-dictionary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A keyword dictionary is useful when you want to enact a policy on any instances of a specific set of data, where that specific set of data may change occasionally. A good example for this is employee IDs. Occasionally you’ll need to add a new employee ID or remove an old employee ID from the dictionary, but you always want to keep anything with those IDs protected.&lt;/p&gt;
&lt;h2 id=&quot;trainable-classifier&quot; tabindex=&quot;-1&quot;&gt;Trainable Classifier &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-09-27-microsoft-365-tools-for-recognizing-sensitive-data/#trainable-classifier&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The trainable classifier is a newer tool within Microsoft 365. Unless the other types, the trainable classifier does not depend on you being able to explicitly define what is and is not the definition of the data type. Instead, it relies on machine learning.&lt;/p&gt;
&lt;p&gt;This makes it a great candidate for scenarios like resumes. Often HR will want to hold resumes of job applicants for a certain period of time but then have them automatically deleted. In the meantime they don’t want those resumes to ever be shared outside the organization. But a resume isn’t clearly defined: there are no guarantees of having the exact same words in a sequence, or templates, or strict numerical formats. Humans just know what a resume looks like because we’ve seen lots of them.&lt;/p&gt;
&lt;p&gt;Trainable classifiers will apply that same approach but with machine learning. You’ll need to provide many examples of what the data type looks like and occasionally monitor it to see if it missed anything or flagged anything it shouldn’t.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Visual Studio Code: MySQL Extension</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-09-29-visual-studio-code-mysql-extension/"/>
		<updated>2021-09-29T20:16:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-09-29-visual-studio-code-mysql-extension/</id>
		<content type="html">&lt;p&gt;In a recent post I talked about &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/mysql-workbench/&quot;&gt;how great MySQL Workbench is&lt;/a&gt;. A few days later, I discovered a Visual Studio Code extension simply called MySQL. It is not as robust in some ways as Workbench (e.g. bulk importing and exporting).&lt;/p&gt;
&lt;p&gt;However, it does meet all the same core functionality such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;browse the tables and databases available to the user, with all the data kept in nice clear and easy-to-read lines&lt;/li&gt;
&lt;li&gt;write your own queries a table and get results in a nice table where you can do things like click sort by different headers&lt;/li&gt;
&lt;li&gt;edit entries directly in the table (no form editor mode like Workbench)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It does not do all the more intensive functionality that Workbench does, like importing and exporting with CSV files, but that’s the kind of thing that you likely don’t have to do regularly.&lt;/p&gt;
&lt;p&gt;The big advantage that it has over Workbench is being a part of Visual Studio Code which you are already using. That means a few little things can go faster and more lightweight on your computer’s resources. The two little things that I can imagine make a meaningful difference over time are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;less steps to login, since you are already SSHed to the host&lt;/li&gt;
&lt;li&gt;the ability to have a database open as a tab right beside the code, rather than jumping back and forth between Code in one window and Workbench in another&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course it’s great to also have Workbench available in your toolbox if you need more intensive functionality, but speaking for myself, I think I might start relying on this extension more often for the majority of my lightweight work.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Visual Studio Code: Grep</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-04-visual-studio-code-grep/"/>
		<updated>2021-10-04T14:14:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-04-visual-studio-code-grep/</id>
		<content type="html">&lt;p&gt;This is a quick post about a feature I discovered by accident in Visual Studio Code that I really like:&lt;/p&gt;
&lt;p&gt;I was working in &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/visual-studio-code-remote-ssh-development/&quot;&gt;a Linux machine and ran a grep in the integrated terminal&lt;/a&gt; to find a particular piece of code. The terminal gave me the results in the usual way, with the file names highlighted, the line in the code, and a bit of the code around what I searched for. Then I happened to scroll over the file name in the results and it showed me a tooltip offering that I could open the file by holding Ctrl and clicking on the path.&lt;/p&gt;
&lt;p&gt;So I tried it, and it worked as advertised. This is one of those tiny things that will really add up. I use grep a lot. Most of the time when I do I want to open one or more of the files found. Without this little feature, that means copying the path to the file into a new command. That’s a small amount of time, but it does add up.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Dev.to and Tealfeed</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-07-dev-to-and-tealfeed/"/>
		<updated>2021-10-07T13:14:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-07-dev-to-and-tealfeed/</id>
		<content type="html">&lt;p&gt;This isn’t the only place I’m posting my writing. I’m also posting to &lt;a href=&quot;https://dev.to/&quot;&gt;dev.to&lt;/a&gt; and &lt;a href=&quot;https://tealfeed.com/&quot;&gt;Tealfeed&lt;/a&gt;. These are other knowledge sharing networks, free to use, and both with options to set your own blog as the canonical URL.&lt;/p&gt;
&lt;p&gt;Here are the early pro’s and con’s of each:&lt;/p&gt;
&lt;h2 id=&quot;dev-to&quot; tabindex=&quot;-1&quot;&gt;Dev.to &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-07-dev-to-and-tealfeed/#dev-to&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dev.to has two major positives:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is a big and supportive community&lt;/li&gt;
&lt;li&gt;The editor is easy and accepts copying from WordPress&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Dev.to is a very well-known community of tech writers. It’s not just a blogging site. Even on my first post, I quickly had a positive comment offering some more helpful information building on top of what I wrote.&lt;/p&gt;
&lt;p&gt;The editor to write a post is straightforward. It even accepts copying and pasting code from WordPress with no issues, even for images. Each post has a featured image which is not restricted in dimensions, so it’s easy to use the same one used on this site. That makes it very simple to quickly copy over posts I did here to share on dev.to as well.&lt;/p&gt;
&lt;p&gt;It also has one minor negative: Dev.to is specifically for developers, as the name implies. I am only posting web development related things there, not Microsoft IT things or anything else I feel like sharing. Even on this point, there is some positive trade-off, as it means that the tags will allow you to get much more precise, such as “css” instead of “web development.”&lt;/p&gt;
&lt;h2 id=&quot;tealfeed&quot; tabindex=&quot;-1&quot;&gt;Tealfeed &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-07-dev-to-and-tealfeed/#tealfeed&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tealfeed is a less well-known platform, at least in developer circles. My first impressions were not great. I created an account and logged in for the first time. The page spun for about 15 minutes before I gave up because I had other things to do. I came back a week later. This time it loaded my homepage with no issues. It may have been a one-time fluke, but some unfortunate timing.&lt;/p&gt;
&lt;p&gt;I then created my first post. I tried to do what I do with dev.to: copy the WordPress page. That did not work at all. It does not interpret HTML tags and does not ignore the WordPress specific tags. It does not support a lot of formatting like headers at all. It does support images and separators, but not as HTML tags. You have to use the editor interface. So even for those features that are supported, you have to do it all over again. It does take a featured image, but it’s restricted to certain dimensions, so if you care about that and don’t already have your image in the right dimensions, you’ll spend more time to create an alternate image copy. All told, while dev.to takes about 2 minutes to copy a post from WordPress, Tealfeed takes more like 15 to reformat everything.&lt;/p&gt;
&lt;p&gt;It’s got a few other oddities that demonstrate it simply isn’t very far allow in its development. If I use dark mode, which I always prefer, there are a handful of places in the key post creation process where it has black text on a black background. Not helpful.&lt;/p&gt;
&lt;p&gt;The one thing that does make it more interesting is that it is not limited to developers, or even technology as a whole. You can follow lots of topics like psychology and photography as well.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-07-dev-to-and-tealfeed/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dev.to is absolutely worth the effort to copy posts from here to there, at least for those that fall broadly within the realm of “developer.” There’s no debate on that one to me.&lt;/p&gt;
&lt;p&gt;Tealfeed is a bit more complicated. It’s hard to say yet whether it’s worth the effort to copy posts, especially since it takes so much longer to reformat. I’ll continue to give it a shot for at least a month or two before making a final judgement. I can pretty easily talk myself into keeping an account for the sake of following other interesting topics, though. It’s too bad they don’t have a mobile app, because I could definitely see it being an app I scroll for interesting stuff outside of work hours.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Information Session</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/"/>
		<updated>2021-10-12T19:42:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/</id>
		<content type="html">&lt;p&gt;I recently gave a presentation introducing some key concepts and answering questions around Microsoft Teams. The context was for those who already have accounts and have used it throughout Covid-19. They didn’t need the day-to-day basics like how to start a meeting, but they needed a better understanding of how all the pieces fit together and when it is best to use what. It was not a full consultation process, but I did put out a call for questions a couple weeks in advance and received several that I made sure to integrate into the presentation.&lt;/p&gt;
&lt;p&gt;I’ve edited my notes to be a bit more generic and included those below:&lt;/p&gt;
&lt;h2 id=&quot;caveats&quot; tabindex=&quot;-1&quot;&gt;Caveats &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#caveats&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A couple caveats before I begin getting technical:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Teams is massive. One of the hard things with talking about Teams is that you can’t easily compare it to just one competitor. It’s a lot of tools rolled into one. And it’s just one part of Microsoft 365. We aren’t going to cover nearly everything that is possible in 45 minutes. I’m going to hopefully give enough of an introduction answering some key questions I’ve heard come up a few times.&lt;/li&gt;
&lt;li&gt;One of the other hard things talking about Teams is that Microsoft is kind of bad at branding. They use a lot of the same words repeatedly to refer to related but not exactly the same things. So you do get scenarios like having a Teams app on your device which has the Teams app in the sidebar which has multiple Teams in it and all of those Teams are associated with SharePoint Team sites. Don’t feel bad if somebody says a term and you don’t know what it means.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;big-picture&quot; tabindex=&quot;-1&quot;&gt;Big picture &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#big-picture&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is an older diagram that Microsoft has used in the past and I have held on to because I think it is a helpful explanation of the big picture. There are a lot of tools in Microsoft 365 that overlap, but this summarizes pretty well what the most important value is for the big communications pieces.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/09/Communication-Loops.jpg&quot; alt=&quot;Communication Loops: Teams, Yammer, Outlook, SharePoint, Groups&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Your inner loop is Teams. This is where you’re going to spend the bulk of your conversations with the people that you work with the most, like your department.&lt;/p&gt;
&lt;p&gt;The outer loop is Yammer. It’s an enterprise social network. &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/the-time-i-recommended-yammer/&quot;&gt;Where it can be good is to have organization-wide conversations, especially more casual conversations.&lt;/a&gt; That’s as much as I’m going to talk about it today.&lt;/p&gt;
&lt;p&gt;Email is for targeted communications. It’s also ubiquitous. You’re going to need it sometimes, but if you’re talking to that inner loop, you might want to pause and consider whether it would work better in Teams or not before you send an email.&lt;/p&gt;
&lt;p&gt;In the middle of everything is SharePoint. SharePoint can get a lot more complicated than this but for today, you can think of SharePoint as shared file storage.&lt;/p&gt;
&lt;p&gt;Underneath it all is Microsoft 365 Groups. These provide the permission structure that spans across all those tools and some more. If you are added to the Group, you get access to all the tools defined for that group: Teams, a shared email, shared calendar, SharePoint files, Planner for task management, and more. Generally speaking, in a large organization, only IT and a few more can create Groups. That’s done intentionally so that there isn’t too much sprawl of thousands of groups and everybody using a different strategy for them. Owners of the groups usually have some control over who is in the group as well as some other settings. Exactly who can control what setting is often determined by a policy set by IT.&lt;/p&gt;
&lt;h2 id=&quot;teams-overview&quot; tabindex=&quot;-1&quot;&gt;Teams Overview &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#teams-overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With that big picture out of the way, I’m going to do a quick walk through of what you see in the Teams app.&lt;/p&gt;
&lt;p&gt;Search bar: across the top in the middle is a search bar. This can be used to search across everything in Teams, including people, files, and messages.&lt;/p&gt;
&lt;p&gt;It does not search across other aspects of Microsoft 365, such as SharePoint sites not associated with teams or associated with teams you aren’t in. There is a relatively new tool called Microsoft Search that has been slowly rolling out over a few years. That is available in some other places and gives you results from everywhere in Microsoft 365. I will quickly demo that later. The Teams search does not do that yet but probably will eventually. For now, it just gives you results from Teams.&lt;/p&gt;
&lt;p&gt;Settings: hidden in the little ellipses menu in the top right are settings. Teams gets updates very often, so I do recommend looking in here every few months because you might find something useful that’s new that would help your work.&lt;/p&gt;
&lt;p&gt;Profile: beside that is your profile photo. This is your Microsoft 365 profile. On the desktop and mobile apps, you can also add a personal Teams account. I won’t get into that, but it is also an option.&lt;/p&gt;
&lt;p&gt;Running down the main tab menu on the left, this is most often called the app sidebar or app bar. On desktop you can rearrange this menu by clicking and dragging an icon into a different position, but possibly with some limitations set by IT. If you can’t rearrange something, or you do but then it reverts back later, that’s because of &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-teams/microsoft-teams-app-policies-define-sidebar-for-most-users/&quot;&gt;IT policy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Activity tab is essentially your notification hub. Anything that has sparked a notification across all your Teams will show up in the Activity section. If you think you missed a notification, this is a good place to look. Treat it the way you treat your Outlook inbox, as the place you check regularly for anything you may have missed. There are some options here like being able to filter your notifications against a search term, and if you right-click on a notification you can mark it as unread. The way I work at least, that can be a useful way to remind myself to come back to it later, if I still have unread notifications.&lt;/p&gt;
&lt;p&gt;Chat and Teams I will break down a bit more in a minute, but that’s a lot of the heart of the communication system.&lt;/p&gt;
&lt;p&gt;Calendar: the Calendar section is what you would expect from the name. It shows your calendar. Where it is especially useful is with meetings that happen in Teams. You can schedule meetings in here or join meetings previously scheduled from here. That also includes webinars with features like registration forms for people to sign up, and live streamed events which can be viewed by the public.&lt;/p&gt;
&lt;p&gt;Files: this is another window into your files. They can be files across your teams as well as in your individual OneDrive. Sometimes you can also add other cloud services like Google Drive and Dropbox in here, but that’s determined by organizational policy.&lt;/p&gt;
&lt;p&gt;Calls: the Calls section, in my opinion, is not that useful unless you’re using the &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-teams/microsoft-teams-phone-numbers/&quot;&gt;Teams phone system&lt;/a&gt;. With that, your calls from regular phones would ring in Teams, which could be on a computer or a dedicated phone device. If you aren’t using Teams phone systems, this Calls section is a pretty basic dashboard of recent calls and speed dial.&lt;/p&gt;
&lt;p&gt;Then there’s the ellipses. There are plenty of other apps available to install within Teams. Teams really is a platform in its own right, not just an app. Some of these apps that can be added are from Microsoft, some from other providers, and your organization could even build your own app and deploy it just for you. Depending on your workflow, some of these other apps may be helpful to you, so it is worth taking a look at what is available.&lt;/p&gt;
&lt;h2 id=&quot;chat-vs-teams&quot; tabindex=&quot;-1&quot;&gt;Chat vs Teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#chat-vs-teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest question I have heard when it comes to communication in Teams is when to use the Chat area and when to use the Teams area.&lt;/p&gt;
&lt;p&gt;I’ll do Chat first because it is a bit simpler. You can think of Chat as something like Skype or Skype for Business. You can send short text chats and have audio and video calls with one other person or a small group of people. You can even message people outside your organization if they are using Teams, Skype for Business, or consumer Skype.&lt;/p&gt;
&lt;p&gt;It appears as one long running conversation. If I start talking to somebody about one issue, then we switch to a different issue, then go back to the first issue, it’s all going to be jumbled together, so there isn’t an easy way to say “show me everything about this one issue.” The other important detail is that these conversations are visible only to the people in the conversation.&lt;/p&gt;
&lt;p&gt;The Teams section is much more extensive. If you’ve used Slack, it’s the closest comparison. It’s a lot more than just Chat. It’s more of a complete project dashboard for a group.&lt;/p&gt;
&lt;p&gt;You can be a part of multiple Teams. There is technically a limit but it is very large.&lt;/p&gt;
&lt;p&gt;Each Team can have multiple channels. Each channel has threaded conversations, which makes it a lot easier to keep track of multiple conversations happening at once, or to find them later using search. Exactly how to divide up the channels will vary by the team. In my demo channel, we essentially have a channel for each project or technical system we maintain.&lt;/p&gt;
&lt;p&gt;Each channel is set up with some tabs at the top. Tabs allow you to add different content, which could be in Microsoft 365 or could be somewhere else. That’s part of how it really becomes a project dashboard. The idea is that if somebody new were to join the project, they would be able to look at this one screen and they would see everything they need to see: past conversations about the project, task lists, documentation. None of that is available if all the conversations happen in Chat instead. To add new tabs, you just use the little + button. As with the apps in the sidebar, there are a lot available.&lt;/p&gt;
&lt;p&gt;There’s also a handful of other useful features on the Team that you don’t get with Chat. One of my favourites is that you can share an email to a channel, if the team’s policy allows it. This is great in scenarios like getting an email but you need to consult with your group before you respond, so that you can coordinate who is going to answer what. There is a button in Outlook that can do that, or you can look up the email address for a channel and forward an email to it.&lt;/p&gt;
&lt;p&gt;So to summarize: Chat is good when you need to message somebody outside your organization or somebody who you don’t have regular ongoing work with as part of a Team. But the Team should be the default for most conversations with that “inner loop” of people you work with regularly, so that you can have the full advantages of the project dashboard approach.&lt;/p&gt;
&lt;h2 id=&quot;notifications&quot; tabindex=&quot;-1&quot;&gt;Notifications &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#notifications&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the questions I got was about notifications, specifically how to know when the person you are trying to contact will be notified and when they will not.&lt;/p&gt;
&lt;p&gt;One way people get notified is if they are subscribed to a channel. Anybody can choose to subscribe to any channel they are a part of. Then they will be notified based on the settings they choose. I recommend this for anybody who is effectively a project manager to be subscribed to all conversations on the channel. Those people won’t necessarily need to respond to every conversation, but they probably should keep a high-level overview of what’s happening.&lt;/p&gt;
&lt;p&gt;If the person you are messaging isn’t subscribed, or if you don’t know whether they are subscribed, you can still notify them using an @ mention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@ mention them individually. My tiny tip with this is that after you select the name of the person to @, you can backspace and delete their last name with the @ still working. It’s just a little easier to read and a little more personal.&lt;/li&gt;
&lt;li&gt;@ mention a tag. Tags are set by the team owner. They can be used to specify a subset of the team to easily notify, especially useful when you have big teams that may not always know each other. Say somebody new joins the team and they have a question about a certain subject area, but they don’t know who specifically to ask; they could use the tag instead.&lt;/li&gt;
&lt;li&gt;@ mention the whole group or a channel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;People will also receive a notification if you respond to a conversation started by them. You don’t have to @ message the person if you are replying to their conversation.&lt;/p&gt;
&lt;p&gt;And finally, they will be notified if you react (like) to a message by them.&lt;/p&gt;
&lt;p&gt;So the rule of thumb is that if you are in doubt and you need somebody or a small group of people to see it, use an @ mention. But you don’t have to when responding to their message or if you know they’re subscribed to the channel.&lt;/p&gt;
&lt;h2 id=&quot;files&quot; tabindex=&quot;-1&quot;&gt;Files &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’m going to move on to the biggest set of questions I got which had to do with file management. How do I find my files? Where do I put a new file? Who has access to the file?&lt;/p&gt;
&lt;p&gt;I’ll say upfront that there is a bit of a blessing and a curse scenario here. There are a lot of entry points to get to your files. The curse of that is that it can be a bit overwhelming. The blessing is that you have a lot of choices to decide what works best with your workflow and you can ignore the rest. I will talk through some of these options, but you don’t need to be comfortable with all of them.&lt;/p&gt;
&lt;p&gt;You can use an analogy like travelling to the office. When we’re all coming to the office again, we’ll all have the same destination, but we all have different starting points – our houses – and different routes to get there. What matters is that we get to campus. What matters in Microsoft 365 is that we are working from the same files. How we access that file is not as important.&lt;/p&gt;
&lt;p&gt;This is a vast improvement over the older model where you might end up with lots of copies of the same file floating around because they’ve been emailed as attachments and now everybody has their own copy. When you email a copy as an attachment, you aren’t sharing a destination. You all have your own destinations, your own copies of the files, which can result in different content in the file as people change their own copy over time. As a general rule, do not share a copy of a collaborative file as an attachment to anybody within your organization. You should only resort to attachments if you’re sharing external or if it’s a one-way communication where you don’t need to know if they make any changes to it.&lt;/p&gt;
&lt;p&gt;What does help is a little more knowledge of the destination, the file system. This goes back to that diagram from the beginning when I said the file system underneath everything is SharePoint.&lt;/p&gt;
&lt;p&gt;One of the questions I got a few times was OneDrive vs SharePoint. OneDrive really is just a simpler version of SharePoint with less features and different default permissions.&lt;/p&gt;
&lt;p&gt;In many ways this parallels the Chat vs Teams discussion. Chat is for conversations owned by only a few participants while Teams is for bigger conversations owned by the groups with all the extra features.&lt;/p&gt;
&lt;p&gt;OneDrive is for files owned by just you. SharePoint is for files owned by a group with all the extra features.&lt;/p&gt;
&lt;p&gt;And the Teams distinction does line up with the file distinction.&lt;/p&gt;
&lt;p&gt;If I’m having a chat with somebody and we put a file in the Files tab, where do you think that file is going to be saved? It will be in the OneDrive of the person who created it, shared with the other. The file is owned by who created the file, not a group.&lt;/p&gt;
&lt;p&gt;If I put a file in the Files tab from a Teams channel, where do you think that file will go? It will go in the SharePoint site tied to the Team.&lt;/p&gt;
&lt;p&gt;How about the video recording of this session right now? I created this meeting myself, sending an invite from Outlook. So who owns this meeting? I do. The recording will end up in my OneDrive.&lt;/p&gt;
&lt;p&gt;What if we had a Team that included everybody here and I created this meeting from a channel on that Team? Then the file would be saved on the SharePoint site associated with the Team instead. The meeting is owned by the team and so is the recording.&lt;/p&gt;
&lt;p&gt;In other words, Teams is not its own file system. Teams is built on top of SharePoint. Every Team is associated with a SharePoint site. When you look at that Files tab in a Team channel, that’s really a window into a specific folder on a SharePoint site. For the most part, you can do everything you need from Teams and you often don’t need to look at SharePoint directly for these team day-to-day project files. You do have to look at SharePoint directly if you have something like an intranet portal that isn’t linked to Teams, but it’s not unusual if most of the members of a specific team never actually look at the SharePoint site for that specific team directly.&lt;/p&gt;
&lt;p&gt;It’s not Teams vs SharePoint. It’s Teams AND SharePoint. It’s Teams as one of the possible routes into the destination of SharePoint. If your channel is already that project dashboard and you’re already in there having conversations anyway, then using that as your main way to get to files is probably the easiest. But it’s not the only way. If you prefer other routes to your files, you can use them.&lt;/p&gt;
&lt;p&gt;In some ways I know this can sound very complicated with all the different possible scenarios. But it really comes down to one question: who owns that conversation or that file? Teams is structured in such a way that once you are in the right spot for a conversation, all the files will also be lined up. If I’m having a conversation in one team about a specific project, I don’t need to stop again to think about where to put files related to that project. I can just go to the Files tab and know that everything in there is visible to the team.&lt;/p&gt;
&lt;p&gt;If you’re going to make a new file and don’t know where to put it, think about who needs to be able to see the file. And I think it is important to qualify that as who will ever need to see it. Maybe 99% of the time it will be you using the file, but somebody else needs it when they need to cover for you while you’re on vacation. Or if something happens and you suddenly aren’t working starting tomorrow, will everybody else have everything they need to continue your work? So, a lot of things like documentation of processes, or files in a project that others may need to reference in the future, those should all be in SharePoint, typically through a Team.&lt;/p&gt;
&lt;p&gt;There may be more things private to you that stay in your OneDrive. In my work, that means things like configuration files for all my developer environment tools, and a copy of the profile photo I use everywhere. Nobody else ever needs to see those. But most of what I’m doing is in SharePoint, through Teams, available to others if or when they need it.&lt;/p&gt;
&lt;p&gt;Permissions in both OneDrive and SharePoint can get a lot more complicated than the defaults – you can share from OneDrive with others – but the more you stick to the defaults the easier your life is going to be.&lt;/p&gt;
&lt;h2 id=&quot;syncing-files&quot; tabindex=&quot;-1&quot;&gt;Syncing files &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#syncing-files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That’s the most important piece, understanding the destination and that Teams is one route into that destination. But it’s not the only route. I’ll cover a few more ways to access files and I’ll reiterate what I said earlier: you don’t need to do all of these. You need to find which one or ones fit your workflow.&lt;/p&gt;
&lt;p&gt;The next most common one is synchronizing your files. You may want to synchronize files that are in a SharePoint site to your computer. This makes it so that you have a copy on your computer and whenever a change happens in either the cloud version or your desktop version, the change will be synchronized to the other location so that everybody continues to be working from the same content even if technically there is a copy.&lt;/p&gt;
&lt;p&gt;Why would you want to do this? There are three major scenarios:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you don’t have reliable Internet and you need to access the file while offline.&lt;/li&gt;
&lt;li&gt;If you have file types other than Office apps that you need to act on in other ways. For example, in my work, I might have a bunch of image files that I’m going to need to upload to a website. To do that, I’ll need the files on my computer.&lt;/li&gt;
&lt;li&gt;And the last good reason is simply that you are used to browsing for files in Windows Explorer. You will still need to have enough understanding of the cloud locations in order to start the sync, but after that, you can have the benefits of it syncing to the cloud while still doing everything the way you’re used to doing it on your computer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are also now two ways to achieve this. The older way is the Sync button which is visible both in Teams and SharePoint in the browser. Hitting that will open the OneDrive app on your computer to set up the sync.&lt;/p&gt;
&lt;p&gt;The newer way is a “Add shortcut to OneDrive” button which shows up in SharePoint but not in Teams.&lt;/p&gt;
&lt;p&gt;It’s too big of a tangent to break down the advantages of each, but &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/sharepoint/desktop-sync-files-across-onedrive-and-sharepoint/&quot;&gt;I do have a post about it&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;other-ways-to-access-files&quot; tabindex=&quot;-1&quot;&gt;Other Ways to Access Files &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-12-microsoft-teams-information-session/#other-ways-to-access-files&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Those are the two ways most intuitive for most people to access their files: within Teams and synchronized to your computer.&lt;/p&gt;
&lt;p&gt;But there are a lot more which I will mention but not demo all of them.&lt;/p&gt;
&lt;p&gt;I mentioned &lt;a href=&quot;https://tech.ryanrobinson.ca/microsoft-365/microsoft-search-introduction/&quot;&gt;Microsoft Search&lt;/a&gt; earlier. There are a few entry points to Microsoft Search. One of them is a Bing search. Cue the jokes about somebody actually using Bing. But I have my default browser search set to Bing. The main reason is Microsoft Search. If I want to try to start a search, I can enter that in a new tab address bar like I would any other search, and part of the results is this “Work” or “School” section (depending on your organization type). That will give me lots of content across Microsoft 365 including documents, groups, people, Teams conversations, and so on.&lt;/p&gt;
&lt;p&gt;A scenario where I use this a lot is if I’ve encountered a new bug on a website. I’ll do my search, and first I’ll look at the Work/School tab to see if this is a problem anybody in my organization has dealt with before. Maybe there’s a file documenting it, or maybe a Teams conversation about it. If I don’t find anything internally, I flip back to the All results tab and see what is available elsewhere.&lt;/p&gt;
&lt;p&gt;And speaking of a new tab, if you use &lt;a href=&quot;https://tech.ryanrobinson.ca/web-browser-microsoft-edge-vs-chrome/&quot;&gt;Edge&lt;/a&gt; as your primary browser, you can set your New Tab screen to show your Office documents. I like this because I open new tabs a lot and sometimes I’ll quickly glimpse that a colleague has edited a shared file relevant to me, so it gives me the extra prompt to look into that.&lt;/p&gt;
&lt;p&gt;There are a few other places that look more or less the same as this. You can go to office.com. There is a Windows and a mobile app simply called Office. If you use Android, there’s a launcher called Microsoft Launcher that can show recent cloud documents. What those all have in common is that the focus isn’t necessarily on browsing everything, but they can prompt you to quickly reload a file that the Microsoft algorithm thinks you may want to see again.&lt;/p&gt;
&lt;p&gt;You can also open files directly in the Office apps like Word and Excel, whether web, desktop or mobile. Those actually give you a bit of both where you can see the recommended files or you can browse through SharePoint to find something. If these files are housed in SharePoint or OneDrive, they do not also have to also be synced to your computer to open them in the desktop app. You can open directly from the cloud.&lt;/p&gt;
&lt;p&gt;There are also OneDrive and SharePoint mobile apps, which can be good if you want to be able to browse everything a bit more freely or you need to do a lot more work on the go.&lt;/p&gt;
&lt;p&gt;You can also browse SharePoint in your desktop browser, as I mentioned before, but there isn’t necessarily navigation to get from one site to another if your organization’s IT hasn’t set that up.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitHub Copilot</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-22-github-copilot/"/>
		<updated>2021-10-23T01:37:15Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-22-github-copilot/</id>
		<content type="html">&lt;p&gt;A few months ago it was big news in the programming world when &lt;a href=&quot;https://copilot.github.com/&quot;&gt;GitHub Copilot&lt;/a&gt; was announced. This week, I was accepted into the preview, so now I have a chance to try it out and share my thoughts.&lt;/p&gt;
&lt;h2 id=&quot;concerns&quot; tabindex=&quot;-1&quot;&gt;Concerns &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-22-github-copilot/#concerns&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before I do that, I’ll make a few caveats. When it was announced, the reaction was mostly positive. It is an incredible service that can really help speed up development. But there were a couple concerns I saw being raised, which I will address quickly.&lt;/p&gt;
&lt;p&gt;One concern was that developers would allow Copilot to write large chunks of their code and not actually understand it. I’m sure this will happen and it is certainly not ideal. It’s also not that different than copying and pasting from StackOverflow without understanding. That’s why ultimately this part doesn’t concern me much.&lt;/p&gt;
&lt;p&gt;The other concern I think is a bit more serious: licensing. Copilot combines code from publicly-available code repositories. Those repositories may have a wide variety of licenses on them. Some are completely fine with you using them in a commercial product. Some do not want you to do that at all. Some are ok with it as long as you provide credit. The problem with Copilot grabbing the code for you is that it does not filter by license and it doesn’t even point you to the original repositories that helped inspire the code. The counterpoint is that Copilot is not strictly copying code from the repositories – it is writing new code with inspiration from many repositories – but it still feels a bit closer to the ethical line than many are comfortable with.&lt;/p&gt;
&lt;h2 id=&quot;my-first-test&quot; tabindex=&quot;-1&quot;&gt;My first test &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-22-github-copilot/#my-first-test&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With that out of the way, I’ve now had a chance to try it out.&lt;/p&gt;
&lt;p&gt;The first thing I tried was in a WordPress plugin that looks for Bible references and wraps them in links. I’ll have a post about this when it’s done, but I did this years ago in a previous job and decided to try to recreate it as a portfolio project.&lt;/p&gt;
&lt;p&gt;I had two major problems left when I got access to Copilot. The first was easy but would take some time: I needed to list all the books of the Bible and all the common abbreviations for them. I did have a shell of a function already, but only had done anything for Genesis and Exodus. So, I wrote a comment saying this is exactly what I needed to accomplish.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Define abbreviations for all books of the Bible
 */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copilot kicked in. Sort of. It gave me what looked like it was exactly a slightly-older version of my code right above it, only giving me Genesis and Exodus. I can say it was kind of cool to watch the suggestion pop up, even if that excitement faded quickly once I realized it wasn’t giving me anything helpful.&lt;/p&gt;
&lt;p&gt;The second was regex. I needed it to recognize a few different potential patterns. I also needed it to ignore if the link was in a header or another link. Similar to the first problem, I did already a shell of an idea here, but I tried to get it to help me. This time it gave me nothing useful at all – it didn’t even try to write regex.&lt;/p&gt;
&lt;p&gt;Maybe this use case was too niche, although I imagine there are enough other uses on GitHub for a list of Bible abbreviations. Maybe it was struggling because I had already started something previously and so it stuck to that instead of starting fresh. I’m certainly not giving up on the idea. I’ll leave it enabled as I do more work. Hopefully it will offer something a bit more valuable as time goes on, and if it does, I’ll try to blog about that. For now, my grade of Copilot has to be an “incomplete.”&lt;/p&gt;
&lt;h2 id=&quot;update&quot; tabindex=&quot;-1&quot;&gt;Update &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-22-github-copilot/#update&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since this initial test, I have kept Copilot turned on for more normal operations. It has helped a little with Drupal PHP work, but not much. It has helped more with CSS: sometimes it will generate something for me and I’ll try it out and adjust from there, rather than writing my own from scratch. It has prompted a good idea or two for me that way. The most I’ve found I’ve accepted the suggestions is actually not in the code itself but in writing comments; it is quite good at finishing my sentences. So, it continues to not be as dramatic for me as I’ve seen others demo, but it is certainly worth turning on.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Koa11y: Accessibility Testing Tool</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-28-koa11y-accessibility-testing-tool/"/>
		<updated>2021-10-28T22:11:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-28-koa11y-accessibility-testing-tool/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://open-indy.github.io/Koa11y/&quot;&gt;Koa11y&lt;/a&gt; is another useful website development tool I came across recently. It is a downloadable desktop app that can be used to test out a website’s accessibility. It is not the most user-friendly app – not as intuitive as &lt;a href=&quot;https://wave.webaim.org/extension/&quot;&gt;the WAVE extension in your browser&lt;/a&gt;, for example – but a web developer should have no problem sorting out a few extra steps. Most importantly, it did return more detailed issues with the website I first tested against compared to WAVE, which can be valuable information to fix as many accessibility issues as possible.&lt;/p&gt;
&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; src=&quot;https://www.youtube.com/embed/yoJDb018Edc?feature=oembed&quot; title=&quot;Koa11y: Find Accessibility Issues on your Site&quot; width=&quot;500&quot; height=&quot;320&quot;&gt;
&lt;h2 id=&quot;koa11y-demo&quot; tabindex=&quot;-1&quot;&gt;Koa11y demo &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-28-koa11y-accessibility-testing-tool/#koa11y-demo&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To try it out, simply download the zip file (Windows, in my case) from the link above and extract it. Launch the main executable to see a screen like this:&lt;/p&gt;
&lt;p&gt;Enter a website that you want to run accessibility tests against. For example, I tried for ryanrobinson.technology. It will generate an HTML file saved on your computer with all the details of the report.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/10/ryanrobinson-results.png&quot; alt=&quot;&amp;quot;Results for the Ryan Robinson Technology site does not get a perfect score&amp;quot;&quot; /&gt;
&lt;em&gt;Results for this site. Yeah, I have some work to do.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;pa11y&quot; tabindex=&quot;-1&quot;&gt;Pa11y &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-28-koa11y-accessibility-testing-tool/#pa11y&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is built on top of &lt;a href=&quot;https://pa11y.org/&quot;&gt;pa11y&lt;/a&gt;. Pa11y is a tool that iterates over a webpage and tells you all the accessibility errors found. It comes with a variety of configuration options. I first went down this route as I was investigating tools that might help me enforce more accessibility testing as part of a GitLab CI/CD pipeline. Unfortunately, it can only check websites which are publicly accessible, and our dev servers are protected and only accessible by our team. I wouldn’t have been able to integrate it into our pipeline until any changes had already gone to production, which defeated the purpose. But it did lead me to Koa11y which can still be a useful tool to have in the belt to periodically review sites which are publicly-accessible. If you’re looking for something a bit more programmatic in your workflow, though, give Pa11y a try. If Koa11y’s results are any indication, it’s a pretty powerful tool.&lt;/p&gt;
&lt;/iframe&gt;</content>
	</entry>
	
	<entry>
		<title>Yubikey: Early Impressions</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-10-31-yubikey-early-impressions/"/>
		<updated>2021-10-31T19:25:55Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-10-31-yubikey-early-impressions/</id>
		<content type="html">&lt;p&gt;I recently obtained two &lt;a href=&quot;https://www.yubico.com/&quot;&gt;Yubikey security keys&lt;/a&gt; to boost my personal and professional security. I picked up one Yubikey Bio and one Yubikey 5 NFC. They recommend that you always have a backup in case you lose one, and from what I had learned, I wanted the Bio in several services that would support it, but also the 5 NFC for other services and for mobile NFC authentication.&lt;/p&gt;
&lt;p&gt;It’s now been a week, so here are some initial thoughts.&lt;/p&gt;
&lt;h2 id=&quot;support&quot; tabindex=&quot;-1&quot;&gt;Support &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-31-yubikey-early-impressions/#support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I set up on multiple services. These were the big ones to me that supported both keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft (personal)&lt;/li&gt;
&lt;li&gt;Microsoft (Office, as long as the IT department has enabled it)&lt;/li&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;1Password&lt;/li&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;WordPress&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A couple others only accepted the Yubikey 5 NFC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google (personal)&lt;/li&gt;
&lt;li&gt;GitLab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, here are some of the services I tried which do have at least one form of multi-factor authentication, but did not support any kind of security key:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LinkedIn (that one surprised me, since it is owned by Microsoft)&lt;/li&gt;
&lt;li&gt;PayPal&lt;/li&gt;
&lt;li&gt;Amazon&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The setup process in general is easier than setting up with an authenticator app or text messaging. You just need to plug it in and enter your same PIN every time, instead of going back and forth copying a numerical string from one device to another.&lt;/p&gt;
&lt;h2 id=&quot;bio-vs-5-nfc&quot; tabindex=&quot;-1&quot;&gt;Bio vs 5 NFC &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-31-yubikey-early-impressions/#bio-vs-5-nfc&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Bio, unlike the 5 NFC, has a fingerprint reader. When initially setting it up, I still had to use a PIN, but after that, I could simply tap my finger on it instead of entering the password. You still need to set a PIN on it and that will be a fall back if you can’t use the fingerprint reader, but for the most part it’s a bit easier to tap your finger.&lt;/p&gt;
&lt;p&gt;It does not work as a fingerprint reader with Windows Hello. I thought it was supposed to, but doing some research now, nothing suggests that I can. I’ve tried it on 3 different computers (1 is work-managed) and it does not work. That’s disappointing. I thought this was a good way to get a security key and a Windows Hello device all in one.&lt;/p&gt;
&lt;p&gt;On the other hand, there are three advantages to the Yubikey 5 NFC compared to the Bio:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NFC support means it will work for logging in to services on your phone, by tapping the key to the back of your phone that has NFC turned on. The Bio can’t do much for mobile logins.&lt;/li&gt;
&lt;li&gt;More services support it (see above).&lt;/li&gt;
&lt;li&gt;It’s cheaper.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-10-31-yubikey-early-impressions/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;They are great. They are more secure than using an authenticator app (somebody could hypothetically hijack my authenticator app in a way they couldn’t for the key without physically taking it from me) and easier to use.&lt;/p&gt;
&lt;p&gt;The question is whether they are great enough to justify spending on them. If you’re doing a lot of logins with apps in your work, the answer is probably yes. If you are a casual user who only has 5 or 6 services with two-factor authentication to deal with, the answer is probably no – stick with the authenticator app on your phone.&lt;/p&gt;
&lt;p&gt;If you decide to get some, get at least two so you have a backup. Two of the Yubikey 5 NFC’s are likely all that most people need for cheaper. If you’re logging in a lot, you may want the combination like I did: a Bio for all the desktop services that support it and a 5 NFC for mobile use and the rest.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Vagrant: Oracle Linux VM</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-11-10-vagrant-oracle-linux-vm/"/>
		<updated>2021-11-10T21:34:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-11-10-vagrant-oracle-linux-vm/</id>
		<content type="html">&lt;p&gt;This is the first in &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;a series setting up a basic DevOps pipeline&lt;/a&gt; through local virtual machines, GitLab, a dev server, a staging server, and a production server. This first post will look at the local VM setup. The next step will move on to using this local VM in connection with GitLab for version control and CI/CD.&lt;/p&gt;
&lt;h2 id=&quot;oracle-linux-8-lamp-stack&quot; tabindex=&quot;-1&quot;&gt;Oracle Linux 8 LAMP stack &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-10-vagrant-oracle-linux-vm/#oracle-linux-8-lamp-stack&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The VM will be using &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant &lt;/a&gt;and &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;Oracle VirtualBox&lt;/a&gt;. Every user will need to install both, as well as the VirtualBox extensions, for this to work.&lt;/p&gt;
&lt;p&gt;The configuration for the Vagrant box can be found on &lt;a href=&quot;https://github.com/ryan-l-robinson&quot;&gt;my GitHub&lt;/a&gt;. For the sake of this demonstration, it is a fairly simple Oracle Linux 8, using a build in the Vagrant repository.&lt;/p&gt;
&lt;p&gt;The first script, provision.sh, sets up the basic VM with a LAMP stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;PHP 8.0&lt;/li&gt;
&lt;li&gt;Several PHP extensions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s a nice generic LAMP stack. If you want an Oracle Linux 8 LAMP stack for some other purpose, you can stop there.&lt;/p&gt;
&lt;h2 id=&quot;drupal-9-local-dev&quot; tabindex=&quot;-1&quot;&gt;Drupal 9 local dev &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-10-vagrant-oracle-linux-vm/#drupal-9-local-dev&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In my case, the purpose of this vagrant box is for the first stage of development on a Drupal 9 website. So I’m going to go a few steps further to get it ready for the specific Drupal 9 project. That includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sync the user’s SSH key from their computer’s folder to the vagrant user’s home folder, so that &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/my-web-development-workflow/&quot;&gt;it can be used to connect to GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configures git including pulling the latest version of the code from the GitLab&lt;/li&gt;
&lt;li&gt;Imports a MySQL database if one is provided&lt;/li&gt;
&lt;li&gt;Self-signed keys so that https browsing will be possible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I may write up specific details of some of these later, but &lt;a href=&quot;https://github.com/ryan-l-robinson/Oracle-Linux-LAMP&quot;&gt;the bottom line is the code in GitHub.&lt;/a&gt; This part is in the provision script d9.sh, which also references a separate script specifically for the database import called importdb.sh.&lt;/p&gt;
&lt;h2 id=&quot;the-user-experience&quot; tabindex=&quot;-1&quot;&gt;The user experience &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-10-vagrant-oracle-linux-vm/#the-user-experience&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The idea is that at the end of this, the person setting up their machine has very few steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Git clone&lt;/code&gt; the repo for building the virtual machine on their PC&lt;/li&gt;
&lt;li&gt;Put a copy of the database to import, if available, in the specified location&lt;/li&gt;
&lt;li&gt;Put a copy of the SSH key into the specified location&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;vagrant up&lt;/code&gt; to build the virtual machine&lt;/li&gt;
&lt;li&gt;SSH into the VM and then run the separate script for the Drupal 9 components&lt;/li&gt;
&lt;li&gt;Optionally add the dev URL to the hosts file of their computer so that it is browsable at the URL and not just at localhost&lt;/li&gt;
&lt;/ol&gt;
</content>
	</entry>
	
	<entry>
		<title>Android: Email Apps</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/"/>
		<updated>2021-11-12T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/</id>
		<content type="html">&lt;p&gt;I recently got a Pixel 6. It’s great. For the previous 3 and a bit years I had been using a BlackBerry Key2. There was lots I liked about the Key2, but 3 years later I had never received an Android version update. I was still getting security updates, but I decided with the Pixel 6 launch it was time for an update.&lt;/p&gt;
&lt;p&gt;That context to say that I was using the BlackBerry apps for email, contacts, tasks, and calendar. The exception was my work email, which doesn’t allow app passwords and the BlackBerry app incredibly did not support modern authentication with multi-factor.&lt;/p&gt;
&lt;p&gt;So, I decided with the new phone that it was a good chance to evaluate Android email apps again. My qualifier is that I use Microsoft email – personal and business – not Gmail. So I immediately ruled out the Gmail app.&lt;/p&gt;
&lt;p&gt;Here’s a quick review of the ones I checked out:&lt;/p&gt;
&lt;h2 id=&quot;bluemail&quot; tabindex=&quot;-1&quot;&gt;BlueMail &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#bluemail&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some positives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calendar and contacts integrated nicely&lt;/li&gt;
&lt;li&gt;Unified inbox with all accounts combined to one list, or view them separately&lt;/li&gt;
&lt;li&gt;Good notification options including LED colour&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some negatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stalled out when I added the second account. Maybe a fluke bug, but not a great start. I closed the app, came back in, and it was fine.&lt;/li&gt;
&lt;li&gt;I didn’t love the design, although I couldn’t nail down exactly why. The dark mode is not that dark. The colour combinations are a bit odd.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conclusion: on paper it hits my biggest requirements, but there’s just something about the design that led me to move on quickly.&lt;/p&gt;
&lt;h2 id=&quot;newton&quot; tabindex=&quot;-1&quot;&gt;Newton &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#newton&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not free after the first 14 days. Nevermind.&lt;/p&gt;
&lt;h2 id=&quot;edison&quot; tabindex=&quot;-1&quot;&gt;Edison &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#edison&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, it appears in the app screen as simply “email.” That was confusing when I had all of these apps installed at once, but I see the value in that decision normally. In normal contexts where you only have one email app, having that app called “email” is nicer than remembering it’s called Edison.&lt;/p&gt;
&lt;p&gt;Some positives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Asked me up-front if I wanted Focused Inbox, which I do not, rather than turning it on and forcing me to find the switch to turn it off like the others with a similar feature.&lt;/li&gt;
&lt;li&gt;Some smart assistant features like identifying your travel itinerary and subscription review to help you unsubscribe from emails you don’t need anymore&lt;/li&gt;
&lt;li&gt;Unified inbox, or view accounts one at a time&lt;/li&gt;
&lt;li&gt;Good configuration options like notification quick actions and colour-coded accounts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some negatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No calendar or contacts view&lt;/li&gt;
&lt;li&gt;Lots of little prompts trying to sell me on the premium subscription&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conclusion: definitely does some good things, but it doesn’t solve the calendar/contact piece and I know I would regularly get annoyed at the ads for premium.&lt;/p&gt;
&lt;h2 id=&quot;spark&quot; tabindex=&quot;-1&quot;&gt;Spark &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#spark&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There’s a lot I like about Spark, including a lot that overlaps with what I liked about BlackBerry Hub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It had the simplest login. Most of the others required first selecting the email provider (Gmail, Outlook, Exchange, etc). A lot of people would know this, but not everyone. Even if you do, it’s a few extra clicks. Spark will look it up for you – you just have to know the address and it will redirect you to the appropriate login.&lt;/li&gt;
&lt;li&gt;Attractive, easy-to-use, and a good dark mode.&lt;/li&gt;
&lt;li&gt;A reasonable amount of customizing the app like being able to set the quick actions on a notification, the LED colour of a notification, and whether to notify on all or only on known contacts.&lt;/li&gt;
&lt;li&gt;Multiple accounts and unified inbox to see them all together or split them out to view one at a time.&lt;/li&gt;
&lt;li&gt;Email signatures, including different ones default for different accounts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It had one big hole:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does not include calendar or contacts at all. I’m really hoping for one app that does everything.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, a neutral for me is that it uses a smart inbox to predict what you consider most important and prioritize them in your inbox. I know some people like this idea. I do not. I also turn off the equivalent feature in desktop Outlook. I am an aggressive manager of my inbox already and having something “smart” hiding things from me just confuses my own system. It can be turned off, so this isn’t a big deal.&lt;/p&gt;
&lt;p&gt;Conclusion: other than the lack of calendar and tasks, it did feel like it hit on a lot of the things I liked about the BlackBerry app.&lt;/p&gt;
&lt;h2 id=&quot;nine&quot; tabindex=&quot;-1&quot;&gt;Nine &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#nine&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I didn’t get too far with Nine before encountering a couple things that worried me. First, it says it won’t limit any basic features for 14 days. In other words, it won’t be free after 14 days. It doesn’t give any hint within the app of what it will cost. I had to jump through a few websites before I found a price, and even that wasn’t entirely clear if that price was a one-time price, a yearly price, or a monthly price. If it clearly said “$15 one-time fee” I would be a lot more interested than having no idea what it will cost.&lt;/p&gt;
&lt;p&gt;I got over that and decided to start trying to set up an account. It didn’t ask me what type of email it was. I was prepared to list that as a positive as I have for a couple others. I entered my email address. The next screen told me to enter the password to my IMAP email, not taking me to a Microsoft sign-in screen. My email is a Microsoft email, but with a custom domain, from the days of Windows Live Domains. So that’s not great that it didn’t figure that out. Fortunately, there was an option to manually specify, so I went back and chose instead to specify that it was indeed a Microsoft account.&lt;/p&gt;
&lt;p&gt;After that, this email app is all positives for me. It has all the positives I listed above for Spark, but also integration of calendar, contacts, tasks, and notes. There are widgets to easily pin those different components to the home screen, even though it’s one app. After those first couple bad impressions, Nine is fantastic.&lt;/p&gt;
&lt;h2 id=&quot;outlook&quot; tabindex=&quot;-1&quot;&gt;Outlook &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#outlook&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the one I had already tried. Some good things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Includes calendar and contacts management.&lt;/li&gt;
&lt;li&gt;Dark mode; generally attractive and easy to use.&lt;/li&gt;
&lt;li&gt;Voice dictation and voice reading my emails&lt;/li&gt;
&lt;li&gt;From Microsoft so I can pretty confidently say that it will steadily get better for years to come&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some negatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slower getting emails for some reason&lt;/li&gt;
&lt;li&gt;Not quite as many configuration options as some of the others (like LED notification colours, quick actions on notifications)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-12-android-email-apps/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nine is my winner. I will gladly pay $15 USD one-time for such a good app. I’m happy that I found an app that checked all my boxes and without a subscription fee.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Enterprise Administrator Expert</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-11-21-microsoft-enterprise-administrator-expert/"/>
		<updated>2021-11-21T22:25:43Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-11-21-microsoft-enterprise-administrator-expert/</id>
		<content type="html">&lt;p&gt;Last week, I passed &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/exams/ms-101&quot;&gt;the MS-101 exam&lt;/a&gt;. This completed a goal I have had for a few years, earning me &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/m365-enterprise-administrator/&quot;&gt;the Microsoft Enterprise Administrator Expert certification.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I first got into SharePoint about 6 years ago. It was before modern SharePoint, so not the most pleasant experience, but I still found myself fascinated by it. I decided I wanted to learn more about that space and pursue some certifications in it.&lt;/p&gt;
&lt;p&gt;I began working toward the MCSE which would take 3 exams. I got the first one, the 70-346, in November 2018. When I got back that day and went to book the next one, Microsoft had announced changes to the certifications. My 70-346 was not going to expire but was effectively obsolete.&lt;/p&gt;
&lt;p&gt;So I needed to start again, with the MS-100 that is roughly what the 70-346 was. I got that one in December 2019.&lt;/p&gt;
&lt;p&gt;The job I was working at the time left me with no real free time, so it was slow but eventually I decided to book the &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/exams/ms-700&quot;&gt;MS-700 on Teams administration&lt;/a&gt;. I booked that in November 2020 for March 2021, giving myself lots of study time. I booked the MS-101 for soon after.&lt;/p&gt;
&lt;p&gt;But this was in the middle of the pandemic (so far). The testing centre remained closed. Multiple times in a row I got notified that it needed to be rescheduled. I eventually wrote and passed the MS-700 in September.&lt;/p&gt;
&lt;p&gt;Then I wrote and passed the &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/exams/sc-400&quot;&gt;SC-400 on Microsoft Information Protection&lt;/a&gt;. That one wasn’t a big priority for me, but I got a free exam through an Ignite challenge and it helped me study for the MS-101.&lt;/p&gt;
&lt;p&gt;And then I finally got the MS-101 last week. It was almost a year after initially booking it, and about 6 years since I first decided to get these certifications, so this was a huge sigh of relief.&lt;/p&gt;
&lt;p&gt;I just earned another one through another Ignite challenge, so I may be looking at squeezing in one more late winter / early spring. I’m thinking &lt;a href=&quot;https://docs.microsoft.com/en-us/learn/certifications/exams/pl-900&quot;&gt;PL-900: Power Platform Fundamentals&lt;/a&gt;, which is something I already know fairly well. But first, a bit of a break to focus on other things including wrapping up some of the 28 drafts I currently have sitting on this website to finish and publish 🙂&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Windows 10: Hosts File</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-11-29-windows-10-hosts-file/"/>
		<updated>2021-11-29T13:55:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-11-29-windows-10-hosts-file/</id>
		<content type="html">&lt;p&gt;Configuring a hosts file on your computer allows your browsing traffic to go to a different server than is listed by public DNS. This can be essential for a few scenarios, such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;migrating a site to a new server and needing to test it before changing the public DNS&lt;/li&gt;
&lt;li&gt;development on dev/staging servers which do not have public DNS listings&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;open-the-file&quot; tabindex=&quot;-1&quot;&gt;Open the file &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-29-windows-10-hosts-file/#open-the-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The hosts file in Windows is located at C:&#92;Windows&#92;System32&#92;drivers&#92;etc&#92;hosts. I find I routinely forget that, so I added a shortcut to my primary document folder so I can get back to it faster. To do that in Windows, browse to the folder where you want the shortcut. Right-click and select New Shortcut. In the prompt that opens, enter C:&#92;Windows&#92;System32&#92;drivers&#92;etc&#92;hosts for the location of the item. Click next, then provide it a shortcut name – that could stay simple as “hosts” or something else. Save it, and now you’re good to go.&lt;/p&gt;
&lt;p&gt;Side note: Linux has a similar system for overriding public DNS. The hosts file there is typically located at /etc/hosts and is structured the same way.&lt;/p&gt;
&lt;p&gt;You will need to edit this file as an administrator in order to make changes. You can approach this either way:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open your text editor as an administrator initially by right-clicking on the icon to launch it and select “Run as administrator.”&lt;/li&gt;
&lt;li&gt;Some editors such as Visual Studio Code will allow you to open the file first as a non-administrator, then when you try to save it will fail and prompt you if you want to save it as an administrator instead.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since I use VS Code for my main editor anyway, I tend to use option 2 as a bit faster most of the time.&lt;/p&gt;
&lt;h2 id=&quot;file-contents&quot; tabindex=&quot;-1&quot;&gt;File contents &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-11-29-windows-10-hosts-file/#file-contents&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The contents of the file are straightforward. Each line has an IP address and at least one domain. When you view that domain in your browser, it will go to that IP address instead of checking public DNS. For example, if you want to browse your local library website VM at &lt;a href=&quot;https://local.library.wlu.ca/&quot;&gt;https://local.library.wlu.ca&lt;/a&gt;, add this line:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;127.0.0.1 domain1.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to have multiple domains on the same IP address, like a dev server that has a couple different test sites on it, you can structure it in one of two ways. The shorter version has one line per IP address, followed by all the domains:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;127.0.0.1 domain1.com domain2.com domain3.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also structure it with a new line for each domain, even if that means repeating the IP:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;127.0.0.1 domain1.com
127.0.0.1 domain2.com
127.0.0.1 domain3.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you’re manually editing the file, you’re probably going to do the first one, since it is shorter. But the latter can be useful if you’re automating scripts that would benefit from adding a single domain as needed.&lt;/p&gt;
&lt;p&gt;That’s it! It’s straightforward once you know how to do it, but it’s one of those things that is (understandably) hidden from the average user so you likely never hear about it without looking for it.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Mail Tester</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-12-03-mail-tester/"/>
		<updated>2021-12-04T01:35:34Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-12-03-mail-tester/</id>
		<content type="html">&lt;p&gt;A common scenario with many web services like a CRM is sending mail and realizing that it is often going to the junk of recipients.&lt;/p&gt;
&lt;p&gt;There are several reasons why a message may go to spam. Some of those reasons come from the content of the message. Some are because of filters set up by the recipient or their email provider. And some factors come down to technical configuration on the part of the sender.&lt;/p&gt;
&lt;p&gt;It’s this last group which can be aided by a tool like &lt;a href=&quot;https://www.mail-tester.com/&quot;&gt;mail-tester.com&lt;/a&gt;. It is simple to use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Visit the site and copy the unique email it gives you.&lt;/li&gt;
&lt;li&gt;Send a message to that address. You want this test to be as close to your real scenario as possible. If you’re trying to test from a website, send from the website. If you’re trying to test from Outlook, send from Outlook. And so on. Similarly, make the content a copy of a real message.&lt;/li&gt;
&lt;li&gt;Return to the site and hit the “Then check your score” button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will provide you with a report including a score. If you’re hitting at least an 8 or 9 out of 10, you’ll be fine sending to most email services. It is true that some services weigh factors differently, though. Most of the recommendations it will give to improve your score are not that hard to implement for an IT person, so aim for everything you can.&lt;/p&gt;
&lt;p&gt;It is also true that sometimes email providers have their own block list which you could have ended up on through no fault of your own, e.g. maybe your website has a similar IP to a spam offender and the provider blocked a bunch of addresses including yours along with the real offender. A good sign that this is happening is if you notice patterns, like if Gmail never receives your messages but Outlook does, or vice versa. If the latter happens with Gmail or Outlook and you’ve done all the other standard things that mail-tester can help you identify, you can file a request with them to get off the list.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Search Filters</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-12-08-microsoft-teams-search-filters/"/>
		<updated>2021-12-08T16:48:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-12-08-microsoft-teams-search-filters/</id>
		<content type="html">&lt;p&gt;I recently was asked whether it is possible to search in Microsoft Teams for a file but only within a specific site. The short answer is yes, but that’s not the default search behaviour. When you use the search bar in Teams, it will default to all types of results across all Teams you are a member of. But then you can filter from there. This is significantly improved by &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-teams-blog/new-and-improved-search-results-experience-on-microsoft-teams/ba-p/3035064&quot;&gt;some recent changes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, if I know I am looking for a particular file in a particular Team, I can do that this way:&lt;/p&gt;
&lt;h2 id=&quot;teams&quot; tabindex=&quot;-1&quot;&gt;Teams &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-08-microsoft-teams-search-filters/#teams&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start the search in the usual way by typing your search term in the search bar at the top of Teams. By default you’ll see all types of results from all Teams, and it might not be obvious that you have more filter options than the basic content type filters. But, once you click on those, you’ll get more filters specific to that type of content. For the example of Files, you’ll see the ability to filter by Team, File Type, Modified by, and Date.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2021/12/Teams-Search-filters.png&quot; alt=&quot;&amp;quot;Search filters in Microsoft Teams&amp;quot;&quot; /&gt;
&lt;em&gt;Teams search for “test” with Files filter.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the example scenario originally asked of me, the goal would be achieved by using the Team filter.&lt;/p&gt;
&lt;p&gt;In other words, Teams search starts at universal, then provides filters to help you get more specific.&lt;/p&gt;
&lt;h2 id=&quot;sharepoint&quot; tabindex=&quot;-1&quot;&gt;SharePoint &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-08-microsoft-teams-search-filters/#sharepoint&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By comparison, SharePoint search behaves a bit differently. When you are on a particular site other than the Home site, it will default scope to only that site and others in the same hub, even if you are a part of other sites. Then you have filters to expand. It’s essentially the opposite direction. It can assume based on the current site that you are looking for content on that site.&lt;/p&gt;
&lt;p&gt;This difference makes sense, as the Teams search bar stays in the same place no matter what you are currently viewing. There isn’t an easy way for Teams to know in advance which Team you want to search. So it makes sense to start at everything and move backwards, while SharePoint can start specific and allow you to move outward.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Install PECL UploadProgress</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/"/>
		<updated>2021-12-10T12:55:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/</id>
		<content type="html">&lt;p&gt;Drupal often recommends that you install and enable PECL UploadProgress to show better feedback when uploading files, but it doesn’t make it obvious how to do that. This quick post will run through what it took for me to get PECL UploadProgress on an Oracle Linux 8 server.&lt;/p&gt;
&lt;h2 id=&quot;add-required-packages&quot; tabindex=&quot;-1&quot;&gt;Add required packages &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/#add-required-packages&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few preliminary packages that you’ll need: gcc, make, php-devel, and php-pear. You can install in Oracle Linux 8 using this command:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; gcc &lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; php-devel php-pear&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You don’t have to provide the -y. That will pre-approve any other prompts that come up, including if it requires installing other dependent packages. If you want to be more careful, don’t use that, but it can come in handy in contexts like installing this through a script.&lt;/p&gt;
&lt;h2 id=&quot;install-pecl&quot; tabindex=&quot;-1&quot;&gt;Install PECL &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/#install-pecl&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that you’ve got the dependencies, you can install uploadprogress:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; pecl &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; uploadprogress&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;add-to-php-ini&quot; tabindex=&quot;-1&quot;&gt;Add to php.ini &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/#add-to-php-ini&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The packages are now in place, but your PHP installation will not make use of it unless it is recognized as an extension in your php.ini file. In the default Oracle Linux 8 setup, this file is located at /etc/php.ini. You’ll need to add this line to your file:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;extension=uploadprogress&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can edit that file directly using your preferred editor to add this line to the file, or if you are using this within a script, you can have the script write it to the end of the file like this:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;extension=uploadprogress&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; /etc/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you first need to check whether that line is already in the file – so that you don’t end up writing it multiple times in a context where a script might add another line every time – you can use this in a bash script:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;extension=uploadprogress&quot;&lt;/span&gt; /etc/php.ini&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;extension=uploadprogress&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; /etc/php.ini
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;restart&quot; tabindex=&quot;-1&quot;&gt;Restart &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-10-drupal-install-pecl-uploadprogress/#restart&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, you’ll need to restart Apache and PHP for this to go into effect:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl restart php-fpm
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl restart httpd&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Oracle-Linux-scripts/tree/main&quot;&gt;This script is available in my GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>pa11y CI: Oracle Linux 8 Installation</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-12-13-pa11y-ci-oracle-linux-8-installation/"/>
		<updated>2021-12-13T19:17:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-12-13-pa11y-ci-oracle-linux-8-installation/</id>
		<content type="html">&lt;p&gt;I’ve mentioned before that &lt;a href=&quot;https://github.com/pa11y/pa11y-ci&quot;&gt;pa11y&lt;/a&gt; is a great tool for accessibility testing, specifically in the context of &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/koa11y-accessibility-testing-tool/&quot;&gt;the koa11y desktop tool.&lt;/a&gt; In this post, I’ll run through installing pa11y-ci on an Oracle Linux 8 server.&lt;/p&gt;
&lt;h2 id=&quot;nodejs&quot; tabindex=&quot;-1&quot;&gt;NodeJS &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-13-pa11y-ci-oracle-linux-8-installation/#nodejs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pa11y requires &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt;. To add that to Oracle Linux 8, run this command:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; nodejs &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to add an efficiency check within a larger bash script, you can first check whether it is already installed:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#Install NodeJS and NPM&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;yum list &lt;span class=&quot;token parameter variable&quot;&gt;--installed&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; nodejs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-l&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-eq&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; nodejs &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;pa11y&quot; tabindex=&quot;-1&quot;&gt;Pa11y &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-13-pa11y-ci-oracle-linux-8-installation/#pa11y&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now you can install Pa11y itself using npm:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pa11y &lt;span class=&quot;token parameter variable&quot;&gt;-g&lt;/span&gt; --unsafe-perm&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;true --allow-root&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the extra flags for unsafe-perms and allow-root, which don’t sound like good things. But without them, it will fail to have the permissions to write everything in all the directories it needs to be able to write.&lt;/p&gt;
&lt;p&gt;As above, you can add an efficiency check if you’re doing this within a script:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#Install pa11y&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; list nodejs &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-l&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-eq&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pa11y &lt;span class=&quot;token parameter variable&quot;&gt;-g&lt;/span&gt; --unsafe-perm&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;true --allow-root
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;dependencies&quot; tabindex=&quot;-1&quot;&gt;Dependencies &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-13-pa11y-ci-oracle-linux-8-installation/#dependencies&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pa11y is now installed, but trying it out, it won’t actually work, citing other libraries that are missing. There are several of these. To install all of them:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#Install libraries&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; pango.x86_64 libXcomposite.x86_64
 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 nss libdrm libgbm

&lt;span class=&quot;token comment&quot;&gt;#Install fonts&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As above, in a scripting context you might want to check if it is already installed, with something like this:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;yum list &lt;span class=&quot;token parameter variable&quot;&gt;--installed&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; pango.x86_64 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-l&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-eq&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; yum &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pango.x86_64 &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Oracle-Linux-scripts/blob/main/pa11y.sh&quot;&gt;The full script is available in my GitHub.&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>SharePoint: Hub to Hub Association</title>
		<link href="https://tech.ryanrobinson.ca/posts/2021-12-16-sharepoint-hub-to-hub-association/"/>
		<updated>2021-12-16T12:15:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2021-12-16-sharepoint-hub-to-hub-association/</id>
		<content type="html">&lt;p&gt;A long-awaited feature has arrived in SharePoint: &lt;a href=&quot;https://docs.microsoft.com/en-gb/SharePoint/hub-to-hub-association&quot;&gt;the ability to associate one hub site with another hub site&lt;/a&gt;. Over a year ago I saw references to a PowerShell cmdlet to do this in the official documentation pages, but with a note that it was in limited preview so most of us wouldn’t be able to do it yet. Now it has finally rolled out to general availability.&lt;/p&gt;
&lt;h2 id=&quot;why-do-this&quot; tabindex=&quot;-1&quot;&gt;Why do this &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-16-sharepoint-hub-to-hub-association/#why-do-this&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Associating one hub with another hub changes one thing: search results. If you’re in one hub and do a search, results from other associated hubs can be prioritized alongside other sites in the same hub. This is a nice extra level of controlling your search results for a pretty common scenario.&lt;/p&gt;
&lt;p&gt;For example, imagine being in a small team with lots of projects. You want a site for every project, associated to your team’s hub site (for the search results, for a sites web part, etc). But your team is also a part of a larger department and you may have a lot of useful general resources on that site. Now when you search from your team’s SharePoint you can get results in both directions: the projects in the same hub and the general documents of the associated department hub.&lt;/p&gt;
&lt;h2 id=&quot;what-it-doesn-t-do&quot; tabindex=&quot;-1&quot;&gt;What it doesn’t do &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-16-sharepoint-hub-to-hub-association/#what-it-doesn-t-do&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It does not change any of the other things that come with the first level of hub association, most of which makes sense if you think about them.&lt;/p&gt;
&lt;p&gt;Navigation doesn’t change. There is a shared hub menu. Nothing from the associated hub’s navigation will appear. But it makes sense that it doesn’t really work to have two conflicting navigation areas.&lt;/p&gt;
&lt;p&gt;The automatic application of site designs for all sites in a hub also stays as only sites in that hub. This makes sense for the same reason navigation does: you can’t really have two site designs applied to the same site at once.&lt;/p&gt;
&lt;p&gt;The sites web part, with the setting to filter by hub associations, doesn’t change. This one I think could make sense to expand, for scenarios much like the search: it could have one filter setting for only sites in this hub and another filter for sites in associated hubs as well. I may be missing something for why that couldn’t work, so maybe that feature will come later.&lt;/p&gt;
&lt;h2 id=&quot;more-details&quot; tabindex=&quot;-1&quot;&gt;More details &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2021-12-16-sharepoint-hub-to-hub-association/#more-details&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://sharepointmaven.com/how-to-add-a-hub-to-another-hub-in-sharepoint-online/&quot;&gt;SharePoint Maven’s recent post for more details&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal 7: Hide Label on Node Display</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-01-04-drupal-7-hide-label-on-node-display/"/>
		<updated>2022-01-05T00:02:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-01-04-drupal-7-hide-label-on-node-display/</id>
		<content type="html">&lt;p&gt;I ran into a problem on an old Drupal 7 site where labels for a custom field were displaying, even when there was no content associated with that field, creating a page that was simply a series of headers in a row. That’s not very user-friendly.&lt;/p&gt;
&lt;p&gt;If I wanted to always hide the label for a field, that’s easy enough in the default Drupal display settings for the content type. But what about this scenario where we want to show the label when there is content and hide the label when there isn’t content?&lt;/p&gt;
&lt;p&gt;In theory, the logic for this is simple. In the node template for that content type – in the node–content-type.tpl.php in the templates folder of your theme – we want to add some simple logic that says to not show the field at all if the value of the field is empty.&lt;/p&gt;
&lt;p&gt;If you don’t already have a node–content-type.tpl.php, copy your default node.tpl.php file, rename it to node–content-type.tpl.php, and then the changes you’ll want to add are before the main content variable is rendered for the page.&lt;/p&gt;
&lt;p&gt;A couple wrinkles did make it a bit more complicated, though.&lt;/p&gt;
&lt;p&gt;First, you cannot check if the value of the field is set. It is always set. That’s entirely reasonable, but not obvious, so I still mention it.&lt;/p&gt;
&lt;p&gt;Second and a lot less reasonable, I couldn’t even use a test for if the field is empty. This is where I spent the bulk of my time being confused. I would write the value of the field to a log or message to test and it should show nothing. I could inspect the code and there was nothing – not even a space or a hidden HTML tag. But if I tried to test for empty() or the string to equal ”, it still said no, it’s not empty. Eventually I checked the length of that string and discovered it was 2, not 0.&lt;/p&gt;
&lt;p&gt;I do not know if that is universal in Drupal 7 or if there was something weird with this one site. It’s possible you’ll be able to get away with a simple empty() test instead of the strlen() test.&lt;/p&gt;
&lt;p&gt;So this was my final code addition to the node template file:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//hide some labels if the corresponding value is empty&lt;/span&gt;

&lt;span class=&quot;token variable&quot;&gt;$field_value&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_field_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;#object&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;field_field_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;und&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$field_value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_field_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also do this in one line instead, depending on where you fall in the debate between easy readability vs minimal code. I left it as two different lines to be easier for somebody looking at it to understand what was happening.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//hide field label if the corresponding value is empty&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_field_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;#object&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;field_field_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;und&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_field_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal GitPod Container 1: .Dockerfile</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/"/>
		<updated>2022-01-20T16:00:48Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://gitpod.io/&quot;&gt;GitPod&lt;/a&gt; is a great tool for cloud-based containers when developing. If you’re developing and want a safe and efficient cloud container to try things out, it’s a pretty good way to go. You even get 50 hours per month for free, which is pretty great if you only need occasional side project and not full-time work. It also works with &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt; – although that has not been working for me lately – so you can use it in the browser or in your desktop editor. When you browse to a GitHub or GitLab repository with the extension installed, there’s a simple button that will launch the container with that repository’s code, making it quick and easy to see how it works as well as make changes.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;mini-series&lt;/a&gt; I describe how I created a generic Drupal-friendly container working with GitPod. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-GitPod&quot;&gt;It is available in my GitHub&lt;/a&gt;. Note that since this is some code I may continue using over time, the code there may change beyond what is covered in this article.&lt;/p&gt;
&lt;h2 id=&quot;the-dockerfile&quot; tabindex=&quot;-1&quot;&gt;The Dockerfile &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#the-dockerfile&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This solution starts from &lt;a href=&quot;https://github.com/gitpod-io/workspace-images/blob/master/mysql/Dockerfile&quot;&gt;the GitPod-provided MySQL image&lt;/a&gt;. That does not give everything you need for a functioning Drupal site, but it does meet the basics of a LAMP stack.&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; gitpod/workspace-mysql&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The biggest catch with using this image is that you might end up with the latest PHP version, and there’s a good chance that your Drupal site doesn’t support that yet. So you probably want to add a section to change the PHP to one that you know currently works:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; update-alternatives --set php /usr/bin/php8.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That doesn’t cover everything, though. There are a few more things I want for every Drupal 9+ site.&lt;/p&gt;
&lt;h3 id=&quot;php-packages&quot; tabindex=&quot;-1&quot;&gt;PHP packages &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#php-packages&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here’s how to add PHP packages needed within an Ubuntu Dockerfile, as well as APCU and uploadprogress which are also recommended by Drupal. I wrote recently about &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/drupal-install-pecl-uploadprogress/&quot;&gt;installing PECL UploadProgress for Oracle Linux&lt;/a&gt;, which is similar but a bit different than these Ubuntu commands.&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;USER&lt;/span&gt; root&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Install other needed packages&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt update&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt install -y php-pear php-apcu php-json php-xdebug build-essential mysql-client sendmail&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; pecl install apcu&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; pecl install uploadprogress&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;composer&quot; tabindex=&quot;-1&quot;&gt;Composer &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#composer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Drupal can work without composer, &lt;a href=&quot;https://www.drupal.org/docs/develop/using-composer/using-composer-with-drupal&quot;&gt;but your life is going to be a lot easier with it&lt;/a&gt;. Here’s how I added that to my Dockerfile:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install latest composer&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php -r &lt;span class=&quot;token string&quot;&gt;&quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php -r &lt;span class=&quot;token string&quot;&gt;&quot;if (hash_file(&#39;sha384&#39;, &#39;composer-setup.php&#39;) === &#39;906a84df04cea2aa72f40b5f787e49f22d4c2f19492ac310e8cba5b96ac8b64115ac402c8cd292b8a03482574915d1a8&#39;) { echo &#39;Installer verified&#39;; } else { echo &#39;Installer corrupt&#39;; unlink(&#39;composer-setup.php&#39;); } echo PHP_EOL;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php composer-setup.php --install-dir /usr/bin --filename composer&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php -r &lt;span class=&quot;token string&quot;&gt;&quot;unlink(&#39;composer-setup.php&#39;);&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the server is ready to provide the core packages that run Drupal well.&lt;/p&gt;
&lt;h2 id=&quot;pa11y-accessibility-testing&quot; tabindex=&quot;-1&quot;&gt;Pa11y accessibility testing &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#pa11y-accessibility-testing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/pa11y-ci-oracle-linux-8-installation/&quot;&gt;I’ve also mentioned pa11y recently&lt;/a&gt;, the accessibility testing tool. I always want that available. Here’s how to do that in this Ubuntu-based Dockerfile:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install pa11y accessibility testing tool, including NodeJS&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; curl -sL https://deb.nodesource.com/setup_16.x -o # Install pa11y accessibility testing tool, including NodeJS and Chromium&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; curl -sL https://deb.nodesource.com/setup_16.x -o nodesource_setup.sh&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; bash nodesource_setup.sh&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt-get install -y nodejs libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm-amdgpu1 libxkbcommon-x11-0 libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libgtk-3-common libxshmfence-dev software-properties-common&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt-get install -y apparmor snapd apparmor-profiles-extra apparmor-utils kdialog chromium-browser libappindicator1 fonts-liberation&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; npm install pa11y -g --unsafe-perm=true --allow-root&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;ports&quot; tabindex=&quot;-1&quot;&gt;Ports &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#ports&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Finally, I’m going to open the standard ports: 80 (HTTP), 443 (HTTPS), and 3306 (MySQL). This doesn’t seem to be actually necessary but it can help to remind yourself what ports you’re using.&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 80&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 443&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 3306&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;what-s-next&quot; tabindex=&quot;-1&quot;&gt;What’s Next &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-20-drupal-gitpod-container-1-dockerfile/#what-s-next&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In an upcoming post, I’ll continue with the other large file to make this work: the .gitpod.yml. A third post will cover a few smaller changes I had to make to other configuration.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Assign Permissions Based on Username File</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-01-24-drupal-assign-permissions-based-on-username-file/"/>
		<updated>2022-01-25T01:20:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-01-24-drupal-assign-permissions-based-on-username-file/</id>
		<content type="html">&lt;p&gt;Here’s a recent scenario I encountered: a Drupal role needs to be assigned to certain users. The site is using a single sign on (SSO) system with a lot of users who could log in. But only some of those should be granted a certain permission. The list of those who can access the special permission role is automatically generated and put in place on the server on a daily basis, in a simple format with one line for each account name.&lt;/p&gt;
&lt;p&gt;I have pulled out a generic version of this code and &lt;a href=&quot;https://github.com/ryan-l-robinson/drupal-permissions-from-file&quot;&gt;made it available on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;hook-on-login&quot; tabindex=&quot;-1&quot;&gt;Hook on login &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-24-drupal-assign-permissions-based-on-username-file/#hook-on-login&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, we need to hook on login. When a user signs on, we want to find out if they should have the extra permission. This can be done with &lt;a href=&quot;https://api.drupal.org/api/drupal/modules%21user%21user.api.php/function/hook_user_login/7.x&quot;&gt;the hook_user_login hook&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Implements hook_user_login
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;permissions_from_file_user_login&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$edit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// assign the &quot;test role&quot; role, if necessary.&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;_permissions_from_file_update_permissions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// do not redirect password reset requests.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;form_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;form_id&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;user_pass_reset&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;target&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;drupal_goto&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;target&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;read-file&quot; tabindex=&quot;-1&quot;&gt;Read file &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-24-drupal-assign-permissions-based-on-username-file/#read-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next we have another function that checks to see if the username is in the file or not:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
* Reads from file and determine whether the specified user is in the list
**/&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;_permissions_from_file_is_role&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$contents&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;/var/usernames/roleusernames.csv&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string double-quoted-string&quot;&gt;&quot;/&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;name&lt;/span&gt;&lt;/span&gt;/&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$contents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;token comment&quot;&gt;// returns if name is in the file.&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;assign-or-remove-role&quot; tabindex=&quot;-1&quot;&gt;Assign or Remove Role &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-24-drupal-assign-permissions-based-on-username-file/#assign-or-remove-role&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, we can assign permissions based on whether or not their username is in the file.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
* Calls function that checks if permissions should be found
**/&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;_permissions_from_file_update_permissions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$is_role&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;_permissions_from_file_is_role&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$role&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;user_role_load_by_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;test role&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$is_role&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// add permissions to that user&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;user_multiple_role_edit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;add_role&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$role&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;rid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// delete the role assignment, if it exists&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;user_multiple_role_edit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$account&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;remove_role&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$role&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;rid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal GitPod Container 2: .gitpod.yml</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/"/>
		<updated>2022-01-28T13:17:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/</id>
		<content type="html">&lt;p&gt;This post picks up in a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;mini-series&lt;/a&gt; describing how I created a generic Drupal-friendly container working with &lt;a href=&quot;https://gitpod.io/&quot;&gt;GitPod&lt;/a&gt;. The &lt;a href=&quot;https://tech.ryanrobinson.ca/drupal/gitpod-container-1-dockerfile/&quot;&gt;first covered the GitPod.Dockerfile&lt;/a&gt; to build the core LAMP stack image.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-GitPod&quot;&gt;The entire project is available in my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More of the remaining work is done by the .gitpod.yml file, including referencing the Dockerfile image described in the previous part, as the starting point.&lt;/p&gt;
&lt;pre class=&quot;language-gitpod&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitpod&quot;&gt;image:
  file: .gitpod/GitPod.Dockerfile&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;tasks&quot; tabindex=&quot;-1&quot;&gt;Tasks &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#tasks&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It then runs a handful of tasks, split into two sections. The tasks under “init” will run only when the container is created for the first time. The tasks under “command” will run every time the container is started, even if you’re re-opening an existing container.&lt;/p&gt;
&lt;h3 id=&quot;create-the-database&quot; tabindex=&quot;-1&quot;&gt;Create the database &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#create-the-database&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Creating the database is straightforward and familiar enough to any who have used MySQL from a command line before:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; mysql &lt;span class=&quot;token parameter variable&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;CREATE DATABASE IF NOT EXISTS drupal&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;install-codebase&quot; tabindex=&quot;-1&quot;&gt;Install codebase &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#install-codebase&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The contributed codebase can be built using composer install:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;composer&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I’m also going to copy the settings file into place:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; .gitpod/drupal.settings.php web/sites/default/settings.php&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That settings file includes several alterations including where to find the configuration and content sync directories, how to connect to the database, and which URL is allowed to login from. Most of it will be familiar to those who have used Drupal settings files before, but I will cover anything unique in my next post for this series.&lt;/p&gt;
&lt;h3 id=&quot;drupal-settings-and-content&quot; tabindex=&quot;-1&quot;&gt;Drupal settings and content &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#drupal-settings-and-content&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is the hardest part of working with Drupal websites. All of the configuration and content is held in the database, not the codebase. Drupal (since 8) offers a configuration sync tool out of the box, and a content sync tool as a module. Broadly speaking, the configuration tool is usually pretty reliable, while the content tool has had some occasional glitches in my time using it.&lt;/p&gt;
&lt;p&gt;I install the site using &lt;a href=&quot;https://www.drush.org/latest/commands/site_install/&quot;&gt;the drush site-install tool&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; site-install minimal --existing-config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The key there is the –existing-config tag. This starts the installation using the configuration details you already have in the configuration sync folder. The main thing this accomplishes is keeping the UUID of the site in sync. Config sync and content sync will not work if the UUIDs don’t match.&lt;/p&gt;
&lt;p&gt;Now the content sync will also work:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; content-sync:import --entity-types&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;block_content,file,node&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The reason I added the –entity-types instead of simply importing all entity types was because of some experiences with &lt;a href=&quot;https://www.drupal.org/project/menu_entity_index&quot;&gt;menu_entity_index&lt;/a&gt;. I won’t get into those details here, but that created another entity type for menu links, which tended to not synchronize very well mainly because the content sync does not sync the node ID of each content. That meant that a page might have a different ID on one installation from the content sync than on another. Menu items were then pointing to the node ID, which is now different content, and it created some nasty URL aliases.&lt;/p&gt;
&lt;p&gt;Similarly related to the node ID sync is the homepage. The configuration is saved with specifying which piece of content is the homepage using the link to the node ID. But that might no longer be the content you want on the homepage. To solve this, I added a query to find my real homepage and set it again each time:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;home_id&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;vendor/drush/drush/drush sql-query &lt;span class=&quot;token string&quot;&gt;&#39;SELECT nid FROM node_field_data where type=&quot;home&quot; and status=&quot;1&quot; and title=&quot;Home&quot; limit 1;&#39;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;${home_id}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
    vendor/drush/drush/drush cset &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; system.site page.front /node/&lt;span class=&quot;token variable&quot;&gt;$home_id&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The key for that structure to be maintained is that the homepage is of the content type “Home” and with the title of “Home.” If that isn’t met, this workaround will fail.&lt;/p&gt;
&lt;h3 id=&quot;admin-password&quot; tabindex=&quot;-1&quot;&gt;Admin password &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#admin-password&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;By default, the site install at this point created a default super-admin user with a random password. For the purpose of this demo, I wanted to control what that admin password was so I could put it in the GitHub README and keep it saved in my &lt;a href=&quot;https://ryanrobinson.technology/all/tools/security-essentials-password-manager/&quot;&gt;password manager&lt;/a&gt;. So, I used drush to always reset the admin password back to what I wanted it to be:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush user:password admin &lt;span class=&quot;token string&quot;&gt;&quot;ZNB*ufm1tyz4rwc@yzk&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;cleanup&quot; tabindex=&quot;-1&quot;&gt;Cleanup &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#cleanup&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are two more small acts of clean up that I want, to minimize warning errors that would otherwise appear as soon as I sign in. One is to rebuild the content permissions and the other is to run cron.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush php-eval &lt;span class=&quot;token string&quot;&gt;&#39;node_access_rebuild();&#39;&lt;/span&gt;
vendor/drush/drush/drush &lt;span class=&quot;token function&quot;&gt;cron&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;drush-alias&quot; tabindex=&quot;-1&quot;&gt;Drush alias &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#drush-alias&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I want to be able to use the command &lt;code&gt;drush&lt;/code&gt; instead of always having to reference the full path to drush, as I did above. So I add an alias to my .bashrc. You can also do this by adding the location of drush to the PATH. Arguably that is more correct but this was simpler in a GitPod scenario where containers are constantly being built and destroyed and so don’t always have to be precisely the long-term ideal.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;alias drush=&quot;/workspace/drupal-gitpod/vendor/drush/drush/drush&quot;&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;command&quot; tabindex=&quot;-1&quot;&gt;Command &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#command&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The command tasks accomplish two simple things: start Apache, and source the bashrc to make sure it notices the drush alias.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; ~/.bashrc
apachectl start&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;ports&quot; tabindex=&quot;-1&quot;&gt;Ports &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#ports&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The GitPod.yml file optionally defines ports and what to do when they open. You don’t need to have this section. The ports will open either way. But it can be nice to specify in advance what you want to do when each port opens. In this case, I’m ignoring everything except for 8001, which I will open in the browser, since that is the port for the Apache access. If you don’t specify, it will give you a popup with each port opened asking what you want to do, so this saves some time.&lt;/p&gt;
&lt;pre class=&quot;language-gitpod&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitpod&quot;&gt;ports:
  - port: 8001
    onOpen: open-browser
  - port: 8828
    onOpen: ignore
  - port: 8829
    onOpen: ignore
  - port: 3306
    onOpen: ignore&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;github&quot; tabindex=&quot;-1&quot;&gt;GitHub &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#github&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This section starts with a somewhat misleading key “github.” These functions are not exclusive to GitHub – they can be used with any of the supported version control platforms with GitLab and Bitbucket as well. The main valuable thing here to me is defining prebuilds, which enables GitPod to start building the new image as soon as code changes are submitted to the repository. That saves time when you’re ready to start working and it’s already good to go, instead of waiting a few minutes.&lt;/p&gt;
&lt;pre class=&quot;language-gitpod&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitpod&quot;&gt;github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: true
    addCheck: true
    addComment: false
    addBadge: true
    addLabel: true&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;extensions&quot; tabindex=&quot;-1&quot;&gt;Extensions &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#extensions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The final section of this file is to install &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;VS Code&lt;/a&gt; extensions. There is one big qualifier here: it can only install extensions that are available in &lt;a href=&quot;https://open-vsx.org/&quot;&gt;the Open VSX registry&lt;/a&gt;. This may not be everything available for VS Code, with the most notable exclusion for me being &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/github-copilot/&quot;&gt;GitHub Copilot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here’s my Drupal 9 friendly set of extensions:&lt;/p&gt;
&lt;pre class=&quot;language-gitpod&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitpod&quot;&gt;vscode:
  extensions:
    - eamodio.gitlens
    - skippednote.VS-code-drupal
    - cweijan.vscode-mysql-client2
    - esbenp.prettier-vscode
    - gruntfuggly.todo-tree
    - mblode.twig-language
    - vscode-icons-team.vscode-icons&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;almost-there&quot; tabindex=&quot;-1&quot;&gt;Almost there… &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-01-28-drupal-gitpod-container-2-gitpod-yml/#almost-there&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the last post of this series, I’ll look at a few other configuration changes I needed to make for this to work.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal GitPod Container 3: Settings and Config</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-02-01-drupal-gitpod-container-3-settings-and-config/"/>
		<updated>2022-02-01T20:02:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-02-01-drupal-gitpod-container-3-settings-and-config/</id>
		<content type="html">&lt;p&gt;This post continues a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;mini-series&lt;/a&gt; in which I describe how I created a generic Drupal-friendly container working with GitPod. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-GitPod&quot;&gt;The code is available in my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first two posts covered the two big files: GitPod.Dockerfile and .gitpod.yml. This final post will cover a few minor changes I had to make to other configuration files.&lt;/p&gt;
&lt;h2 id=&quot;apache-conf&quot; tabindex=&quot;-1&quot;&gt;Apache Conf &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-01-drupal-gitpod-container-3-settings-and-config/#apache-conf&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Only one thing needs to change from the default Apache configuration file: telling it to look at /web for the actual website content, instead of /var/www/html. That’s because a Drupal project typically has a top level that includes several necessary pieces of the site like the composer.json file, private files, and configuration sync files, outside the folder where the public site’s content is found.&lt;/p&gt;
&lt;p&gt;That’s done by changing the document root from &lt;code&gt;&amp;quot;${GITPOD_REPO_ROOT}&amp;quot;&lt;/code&gt; to &lt;code&gt;&amp;quot;${GITPOD_REPO_ROOT}/web&amp;quot;&lt;/code&gt;, so the relevant section of the file looks something like this:&lt;/p&gt;
&lt;pre class=&quot;language-apache&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-apache&quot;&gt;# Directory and files to be served
DirectoryIndex index.html index.htm index.php
DocumentRoot &quot;${GITPOD_REPO_ROOT}/web&quot;

RewriteCond  %{REQUEST_FILENAME} !^/$
RewriteCond  %{REQUEST_FILENAME} !^/(files|misc|uploads)(/.*)?
RewriteCond  %{REQUEST_FILENAME} !&#92;.(php|ico|png|jpg|gif|css|js|html?)(&#92;W.*)?
RewriteRule ^(.*)$ /index.php?q=$1 [L,QSA]

&lt;Directory &quot;${GITPOD_REPO_ROOT}=&quot;&quot; web&quot;=&quot;&quot;&gt;
    AllowOverride all
    Require all granted
&lt;/Directory&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use this conf file, I saved my complete file in the .gitpod directory and then had the GitPod.Dockerfile copy that file into place:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; .gitpod/apache2.conf /etc/apache2/apache2.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;php-ini&quot; tabindex=&quot;-1&quot;&gt;PHP.ini &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-01-drupal-gitpod-container-3-settings-and-config/#php-ini&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The PHP.ini is similarly close to the default Ubuntu, but not quite. We’ll have to add support for a few extensions at minimum. There are a couple ways to do this. One approach is to have the script add the lines to enable the extensions, without touching anything else. The advantage of this is keeping everything else to the default, which may matter as the GitPod base image changes over time. That would look like:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;extension=uploadprogress&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; /etc/php/8.0/apache2/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The other alternative as I’ve done here is to completely overwrite the php.ini file with my own. The advantage of that approach is to also control all the other variables like the memory limit. The more you want to change from the default, the more this approach makes better sense than adding individual lines. So in that case, the file is copying using this line in the .gitpod.yml:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; /workspace/Drupal-GitPod/.gitpod/conf/php.ini /etc/php/8.0/apache2/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You could also accomplish this using sed to replace lines of the file in place, which is nice if you want to keep a perfectly-structured file replacing a default value. For example, to change the max_execution_time from 30s to 300s, I might do this:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/max_execution_time = 30/max_execution_time = 300/g&quot;&lt;/span&gt; /etc/php/8.0/apache2/php.ini&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;drupal-settings&quot; tabindex=&quot;-1&quot;&gt;Drupal settings &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-01-drupal-gitpod-container-3-settings-and-config/#drupal-settings&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most of the Drupal settings are similar to the default. The largest change is familiar to any Drupal developer: set the database credentials. Since this is a GitPod container which gets created and destroyed on the fly regularly, I went simple using the root user and no password. A production server would have a different user and a good password.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$databases&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;default&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;default&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;database&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;drupal&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;username&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;password&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;prefix&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;host&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;port&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;3306&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;namespace&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;Drupal&#92;&#92;Core&#92;&#92;Database&#92;&#92;Driver&#92;&#92;mysql&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;driver&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;mysql&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beyond that, there are a couple of tweaks both related to the fact that the GitPod domain is going to change.&lt;/p&gt;
&lt;p&gt;First I set the trusted_host_patterns. The valid domains for browsing this site are either as some subdomain of gitpod.io, or as localhost.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$settings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;trusted_host_patterns&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;^.+&#92;.gitpod&#92;.io$&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;^localhost$&#39;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also opened up the cookie_domain to allow anything. This is so that it doesn’t object to you first logging into the site at one GitPod subdomain, then spinning up a new container and trying to login with that one.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt; &lt;span class=&quot;token comment&quot;&gt;/**
  * Used to track what domains you&#39;re logged into
  * Set to * to accept any GitPod domain
  */&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$cookie_domain&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;*&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s it! I’ve now covered having a functional Drupal-friendly GitPod container.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab DevOps: PHP Lint</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-02-05-gitlab-devops-php-lint/"/>
		<updated>2022-02-05T13:51:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-02-05-gitlab-devops-php-lint/</id>
		<content type="html">&lt;p&gt;Here’s another piece in a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;GitLab DevOps&lt;/a&gt; setting: when code is committed to GitLab, I want to run a PHP linter on the custom code folders of Drupal (modules and themes) to make sure there aren’t any glaring syntax bugs that snuck through. My personal favourite error is when a “:wq” gets inserted into a file trying to exit vim, after doing all the testing.&lt;/p&gt;
&lt;p&gt;I split this into two pieces, taking advantage of &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/index.html#extends&quot;&gt;GitLab’s ability to extend other functions, even functions in other projects&lt;/a&gt;. My real work scenario is using GitLab, hence using GitLab CI. For the purposes of sharing here, I’ve put them in &lt;a href=&quot;https://github.com/ryan-l-robinson/GitLab-CI-CD&quot;&gt;my personal GitHub&lt;/a&gt;. I know that’s an unintuitive combination.&lt;/p&gt;
&lt;h2 id=&quot;the-generic-ci-cd-functions&quot; tabindex=&quot;-1&quot;&gt;The generic CI/CD functions &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-05-gitlab-devops-php-lint/#the-generic-ci-cd-functions&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To be able to test, I first need a general Oracle Linux 8 image that can run PHP 8.0 and composer for a Drupal site.&lt;/p&gt;
&lt;pre class=&quot;language-gitlab&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitlab&quot;&gt;## Build an Oracle Linux 8 container, used by other tests below ##
.ol8_lamp_build:
  stage: test
  image: oraclelinux:8
  before_script:
    - dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    - dnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm
    - dnf -y module enable php:remi-8.0
    - dnf install -y php php-gd php-pdo zip unzip git php-curl php-mbstring php-zip php-json php-xml php-simplexml php-mysqlnd php-pecl-apcu wget curl
    - php -v
    - php -r &quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;
    - php composer-setup.php
    - php -r &quot;unlink(&#39;composer-setup.php&#39;);&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Part one is a project containing a few generic CI job templates. One of those, in the tests.yml file, is a PHP lint test. Saying that I want to test every php file in a certain folder is not as easy as you’d think – there is no flag for applying it recursively – so it requires a loop:&lt;/p&gt;
&lt;pre class=&quot;language-gitlab&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitlab&quot;&gt;### PHP lint test ###
.php_lint:
  stage: test
  extends: .ol8_lamp_build
  variables:
    DIRECTORIES: &quot;./&quot;
    EXTENSIONS: &quot;php&quot;
  script:
    ## Recursively checks for files of specified extensions in specified directories and completes php lint on them
    - cwd=&quot;$(pwd)&quot;
    - |
      for DIRECTORY in $DIRECTORIES 
        do
          cd $DIRECTORY
          for EXT in $EXTENSIONS
            do
              files=&quot;$(find -name *.${EXT} -type f)&quot;

              for file in ${files}
                do php -l ${file};
              done;
            done;
          cd $cwd;
        done;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This has variables for the directory to start testing from, as well as what extensions to test. The extension variable defaults to only php files, but it can be overridden to include other extensions, which is valuable with Drupal where other extensions get used for php code like .module and .theme.&lt;/p&gt;
&lt;h2 id=&quot;the-project-s-ci-file&quot; tabindex=&quot;-1&quot;&gt;The project’s CI file &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-05-gitlab-devops-php-lint/#the-project-s-ci-file&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Part two is the specific project that then references those generic templates. Using the full project reference, under the assumption that in a real situation this would be in a differernt GitLab project, that looks something like this in the project’s .gitlab-ci.yml file:&lt;/p&gt;
&lt;pre class=&quot;language-gitlab&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitlab&quot;&gt;# Includes general CI jobs to extend from
include:
 
    - project: &#39;[path to the GitLab project with CI]&#39;
      ref: main
      file: test.yml

## Stages ##
stages:
  - test

## Test Jobs ##

### Tests for PHP errors in custom code ###
php:
  extends: .php_lint
  variables:
    DIRECTORIES: ./web/themes/custom ./web/modules/custom
    EXTENSIONS: php module theme inc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example will run the PHP syntax test against all .php, .module, .theme, and .inc files located with the Drupal 8+ custom themes and custom modules directories.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab DevOps: GitLab Runner</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-02-09-gitlab-devops-gitlab-runner/"/>
		<updated>2022-02-09T14:03:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-02-09-gitlab-devops-gitlab-runner/</id>
		<content type="html">&lt;p&gt;This relates to &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;the GitLab DevOps process&lt;/a&gt;. GitLab can automate deployment to a server, meaning that you do not have to log in to that server separately to pull the changes and carry out any other needed steps for the installation.&lt;/p&gt;
&lt;p&gt;But there’s a catch: if your server is not publicly-accessible, such as behind a VPN, which is pretty common for development and staging servers, you’ll need to install a runner. This is because GitLab cannot initialize a connection to a hidden server, so the server will have to start the connection instead.&lt;/p&gt;
&lt;p&gt;Here’s how I installed a GitLab runner on a server. This was specifically for Oracle Linux 8, but it will be pretty close for other distributions.&lt;/p&gt;
&lt;h2 id=&quot;install-gitlab-runner-package&quot; tabindex=&quot;-1&quot;&gt;Install GitLab Runner package &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-09-gitlab-devops-gitlab-runner/#install-gitlab-runner-package&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First you need to install the GitLab Runner package on your server. GitLab will give you the instructions to do this, but here’s the general idea.&lt;/p&gt;
&lt;p&gt;First, copy the package to your server, in the /usr/local/bin folder:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--output&lt;/span&gt; /usr/local/bin/gitlab-runner &lt;span class=&quot;token string&quot;&gt;&quot;https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add permissions to execute that file. You’ll need to be able to run it.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/gitlab-runner&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Navigate to that folder and install:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /usr/local/bin
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; ./gitlab-runner &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;--user&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;libgit --working-directory&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/home/libgit&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;register-a-runner&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-09-gitlab-devops-gitlab-runner/#register-a-runner&quot;&gt;&lt;/a&gt;Register a runner &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-09-gitlab-devops-gitlab-runner/#register-a-runner&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once the runner is installed, you’ll need to register at least one runner on the server.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; ./gitlab-runner register &lt;span class=&quot;token parameter variable&quot;&gt;--url&lt;/span&gt; https://gitlab.com/ --registration-token &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;token&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script will prompt you with a few configuration options. Some are fairly obvious, but I’ll note a couple others.&lt;/p&gt;
&lt;p&gt;The token can be found in the GitLab Project -&amp;gt; Settings -&amp;gt; CI/CD -&amp;gt; Runners.&lt;/p&gt;
&lt;p&gt;For the tag, I recommend having a standard convention across all your servers, like [site shortcode]-[dev stage]. For example, site1 will have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;site1-dev&lt;/li&gt;
&lt;li&gt;site1-staging&lt;/li&gt;
&lt;li&gt;site1-prod1&lt;/li&gt;
&lt;li&gt;site1-prod2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And site2 will have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;site2-dev&lt;/li&gt;
&lt;li&gt;site2-staging&lt;/li&gt;
&lt;li&gt;site2-prod&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For what executor to use. Shell is the simplest, at least in a scenario like this of running it on a Linux server.&lt;/p&gt;
&lt;p&gt;That’s it. It may take a bit to appear, but the runner will now be associated with the GitLab project.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Fluid UI</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-02-13-drupal-fluid-ui/"/>
		<updated>2022-02-14T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-02-13-drupal-fluid-ui/</id>
		<content type="html">&lt;p&gt;In doing research on accessibility tools that could be incorporated into a Drupal site, a co-worker recommended &lt;a href=&quot;https://fluidproject.org/&quot;&gt;Fluid UI&lt;/a&gt;. This is not the same Fluid Framework used by Microsoft as the backbone of &lt;a href=&quot;https://www.zdnet.com/article/microsoft-introduces-loop-a-new-collaboration-tool-built-on-fluid-framework/&quot;&gt;the new Microsoft Loop tool&lt;/a&gt;, or &lt;a href=&quot;https://developer.microsoft.com/en-us/fluentui&quot;&gt;the Fluent UI Microsoft design language&lt;/a&gt;. There’s lots of use of Fluid and Fluent out there.&lt;/p&gt;
&lt;p&gt;This one is an open source group out of Toronto focused on web accessibility, and they offer their tools in a few different formats. One is as &lt;a href=&quot;https://www.drupal.org/project/fluidui&quot;&gt;a convenient Drupal module&lt;/a&gt;. I installed it on a dev site and took a look at what it offered.&lt;/p&gt;
&lt;h2 id=&quot;the-toolbar&quot; tabindex=&quot;-1&quot;&gt;The toolbar &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-13-drupal-fluid-ui/#the-toolbar&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It creates a toolbar across the top of the site, hidden by default behind a “+ Show Preferences” button. When expanded, there are a few options which can be valuable accessibility improvements.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/01/Fluid-UI-components.png&quot; alt=&quot;Fluid UI toolbar: text size, text style, line spacing, contrast, table of contents&quot; /&gt;
&lt;em&gt;The toolbar with the 5 components&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change font size or spacing between lines&lt;/li&gt;
&lt;li&gt;Change to a high-contrast colour palette&lt;/li&gt;
&lt;li&gt;Emphasize links and buttons&lt;/li&gt;
&lt;li&gt;Display a table of contents&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only one I don’t quite understand the value of is the table of contents. It gives a bland unstyled list of links, programmatically generated based on the headers on the page. I’m not sure who this is for. Sighted users can see the headers. Blind or low-vision users can navigate in a screen reader by the header levels already, much more useful than a table of contents at the top. I assume there is a use case because these developers know a lot more about accessibility than I do, but I have failed to think of what it is. Feel free to comment if you know.&lt;/p&gt;
&lt;p&gt;It’s also a bit odd visually, needing to scroll sideways to see all the options. I’d like to think there would be a better way to display them all.&lt;/p&gt;
&lt;h2 id=&quot;configuration&quot; tabindex=&quot;-1&quot;&gt;Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-13-drupal-fluid-ui/#configuration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It has limited admin configuration options both around what pages the toolbox should appear on:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/01/Fluid-UI-configuration.png&quot; alt=&quot;Fluid UI configuration options, described below&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display on admin pages (yes/no checkbox). By default this is off, meaning it only shows on the public pages, but if you’re aiming to improve accessibility of administration as well, you’ll want to turn this on.&lt;/li&gt;
&lt;li&gt;Hide the toolbox on these pages (text area to specify pages). There might be some unique pages where it doesn’t work very well, so you can name those as exceptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am a little tempted to come up with a basic settings page that can turn on or off each component, instead of it being an all-or-nothing, and maybe be able to change the order of the components, then offer that back to the developers. It’s not a big need, though; most are going to be happy with leaving everything on.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-13-drupal-fluid-ui/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Overall, it’s a good tool. It is a little rough, so I do hope they smooth it out some more, but it’s certainly much better than not offering these accessibility improvements at all.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Sync Configuration</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-02-17-drupal-sync-configuration/"/>
		<updated>2022-02-18T00:14:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-02-17-drupal-sync-configuration/</id>
		<content type="html">&lt;p&gt;Having a workflow that keeps your code in sync across development, staging, and production servers – like in the series of &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;GitLab DevOps&lt;/a&gt; posts I’ve been sharing recently – is important. But that doesn’t synchronize the database, which contains two major subcategories: configuration and content. It also doesn’t synchronize user-uploaded files, but that’s a subject for a different post.&lt;/p&gt;
&lt;p&gt;Fortunately, Drupal 8 introduced a new system for syncing configuration across copies of the site.&lt;/p&gt;
&lt;h2 id=&quot;what-s-included&quot; tabindex=&quot;-1&quot;&gt;What’s included &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-17-drupal-sync-configuration/#what-s-included&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is not a full database backup, but it does include most settings, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enabled extensions and themes&lt;/li&gt;
&lt;li&gt;Theme configuration&lt;/li&gt;
&lt;li&gt;Views&lt;/li&gt;
&lt;li&gt;Blocks&lt;/li&gt;
&lt;li&gt;Module settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What it does not include is node or entity content. With the possible exception of initially building the site, that shouldn’t have any meaningful deficit on completing the work.&lt;/p&gt;
&lt;p&gt;This distinction between configuration and content makes sense in a couple ways.&lt;/p&gt;
&lt;p&gt;Configuration changes are usually made first in your development environment, tested thoroughly, and then pushed through the pipeline. That’s not true for content. Content is often going to be created or edited first by the regular site users on production. Those don’t need technical teams to approve and test everything and are available to more users to do directly and have go into effect immediately.&lt;/p&gt;
&lt;p&gt;You also don’t need to synchronize all content in the same way, since for the most part the presence or absence of an extra basic page node does not affect the ability to sufficiently test anything new that needs to be tested. It’s ok if you let your production site’s content get ahead of your development environment in a way that you don’t want to happen with configuration.&lt;/p&gt;
&lt;h2 id=&quot;git-workflow&quot; tabindex=&quot;-1&quot;&gt;Git workflow &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-17-drupal-sync-configuration/#git-workflow&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The ideal flow for these changes is integrated with your code git flow. You can export your configuration on dev, add it to the git repository, push through to the next server in your CI/CD chain, and import it there. Much of this can be streamlined with CI/CD tools, but here are the manual steps:&lt;/p&gt;
&lt;p&gt;To export the configuration:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;drush config-export&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add to the git repository and commit:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; sync/config/*
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit &lt;span class=&quot;token parameter variable&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Updated configuration&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Switch over to the other server and do essentially the reverse:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; fetch
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; pull
drush config-import&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More on &lt;a href=&quot;https://www.drush.org/latest/commands/config_import/&quot;&gt;the drush command&lt;/a&gt; can be seen here.&lt;/p&gt;
&lt;h2 id=&quot;manual&quot; tabindex=&quot;-1&quot;&gt;Manual &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-02-17-drupal-sync-configuration/#manual&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can also sync config manually one group of settings at a time. This is a slower process, so you wouldn’t take this route in a normal workflow of pushing dev changes out to production.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/01/Config-sync.png&quot; alt=&quot;Configuration sync screen, allowing for import, export, and full archive or single items&quot; /&gt;
&lt;em&gt;Screenshot of importing a single configuration item&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I won’t detail that here, since the interface does make it fairly intuitive, but you can approach it halfway – sync the files but then import them one at a time from the synchronize tab – or you can avoid syncing entirely and instead manually copy the configuration file shown on one Drupal site into the other.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Teams: Guest Notifications</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-03-microsoft-teams-guest-notifications/"/>
		<updated>2022-03-03T16:44:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-03-microsoft-teams-guest-notifications/</id>
		<content type="html">&lt;p&gt;Microsoft Teams has the great ability to invite users who are in other organizations to join your Teams in order to collaborate, assuming your IT admin has not turned that feature off. Guests in the Team can’t do everything that an internal member can do, but it’s pretty close, so it’s a strong environment for connecting with partners.&lt;/p&gt;
&lt;p&gt;But there is one pretty significant catch to be aware of: notifications.&lt;/p&gt;
&lt;p&gt;Here’s a way to think about it that I find helpful: it comes down to who owns the data. When somebody messages in a Team channel thread, that data is owned by that Team.&lt;/p&gt;
&lt;p&gt;If you message in a Team, notifications will pop immediately for anybody currently in that tenant, whether internal or guest.&lt;/p&gt;
&lt;p&gt;A message will not pop for users who have guest access to that team but are not currently operating in that tenant (probably because they’re in their own tenant). Notifications do not cross tenants. What they do get is the same as if they missed a notification in their own tenant: an email summarizing that a notification is waiting for them about an hour later, and a notification waiting for them in their Activity tab the next time they sign in to the relevant tenant.&lt;/p&gt;
&lt;p&gt;So here’s the real question: suppose I am in my tenant, which does include a guest user, and I want to get that guest user’s attention immediately. I don’t want to wait for the email notification to go out, or for them to think to check in to my tenant’s notifications. How do I do that?&lt;/p&gt;
&lt;p&gt;The good news is that the presence indicator is tenant-specific. Anywhere you see their profile, like when you tag them within a channel thread or you try to start a chat with them, you can see if they are online in your tenant.&lt;/p&gt;
&lt;p&gt;If they are, it’s easy to proceed with messaging within your tenant to them as a guest.&lt;/p&gt;
&lt;p&gt;If they are not in your tenant, the next option is an external message instead. External and guest aren’t the same thing. External sends a chat message (not a Team channel thread) from your tenant to theirs. Guest messages them within your tenant and it can also use the full Team channel collaboration tools. When you message somebody in Chat, you can see whether they are Guest or External, and you can have the same contact as both Guest and External at the same time, which can be confusing to remember which to message when.&lt;/p&gt;
&lt;p&gt;So, if they aren’t online in your tenant and you have to reach them in a hurry, the best thing you can do is send a message to the external user asking them to switch over to your tenant. Then you can continue the conversation in the Team channel.&lt;/p&gt;
&lt;p&gt;It can be unintuitive at first, but once you’ve got the basic idea of guest vs external, it does make sense.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Ckeditor Abbreviation</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-07-drupal-ckeditor-abbreviation/"/>
		<updated>2022-03-07T16:35:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-07-drupal-ckeditor-abbreviation/</id>
		<content type="html">&lt;p&gt;One of the HTML tags that many are not aware of is &lt;a href=&quot;https://www.w3schools.com/TAGS/tag_abbr.asp&quot;&gt;the &amp;lt;abbr&amp;gt; tag&lt;/a&gt;. This is a useful tag to help provide explanations of abbreviations within the body of the text. If you’re reading along and see an abbreviation for &lt;abbr title=&quot;WordPress&quot;&gt;WP&lt;/abbr&gt; and you know what it is, you can keep reading. If you’re reading along and see an abbreviation and don’t know what it is, you can hover over it and it will show you an explanation. It’s a win-win, providing an explanation for those that need it without needing to add more text in the main body which may come across as over-explaining for those that don’t need it.&lt;/p&gt;
&lt;p&gt;To make it easy to insert this tag into Drupal content, you can install &lt;a href=&quot;https://www.drupal.org/project/ckeditor_abbreviation&quot;&gt;the ckeditor_abbreviation module&lt;/a&gt;. This is a simple but effective module that adds a button to the ckeditor WYSIWYG editing panel that enables users to add an &amp;lt;abbr&amp;gt; without touching any code. The interface fits in seamlessly, with a similar experience to adding a link.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitHub and GitLab: Diagrams in Markdown</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-09-github-and-gitlab-diagrams-in-markdown/"/>
		<updated>2022-03-10T01:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-09-github-and-gitlab-diagrams-in-markdown/</id>
		<content type="html">&lt;p&gt;GitHub recently announced &lt;a href=&quot;https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/&quot;&gt;a great new feature that allows for generating diagrams within markdown&lt;/a&gt;. I tested this out and it also works in GitLab.&lt;/p&gt;
&lt;p&gt;If you’re writing a lot of documentation in markdown, as you probably are if you’re using GitHub or GitLab, this can be really nice when you need diagrams, like mapping out your CI/CD system or server maps. You can build diagrams much faster than putting something together in Photoshop or some other diagramming tool that exports an image which you then need to upload.&lt;/p&gt;
&lt;p&gt;This is all it takes, building off the standard code markdown “` markers and using arrows to indicate links between objects.&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;mermaid
  graph TD;
      A--&gt;B;
      A--&gt;C;
      B--&gt;D;
      C--&gt;D;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Free as in Cats</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-12-free-as-in-cats/"/>
		<updated>2022-03-12T13:58:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-12-free-as-in-cats/</id>
		<content type="html">&lt;p&gt;I once heard the phrase that most open source projects (the context was specifically Drupal) was not free as in beer but was free as in cats.&lt;/p&gt;
&lt;p&gt;What he meant by that is that you may not pay for the code up front, but you probably do have to pay to keep it running and you need to give it your attention if you really want to get the best of it. It’s not something you can enjoy with no responsibility.&lt;/p&gt;
&lt;p&gt;Cats need food, attention (sometimes while you’re trying to sleep or use your computer), clean litter, play time, and so on. Open source technology needs code maintenance and infrastructure to run it.&lt;/p&gt;
&lt;p&gt;This is a conversation that came up a lot in a previous job that included consulting with non-profit clients on Constituent Relationship Management (CRM) systems. They were often very excited that we could help them get set up with &lt;a href=&quot;https://tech.ryanrobinson.ca/categories/civicrm/&quot;&gt;CiviCRM&lt;/a&gt;, an open source platform, in part because it was “free.”&lt;/p&gt;
&lt;p&gt;We made a habit of explaining that the code may be free, but there would still be costs in other ways. There were costs paid to us to help them configure it properly. There were costs paid to us to apply software maintenance updates on a regular basis. There were costs for a web server to host the site, and CiviCRM did need meaningfully more power – which meant more expensive – than a simple WordPress shared host. There would often be the cost of bugs, both in terms of lost productivity while the bug was present and in terms of time/money to get the bug fixed. There were costs to develop any custom extensions. They had to know all this before they signed off on a project.&lt;/p&gt;
&lt;p&gt;Not always, but sometimes – especially with non-profit deals available with services like Salesforce and Dynamics 365 – it would actually be cheaper in both time and money to use a paid closed source hosted platform than to use the “free” CiviCRM. That depends on a few variables including number of users and how many customizations would be needed. And of course, there were other variables as well unrelated to cost (CiviCRM is built for non-profits first). Cost isn’t the only factor, but it often is the first one that comes to mind for non-profits on a tight budget.&lt;/p&gt;
&lt;p&gt;Open source is great. I’m thankful for many great open source systems including CiviCRM and Drupal. Just know that “free” is “as in cats” rather than “as in beer.”&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>PHP: XDebug in VS Code</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/"/>
		<updated>2022-03-15T12:04:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://xdebug.org/&quot;&gt;XDebug&lt;/a&gt; is a helpful tool when debugging PHP code. XDebug is a step debugging tools that helps you inspect functionality of PHP code in a cleaner way than regularly writing dump/log statements.&lt;/p&gt;
&lt;p&gt;I will not get into details here about setting up XDebug on a server, but you can find that with some Internet searching. Instead, this post is about how to use XDebug within Visual Studio Code.&lt;/p&gt;
&lt;h2 id=&quot;install-the-extension&quot; tabindex=&quot;-1&quot;&gt;Install the Extension &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/#install-the-extension&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, install &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=xdebug.php-debug&quot;&gt;the extension PHP Debug (xdebug.php-debug) from the Visual Studio Code extension directory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/03/PHP-Debug-extension-page.png&quot; alt=&quot;&amp;quot;Visual Studio Code extension page&amp;quot;&quot; /&gt;
&lt;em&gt;Screenshot of the extension in the directory&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;start-the-listener&quot; tabindex=&quot;-1&quot;&gt;Start the Listener &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/#start-the-listener&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To start the XDebug listener:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the “Run and Debug” tab (Ctrl + Shift + D) in the main app sidebar.&lt;/li&gt;
&lt;li&gt;Click the play button beside the XDebug listener. Depending on your developer environment, you may have other listeners as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A small window will be added to your workspace with a few buttons. While everything is running smoothly, it will be a pause, a stop, and a restart button. While stopped because of a breakpoint, it will provide other options to continue, step over, step into, and step out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/03/Debug-panel.png&quot; alt=&quot;&amp;quot;XDebug in VS Code debug panel&amp;quot;&quot; /&gt;
&lt;em&gt;Debug panel&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;monitor-notices-warnings-etc&quot; tabindex=&quot;-1&quot;&gt;Monitor Notices, Warnings, etc &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/#monitor-notices-warnings-etc&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can monitor for any notices, warnings, errors, or exceptions that occur while the listener is running.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the “Run and Debug” tab (Ctrl + Shift + D) in the main app sidebar.&lt;/li&gt;
&lt;li&gt;If it is collapsed, expand the “Breakpoints” accordion section.&lt;/li&gt;
&lt;li&gt;Select under what conditions you want to break and show you results, e.g. Notices, Warnings.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;add-a-breakpoint&quot; tabindex=&quot;-1&quot;&gt;Add a Breakpoint &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-15-php-xdebug-in-vs-code/#add-a-breakpoint&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can add a breakpoint at a line in the code and have XDebug report the value of variables as of the start of that line.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the VS Code editor for the code you want to check, scroll to the left of the line of code you want to break. This will cause a little red dot to appear. Click on that red dot to create the breakpoint.&lt;/li&gt;
&lt;li&gt;Carry out your test scenario (e.g. load the page that calls that PHP in your browser).&lt;/li&gt;
&lt;li&gt;See the results with the values of each variable at the breakpoint, within the Run and Debug window in VS Code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/03/XDebug-breakpoint.png&quot; alt=&quot;&amp;quot;Visual Studio Code with an XDebug breakpoint set&amp;quot;&quot; /&gt;
&lt;em&gt;Breakpoint beside line of PHP code&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal Docker: devcontainer</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-18-drupal-docker-devcontainer/"/>
		<updated>2022-03-18T12:38:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-18-drupal-docker-devcontainer/</id>
		<content type="html">&lt;p&gt;I have previously shared &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/vagrant-oracle-linux-vm/&quot;&gt;setting up local development environments using vagrant&lt;/a&gt; and &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;GitPod&lt;/a&gt; in Drupal friendly ways. This post will start a new mini-series on how I built a Docker Desktop setup for a Drupal-friendly environment that is (mostly) based on Oracle Linux 8.&lt;/p&gt;
&lt;p&gt;Code for this is found in &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;overview&quot; tabindex=&quot;-1&quot;&gt;Overview &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-18-drupal-docker-devcontainer/#overview&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There will need to be several files to make this work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;devcontainer.json for how to integrate with &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docker-compose.yml for how to tie together all the different containers&lt;/li&gt;
&lt;li&gt;web.Dockerfile for the primary Apache container (Oracle Linux based)&lt;/li&gt;
&lt;li&gt;php.Dockerfile for the PHP-FPM container (Oracle Linux based)&lt;/li&gt;
&lt;li&gt;db.Dockerfile for the MariaDB database container (a simpler image from an official MariaDB image)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;devcontainer-json&quot; tabindex=&quot;-1&quot;&gt;Devcontainer.json &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-18-drupal-docker-devcontainer/#devcontainer-json&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ll start at the first file which gets called when you open VS Code: the .devcontainer/devcontainer.json.&lt;/p&gt;
&lt;p&gt;The most important pieces are near the top. This includes:&lt;/p&gt;
&lt;p&gt;Where to find the Docker composer file:&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;  &quot;dockerComposeFile&quot;: &quot;../docker-compose.yml&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What user to connect as:&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;  &quot;remoteUser&quot;: &quot;drupal&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What service to connect to and what other services to start up in the background:&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;  &quot;service&quot;: &quot;web&quot;,
  &quot;runServices&quot;: [&quot;web&quot;, &quot;php&quot;, &quot;db&quot;],&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In my case, my primary is called web for the main Apache container, with two other services for PHP and DB (MariaDB).&lt;/p&gt;
&lt;p&gt;What location on the container should be your workspace after connecting:&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;  &quot;workspaceFolder&quot;: &quot;/var/www/html&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also define what extensions and settings should be installed in this container. Unlike &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/drupal-gitpod-container-2-gitpod-yml/&quot;&gt;the GitPod equivalent&lt;/a&gt;, this can be any VS Code extension, not only the Open VSX ones. I’ve written &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/favourite-visual-studio-code-extensions/&quot;&gt;some of my favourite extensions in the past&lt;/a&gt;, but this is a good sample of some I use specifically with Drupal:&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;    &quot;extensions&quot;: [
      &quot;gruntfuggly.todo-tree&quot;,
      &quot;eamodio.gitlens&quot;,
      &quot;gitkraken.gitkraken-authentication&quot;,
      &quot;cweijan.vscode-mysql-client2&quot;,
      &quot;esbenp.prettier-vscode&quot;,
      &quot;whatwedo.twig&quot;,
      &quot;marcostazi.vs-code-drupal&quot;,
      &quot;github.copilot&quot;,
      &quot;vscode-icons-team.vscode-icons&quot;,
      &quot;xdebug.php-debug&quot;,
    ],&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;scripts&quot; tabindex=&quot;-1&quot;&gt;Scripts &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-03-18-drupal-docker-devcontainer/#scripts&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can trigger other scripts to run at various points in the process.&lt;/p&gt;
&lt;p&gt;The primary one I made use of is postCreateCommand. This will run only once when the container is first built. This one is much more complicated building the entire site. I’ll have another post dedicated to that script.&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;    &quot;postCreateCommand&quot;: &quot;/bin/bash -c &#92;&quot;/postCreateCommand.sh&#92;&quot;&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also have a much simpler postAttachCommand. This only sources the ~/.bashrc to ensure the user knows where to find commands like drush and composer, which were set up by the postCreateCommand script.&lt;/p&gt;
&lt;pre class=&quot;language-devcontainer&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-devcontainer&quot;&gt;    &quot;postAttachCommand&quot;: &quot;/bin/bash -c &#92;&quot;source ~/.bashrc&#92;&quot;&quot;,&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Power Apps: People Lookup</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-02-People-Lookup/"/>
		<updated>2022-05-02T16:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-02-People-Lookup/</id>
		<content type="html">&lt;h2 id=&quot;background&quot; tabindex=&quot;-1&quot;&gt;Background &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-02-People-Lookup/#background&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A while ago I started a post in the series on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/sharepoint-site-provisioning/&quot;&gt;SharePoint site provisioning&lt;/a&gt;, unpacking some of the problems I’ve faced and overcome in building SharePoint site provisioning solutions. Back then, it was much more complicated to add a user from your Azure Active Directory as a field stored on an item. It&#39;s trivial when you&#39;re using a SharePoint list as the back-end for the data storage, since there are people lookup fields in SharePoint lists. But it&#39;s more complicated if you want to put it into DataVerse or not store it anywhere - only send it directly to a Power Automate Flow.&lt;/p&gt;
&lt;p&gt;The latter is what I wanted to do with the SharePoint site provisioning. I wanted to accept a user on the Power Apps form and then the Flow would assign permissions based on that. I did not successfully finish writing that up, so I&#39;ll only include my old incomplete notes below.&lt;/p&gt;
&lt;h2 id=&quot;good-news&quot; tabindex=&quot;-1&quot;&gt;Good News! &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-02-People-Lookup/#good-news&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I finish the post now because there&#39;s great news: &lt;a href=&quot;https://powerapps.microsoft.com/en-us/blog/announcing-the-aad-user-virtual-table-find-and-add-any-aad-user-to-your-records/&quot;&gt;Microsoft has now made that much easier out of the box&lt;/a&gt;. That post includes lots of information for how to use this new tool.&lt;/p&gt;
&lt;h2 id=&quot;old-way&quot; tabindex=&quot;-1&quot;&gt;Old Way &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-02-People-Lookup/#old-way&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s the video from the old way of doing it that I was starting to implement, but you can now safely ignore that and use the new way instead.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/xs_hWRNCwuA&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content>
	</entry>
	
	<entry>
		<title>Tel Links</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-03-tel-links/"/>
		<updated>2022-05-04T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-03-tel-links/</id>
		<content type="html">&lt;p&gt;For many years there has been a standard for making links that open phone apps to dial a phone number. This is really great. Imagine you&#39;re browsing a website for a pizza place and you want to start a phone call to place the order. Without a tel link, especially on mobile, you&#39;re stuck memorizing the number and copying it over to your phone app. With a tel link, you quickly click on the link and your phone app is opened with the number in the dialpad.&lt;/p&gt;
&lt;p&gt;The problem comes with extensions. How do you tell the phone app to dial an extension after the base number?&lt;/p&gt;
&lt;p&gt;Some quick searching of the Internet seems to point toward the use of w (for wait) or p (for pause) as the marker between the number and the extension, e.g. 555-555-5555w555 or 555-555-5555p555. I tested these options on my Android phone and on Skype on a Windows 10 machine (the version from the Store). They did not work.&lt;/p&gt;
&lt;p&gt;Some more research found that another option was a comma (,). This one does work on both iOS and Android. It does not work with desktop Skype.&lt;/p&gt;
&lt;p&gt;It also might not cover absolutely everything that has to be pressed. For example, in the system I tested in, it required pressing # after the extension. It did not work to add # to the end of the link, e.g. tel:+1555-555-5555,555#&lt;/p&gt;
&lt;h2 id=&quot;now-what&quot; tabindex=&quot;-1&quot;&gt;Now What? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-03-tel-links/#now-what&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;So, what should you do? It&#39;s not very consistent, unfortunately. If you know your audience is solely or mostly iOS and Android, you can proceed with the comma approach. But that will fail completely - not gracefully - in other uncommon circumstances like Skype. That might be an acceptable trade most of the time, because how many people are really clicking on a phone link on something other than iOS or Android at this point?&lt;/p&gt;
&lt;p&gt;A middle ground approach is to link the base phone number without the extension. This will work on any phone app that supports the tel protocol. This leaves some minor room for confusion, though: somebody clicks the link, it launches the phone app, then you hear it asking for an extension, so you have to switch back to the browser to read the extension, and switch back to the app to enter it. That&#39;s a bit of an annoying surprise, but I&#39;m in the camp that it is still less annoying than having no link at all.&lt;/p&gt;
&lt;p&gt;And of course, that&#39;s the third option: don&#39;t link anything. This would be the philosophy that it&#39;s better to do nothing if you can&#39;t do it perfect.&lt;/p&gt;
&lt;p&gt;In my context, we went with the comma. We know the audience is going to be almost if not entirely iOS and Android wanting that functionality. But which one you go with may depend on your context, because unfortunately it is not a completely universal standard.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitHub Pages: Building a Site</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/"/>
		<updated>2022-05-05T11:39:18Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/</id>
		<content type="html">&lt;p&gt;I recently decided that I wanted to try out hosting this site on GitHub Pages instead of WordPress that I had been using for over a decade. The reason why is simple: it’s &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/civicrm/free-as-in-cats/&quot;&gt;free as in cats&lt;/a&gt; and it’s easier to maintain after the initial work of setting it up, with no regular maintenance required.&lt;/p&gt;
&lt;p&gt;Here’s a high level look at how I did it, and the code &lt;a href=&quot;https://github.com/ryan-l-robinson/ryan-l-robinson.github.io&quot;&gt;is available in my GitHub&lt;/a&gt;. The main branch is everything I control, then the GitHub Actions generate the site on the gh-pages branch.&lt;/p&gt;
&lt;h2 id=&quot;chirpy-theme&quot; tabindex=&quot;-1&quot;&gt;Chirpy Theme &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/#chirpy-theme&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I looked around for a bit and chose to start from &lt;a href=&quot;http://jekyllthemes.org/themes/jekyll-theme-chirpy/&quot;&gt;the Chirpy theme&lt;/a&gt;. I like its simple design while still supporting the key blog features: categories, tags, archive timeline. And the biggest selling point was the switch between dark and light modes. That’s a nice feature to offer visitors.&lt;/p&gt;
&lt;p&gt;It does have a few things I wish were better. The navigation sidebar is not in a nav element, so that&#39;s a bit less than ideal accessibility. It also leans heavily on using ID for every element instead of class, which means my &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt; is constantly warning me that this is a fragile way to build a site. And the default colour contrasts are not strong enough in several places, but that can be overridden with CSS (see below).&lt;/p&gt;
&lt;p&gt;Knowing myself, I&#39;ll probably try to find a different theme in 1-2 years, but for now, this will do.&lt;/p&gt;
&lt;h2 id=&quot;config&quot; tabindex=&quot;-1&quot;&gt;Config &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/#config&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next step was to create the general config of the site and any pages outside of the blog posts like the About page. Config provided several options including where to find the profile photo, which social network links to show in the sidebar and as share buttons on posts, whether to default to light or dark mode.&lt;/p&gt;
&lt;p&gt;About is a simple markdown file with some front matter, and placed within the _tabs folder which will add it to the main navigation. Adding more pages to this _tabs folder will add them to the main navigation as well.&lt;/p&gt;
&lt;h2 id=&quot;assets&quot; tabindex=&quot;-1&quot;&gt;Assets &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/#assets&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The largest piece of work was editing the assets, specifically the CSS stylesheet. The key idea for this is that anything I put in a folder called “assets” would add to and override the default assets folder on the site. This includes images and stylesheets. This stylesheet behaviour is similar to WordPress where you can have a child theme build on and override certain pieces of the stylesheet.&lt;/p&gt;
&lt;h2 id=&quot;posts&quot; tabindex=&quot;-1&quot;&gt;Posts &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/#posts&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I chose to use a WordPress plugin to export everything on my WordPress site into Jekyll format. It worked pretty well, but did leave a few pieces I wanted to clean up myself. Some of the front matter it included was not relevant to my theme, so I removed those. The image in the front matter was not the right syntax, so I had to adjust each of those. And it wrapped every image in a figure tag with a caption, while this theme supports a simpler syntax for images, so I also replaced those. Some of the code around images and YouTube video embeds were messier than they needed to be.&lt;/p&gt;
&lt;p&gt;I&#39;ll have more in a future post about how I write and publish posts.&lt;/p&gt;
&lt;h2 id=&quot;domain&quot; tabindex=&quot;-1&quot;&gt;Domain &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-05-Building-a-Site/#domain&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What I have not done yet is assigning a domain. I will move my ryanrobinson.techology domain to here, but haven&#39;t yet. &lt;a href=&quot;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site&quot;&gt;It seems like a pretty straightforward process&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>WordPress vs Jekyll</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/"/>
		<updated>2022-05-10T15:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/</id>
		<content type="html">&lt;p&gt;I recently switched from running this blog off a WordPress site to running it off a GitHub Pages site built on a Jekyll theme. Here&#39;s a few thoughts on the pro&#39;s and con&#39;s of each.&lt;/p&gt;
&lt;h2 id=&quot;users&quot; tabindex=&quot;-1&quot;&gt;Users &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#users&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;WordPress offers support for multiple users with different permissions. You can have some admins with full site control, some editors to oversee content, some authors who can only write new content.&lt;/p&gt;
&lt;p&gt;Jekyll does not, except inasmuch as you have multiple contributors to the GitHub project. You can set a different author name for a post in the front matter, but there&#39;s no permission level for ongoing content management.&lt;/p&gt;
&lt;h2 id=&quot;ease-of-building&quot; tabindex=&quot;-1&quot;&gt;Ease of building &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#ease-of-building&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Somebody inexperienced with website building can still have a pretty good WordPress ssite ready in half an hour, especially on WordPress.com but even on many self-hosted WordPress sites since many hosts provide tools to quickly install it in a few clicks.&lt;/p&gt;
&lt;p&gt;Jekyll takes more expertise. Even when using an existing theme, you still need to learn a few things about GitHub, edit configuration in files (not interfaces), and handle tasks like resizing image assets and cleaning up code yourself.&lt;/p&gt;
&lt;h2 id=&quot;cost&quot; tabindex=&quot;-1&quot;&gt;Cost &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#cost&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GitHub Pages is &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/civicrm/free-as-in-cats/&quot;&gt;free as in cats&lt;/a&gt;. WordPress will usually cost at least a little in hosting, unless you do the free ad-supported WordPress.com instead, but that has other limitations.&lt;/p&gt;
&lt;h2 id=&quot;maintenance&quot; tabindex=&quot;-1&quot;&gt;Maintenance &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#maintenance&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With a WordPress self-hosted site you need to update WordPress, plugins, and server software like PHP on a regular basis or you&#39;ll have exposed security vulnerabilities. It&#39;s not hard most of the time - unless you hit a situation like your theme not working with secure versions of PHP - but it is something you need to remember.&lt;/p&gt;
&lt;p&gt;There&#39;s none of that with a Jekyll GitHub Pages site. Just don&#39;t delete your GitHub project. There is no PHP, no server maintenance, no juggling of a dozen contributed modules that may or may not be maintained.&lt;/p&gt;
&lt;h2 id=&quot;formatting&quot; tabindex=&quot;-1&quot;&gt;Formatting &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#formatting&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;WordPress offers a lot of built-in editing and formatting tools, well beyond the basics of HTML tags. It has a lot of little features that add up. A couple of my favourites include searching for other pages on your site to add links, which means you seldom end up with a bad link, and an image upload interface paired with resizing tools to always show at the right size.&lt;/p&gt;
&lt;p&gt;With Jekyll the sites are written in markdown. It&#39;s a bit faster if you know what you&#39;re doing but has a lesser set of design options, such as no columns. Depending on your editor, you may also need to memorize the markdown syntax for each format you want, without a WYSIWYG. It also doesn&#39;t have those other helpful checks like confirming that a link really does exist on the site before you publish it.&lt;/p&gt;
&lt;p&gt;So which is faster? Depends on the complexity of your posts. If you&#39;re mostly writing text with some headers, like this post, markdown can be pretty quick and easy on any device. But if you want columns, easy images, links to other pages on your site... WordPress may end up faster.&lt;/p&gt;
&lt;h2 id=&quot;more-features&quot; tabindex=&quot;-1&quot;&gt;More Features &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-10-WordPress-vs-Jekyll/#more-features&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;WordPress also includes other features like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Scheduling to publish at a certain time in the future - useful to optimize your release window for maximum engagement&lt;/li&gt;
&lt;li&gt;Post to your social media when it does publish&lt;/li&gt;
&lt;li&gt;Formulaically generate the permalink for the page, with options to define that formula&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Jekyll doesn&#39;t offer any of that. That does mean more overhead to do these things manually.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft 365: Email Suspected of Spam</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-12-Microsoft-365-Email-Suspected-of-Spam/"/>
		<updated>2022-05-13T01:35:47Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-12-Microsoft-365-Email-Suspected-of-Spam/</id>
		<content type="html">&lt;h2 id=&quot;what-s-the-error-message&quot; tabindex=&quot;-1&quot;&gt;What’s the error message &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-12-Microsoft-365-Email-Suspected-of-Spam/#what-s-the-error-message&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A scenario I encountered recently was a user getting this error message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your message couldn&#39;t be delivered because you weren&#39;t recognized as a valid sender. The most common reason for this is that your email address is suspected of sending spam and it&#39;s no longer allowed to send messages outside of your organization. Contact your email admin for assistance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This happened with every email they tried to send.&lt;/p&gt;
&lt;h2 id=&quot;why-it-happened&quot; tabindex=&quot;-1&quot;&gt;Why it happened &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-12-Microsoft-365-Email-Suspected-of-Spam/#why-it-happened&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;They were not actually sending spam in the truest sense of that word. But they were sending bulk emails out of Outlook like any other email, and possibly without some of the requirements we have in Canada for anti-spam legislation (e.g. there has to be a link to unsubcribe from any bulk mailing list). So, even if it wasn&#39;t truly spam, it had some of the characteristics of spam: sending a lot at once, with the same generic message, without the ability to unsubscribe. Microsoft&#39;s email service concluded that this was spam, probably because you got hacked, and thus shut down the account until an administrator could investigate.&lt;/p&gt;
&lt;p&gt;The valuable thing to remember here is that Microsoft 365 email mailboxes are not intended for bulk mail distribution. There are specific services like MailChimp that are designed to handle all those extra factors in a way that a standard email doesn&#39;t. They will send out in staggered time, with multiple servers. They&#39;ll have templates that ensure you aren&#39;t missing any legal requirements. So, don&#39;t use a standard email - Microsoft or otherwise - to send bulk mail. It will catch up to you eventually.&lt;/p&gt;
&lt;h2 id=&quot;how-to-fix-it&quot; tabindex=&quot;-1&quot;&gt;How to fix it &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-12-Microsoft-365-Email-Suspected-of-Spam/#how-to-fix-it&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After this error occurs, an administrator with the necessary permissions will have to unblock the user&#39;s account. Don&#39;t do this until you&#39;re confident that you&#39;ve dealt with the root issue, i.e. that the sender is not sending bulk email anymore.&lt;/p&gt;
&lt;p&gt;Once you&#39;re ready:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to [the restrictured users section in the security centre]:(https://security.microsoft.com/restrictedusers).&lt;/li&gt;
&lt;li&gt;Follow instructions available in &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/removing-user-from-restricted-users-portal-after-spam?view=o365-worldwide&quot;&gt;official Microsoft documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</content>
	</entry>
	
	<entry>
		<title>GitHub Pages: Mobile Authoring</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-15-Mobile-Authoring/"/>
		<updated>2022-05-16T02:47:58Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-15-Mobile-Authoring/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/github-pages/building-site/&quot;&gt;I’ve recently switched from hosting these tech posts on a WordPress site running on a shared host I pay a small fee for, over to GitHub Pages for free&lt;/a&gt;. It’s a great system and might be all you need if you’re a developer wanting to write and publish some content quickly.&lt;/p&gt;
&lt;p&gt;One thing I was worried about, though, is writing from my phone. My habit has often been that I write rough notes on my phone, then finalize it on a computer and hit publish. I didn’t want to lose that. So here’s what I did.&lt;/p&gt;
&lt;h2 id=&quot;mobile-app&quot; tabindex=&quot;-1&quot;&gt;Mobile App &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-15-Mobile-Authoring/#mobile-app&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First I needed an app on my Android phone to edit the Markdown files. I tried a few and settled on &lt;a href=&quot;https://play.google.com/store/apps/details?id=net.gsantner.markor&amp;amp;gl=US&quot;&gt;Markor&lt;/a&gt;. It can stay opened to an entire folder, can create files, edit files, delete files. You can write in markdown and preview what it looks like (without anything like CSS styling from the site, of course). It does have some modes that are unnecessary to me - to do and quick notes - and no way to turn them off in the interface.&lt;/p&gt;
&lt;p&gt;The runner up was &lt;a href=&quot;https://play.google.com/store/apps/details?id=co.easy4u.writer&amp;amp;gl=US&quot;&gt;WriterPlus&lt;/a&gt;. It was a cleaner interface. It&#39;s more of a pure distraction-free writing app. But it did not have syntax highlighting, WYSIWYG buttons, or a preview mode. Those aren&#39;t big losses for my purposes mostly of writing notes on the phone to be finalized on a computer, but I decided Markor was worth the trade.&lt;/p&gt;
&lt;h2 id=&quot;sync&quot; tabindex=&quot;-1&quot;&gt;Sync &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-15-Mobile-Authoring/#sync&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next problem is getting those markdown files to the GitHub repositories. One app, &lt;a href=&quot;https://play.google.com/store/apps/details?id=io.gitjournal.gitjournal&amp;amp;gl=US&quot;&gt;GitJournal&lt;/a&gt;, did promise to do this directly from the phone, although I did not go all the way through tests for that. But I wasn&#39;t looking for that. As I said in the intro, I usually like to write from my phone but then finalize it from a computer. So I was happy with a middle step of getting my notes to a computer and then using the computer to get it to GitHub.&lt;/p&gt;
&lt;p&gt;That brought me to &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.ttxapps.onesyncv2&amp;amp;gl=US&quot;&gt;the OneSync app&lt;/a&gt;. This lets me sync the folder of the whole project to my OneDrive. I can write on my phone and then pick up later on a computer or vice versa.&lt;/p&gt;
&lt;h2 id=&quot;commit-to-github&quot; tabindex=&quot;-1&quot;&gt;Commit to GitHub &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-05-15-Mobile-Authoring/#commit-to-github&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After that is straightforward. The files are on my computer in a project folder via OneDrive. Now I can open that folder in &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt;, finalize the changes, and commit to GitHub which will rebuild the site based on the latest files. Publishing only one article at a time is simple enough if you’re familiar with git: you can stage and commit that file while leaving others uncommitted as “drafts.” or I can keep drafts in a different folder, in which case they can be committed without publishing.&lt;/p&gt;
&lt;p&gt;I&#39;ve gone as far as having separate folders depending on the stage of what I&#39;m writing: there are ideas for new drafts, there are drafts where I have started but not finished the necessary demos and tests, there are drafts where everything is ready but not finished writing, and there are posts that can be published. All but posts go in the gitignore so they stay synced in my OneDrive but not in my GitHub.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Sync Content</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-05-26-Sync-Content/"/>
		<updated>2022-05-26T19:31:19Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-05-26-Sync-Content/</id>
		<content type="html">&lt;p&gt;I have &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/drupal-sync-configuration/&quot;&gt;previously covered syncing configuration across Drupal&lt;/a&gt;. But configuration is not everything in the database. The other half of the picture is the content: nodes, custom blocks, menu items, files, etc.&lt;/p&gt;
&lt;p&gt;There is &lt;a href=&quot;https://www.drupal.org/project/content_sync&quot;&gt;an extra module available called content_sync&lt;/a&gt;. Unfortunately, it is not a very reliable extra module, at least in my configuration. With that said, I will still share the main extra consideration to take into your plans.&lt;/p&gt;
&lt;p&gt;The caveat for this is that it gets a bit more complicated in most regular usage than configuration, because content changes can happen in both directions.&lt;/p&gt;
&lt;p&gt;Some changes will happen in the same direction as code changes and most configuration changes, especially in the early stages of the project before production is launched: first it gets changed on the local development system, then pushed through the stages to get to production.&lt;/p&gt;
&lt;p&gt;After a site is launched, often the changes in content are being made by regular users on the production site. Maybe in your context the only content editors are also the website administrators, in which case this isn’t a concern, but often you’ll need to navigate how to make sure you don’t get conflicts.&lt;/p&gt;
&lt;p&gt;In our case, in the early stage I did have content changes going the same direction as configuration:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add content on my local Docker container&lt;/li&gt;
&lt;li&gt;Export the content&lt;/li&gt;
&lt;li&gt;Push the content sync files through to GitLab, which continues the CI/CD processes to the next server&lt;/li&gt;
&lt;li&gt;The CI/CD imports the content on the next server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It started to break down around the same time that we let beta testers onto the dev server. I did warn the beta testers that this is a playground server to try things and try to find bugs, not a server to finalize content, with it in mind that I would likely be overriding content with my usual daily changes. But content_sync completely stopped working around the same time, so I made the call that I would stop using it instead.&lt;/p&gt;
&lt;p&gt;I am still loosely keeping an eye on that module&#39;s development. I would like to have it for the occasional manual sync requirements between servers.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal Docker: The Dockerfiles</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-06-23-The-Dockerfiles/"/>
		<updated>2022-06-24T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-06-23-The-Dockerfiles/</id>
		<content type="html">&lt;p&gt;This continues a mini-series describing how I set up a Drupal development environment using &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;Docker Desktop and the VS Code devcontainer functionality&lt;/a&gt;. The full code is available in &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post takes a look at the three Dockerfiles required:&lt;/p&gt;
&lt;h2 id=&quot;mariadb&quot; tabindex=&quot;-1&quot;&gt;MariaDB &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-23-The-Dockerfiles/#mariadb&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let’s do the simple one first: the MariaDB container for the database. This is using a general official MariaDB image and I’m not even being picky about version. This is the entire file:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Use the default MariaDB image, not a specific Oracle Linux one&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; mariadb:latest&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Expose the MySQL port to be accessible to the web container.&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;EXPOSE&lt;/span&gt; 3306&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;php&quot; tabindex=&quot;-1&quot;&gt;PHP &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-23-The-Dockerfiles/#php&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This image starts from Oracle Linux, a requirement of this particular hosting environment:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; oraclelinux:8&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;USER&lt;/span&gt; root&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SHELL&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&quot;-c&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It adds some other useful utilities, although they may not really be needed here since I won’t be accessing this container directly:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install other useful packages&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf install -y curl wget zip&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It creates a directory that is necessary for running PHP-FPM:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Create required directory&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; mkdir -p /run/php-fpm&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It installs PHP 8.0, which requires a different repository (at least so far):&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install PHP 8.0, which needs a different repository&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf -y module reset php&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf -y module enable php:remi-8.0&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf -y install php&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It adds several PHP extensions, including a few that are recommended by not required by Drupal (apcu and uploadprogress):&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install PHP extensions, including PECL with APCU and UploadProgress extensions, recommended by Drupal&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf install -y php-gd php-pdo php-zip php-mysqlnd gcc make php-devel php-pear php-pecl-apcu php-pecl-uploadprogress&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It installs XDebug, the PHP debugging tool:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install XDebug&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf install -y php-pecl-xdebug&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; touch /var/log/xdebug.log&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; /conf/xdebug.ini /etc/php.d/xdebug.ini&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It makes several changes to php.ini to increase performance:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Increase resources for PHP&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/max_execution_time = 30/max_execution_time = 300/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/max_input_time = 60/max_input_time = 600/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/memory_limit = 128M/memory_limit = 2048M/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/upload_max_filesize = 2M/upload_max_filesize = 128M/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/post_max_size = 8M/post_max_size = 0/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/display_errors = Off/display_errors = On/g&quot;&lt;/span&gt; /etc/php.ini&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; echo &lt;span class=&quot;token string&quot;&gt;&quot;# Increase timeout&quot;&lt;/span&gt; &gt;&gt; /etc/httpd/conf.d/php.conf&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; echo &lt;span class=&quot;token string&quot;&gt;&quot;Timeout 1200&quot;&lt;/span&gt; &gt;&gt; /etc/httpd/conf.d/php.conf&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; echo &lt;span class=&quot;token string&quot;&gt;&quot;ProxyTimeout 1200&quot;&lt;/span&gt; &gt;&gt; /etc/httpd/conf.d/php.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It updates the php-fpm configuration to allow listeners from other clients (the web container):&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Update PHP-FPM configuration including allowing listeners from other clients, defining the OPCache, and listening on port 9000&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/listen.allowed_clients = 127.0.0.1/;listen.allowed_clients = 127.0.0.1/g&quot;&lt;/span&gt; /etc/php-fpm.d/www.conf&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/;php_value[opcache.file_cache]  = &#92;/var&#92;/lib&#92;/php&#92;/opcache/php_value[opcache.file_cache]  = &#92;/var&#92;/lib&#92;/php&#92;/opcache/g&quot;&lt;/span&gt; /etc/php-fpm.d/www.conf&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/listen = &#92;/run&#92;/php-fpm&#92;/www.sock/listen = 9000/g&quot;&lt;/span&gt; /etc/php-fpm.d/www.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And finally, it starts php-fpm as the service running in the foreground for this container:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Start PHP-FPM&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;php-fpm&quot;&lt;/span&gt;]&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;CMD&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;-F&quot;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&quot;-R&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;apache&quot; tabindex=&quot;-1&quot;&gt;Apache &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-23-The-Dockerfiles/#apache&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The final container, web, is the main one that the devcontainer will connect to, running Apache as its main service. Much of this repeats the PHP container, so I won’t go through all that again. Here’s what’s different.&lt;/p&gt;
&lt;p&gt;It includes a few more useful packages:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install other needed packages&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf install -y curl wget git zip mod_ssl httpd php-gd openssl which mariadb sudo patch vim&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It configures Apache, including creating a self-signed SSL certificate for https browsing:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Apache configuration, including SSL certificates and logs&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; mkdir -p /etc/httpd/certs&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; /conf/openssl-config.txt /etc/httpd/certs/openssl-config.txt&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; openssl req -batch -newkey rsa:4096 -nodes -sha256 -keyout /etc/httpd/certs/local.drupal.com.key -x509 -days 3650 -out /etc/httpd/certs/local.drupal.com.crt -config /etc/httpd/certs/openssl-config.txt&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; openssl req -batch -newkey rsa:4096 -nodes -sha256 -keyout /etc/pki/tls/private/localhost.key -x509 -days 3650 -out /etc/pki/tls/certs/localhost.crt -config /etc/httpd/certs/openssl-config.txt&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; mkdir -p /var/log/local.drupal.com&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; /conf/local.drupal.com.conf /etc/httpd/conf.d/local.drupal.com.conf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It adds the drupal user and alters some other permissions so it can edit the web folder directly without sudo, and can sudo when necessary:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Add drupal user within the apache group&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; useradd drupal&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; usermod -aG apache drupal&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Change default permissions to 775 instead of 755, so that the drupal user can write to the web root&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; umask 0002&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Create sudo group, add drupal user to it, and allow those users to sudo without password&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; groupadd sudo&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; usermod -aG sudo drupal&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; sed -i &lt;span class=&quot;token string&quot;&gt;&quot;s/# %wheel	ALL=(ALL)	NOPASSWD: ALL/%sudo	ALL=(ALL)	NOPASSWD: ALL/g&quot;&lt;/span&gt; /etc/sudoers&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It installs composer, an essential for Drupal management:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install latest composer&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php -r &lt;span class=&quot;token string&quot;&gt;&quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php composer-setup.php --install-dir /usr/bin --filename composer&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; php -r &lt;span class=&quot;token string&quot;&gt;&quot;unlink(&#39;composer-setup.php&#39;);&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ENV&lt;/span&gt; COMPOSER_PROCESS_TIMEOUT=9999&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It installs pa11y for accessibility testing:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Install pa11y accessibility testing tool, including NodeJS&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; dnf install -y nodejs pango.x86_64 libXcomposite.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 nss libdrm libgbm xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc libxshmfence&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; npm install pa11y -g --unsafe-perm=true --allow-root&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It adds executable permissions to the postCreateCommand script which I will detail in a later post:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Scripts for further actions to take on creation and attachment&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; ./scripts/postCreateCommand.sh /postCreateCommand.sh&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;chmod&quot;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&quot;+x&quot;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&quot;/postCreateCommand.sh&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And finally, it runs Apache as its primary foreground process:&lt;/p&gt;
&lt;pre class=&quot;language-docker&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Start Apache&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;/usr/sbin/httpd&quot;&lt;/span&gt;]&lt;/span&gt;
&lt;span class=&quot;token instruction&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;CMD&lt;/span&gt; [&lt;span class=&quot;token string&quot;&gt;&quot;-D&quot;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&quot;FOREGROUND&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab DevOps: Local Workflows</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/"/>
		<updated>2022-06-27T01:54:15Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/</id>
		<content type="html">&lt;p&gt;This continues a series setting up a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;GitLab DevOps pipeline&lt;/a&gt; through local virtual machine / container, GitLab, a dev server, a staging server, and a production server. This post assumes you already have a local VM or container, whether that’s through vagrant, Docker Desktop, GitPod, or something else.&lt;/p&gt;
&lt;h2 id=&quot;branch-diagram&quot; tabindex=&quot;-1&quot;&gt;Branch diagram &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/#branch-diagram&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This diagram is meant to help explain the flow of code in this system. The development happens in your local branch. When you want to deploy to the dev server, request merging into the dev branch. When you want to deploy to the staging server, request merging into the main branch. There is a CI/CD job for deploying to production as well, but that’s a manual process – not automatic on a branch merge like the other two. The CI files for the deploying will be covered in a later post.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/01/Git-Deployment-Workflow.png&quot; alt=&quot;Diagrams the flow of branches. Your branch stays on your dev environment. Merge to dev to push to dev server. Merge to main to push to staging server.&quot; /&gt;
&lt;em&gt;Diagram of branches and servers&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-editing-and-browsing-workflow&quot; tabindex=&quot;-1&quot;&gt;The editing and browsing workflow &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/#the-editing-and-browsing-workflow&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My preferred editor is &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt;. Whether the VM/container is vagrant, &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/docker/&quot;&gt;Docker Desktop&lt;/a&gt;, or &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod/&quot;&gt;GitPod&lt;/a&gt;, you can use VS Code with it. The best experience is with Docker, then GitPod, and finally vagrant will work but similar to any other server, with no extra special functionality like adding extensions. You could of course also use a different editor / terminal.&lt;/p&gt;
&lt;p&gt;Along with being able to edit, this is a website, so it’s pretty important to test out what the website looks like with the current code and database. Exactly what that looks like will depend on whether you’re using a GitPod, a vagrant, or a Docker. I won’t detail all the Apache configuration needed here, since they’ll vary for each system.&lt;/p&gt;
&lt;p&gt;They are covered more in the posts about having a Drupal-friendly environment in each of the respective virtualization/containerization systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/vagrant-oracle-linux-vm/&quot;&gt;Vagrant VM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;GitPod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;Docker Desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;commit-to-gitlab&quot; tabindex=&quot;-1&quot;&gt;Commit to GitLab &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/#commit-to-gitlab&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this setup, we’ll have one branch of the GitLab repository for each user. That way each user will not interfere with any work done by other users on other VMs.&lt;/p&gt;
&lt;p&gt;To start a new branch and switch to it, I run this:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; checkout &lt;span class=&quot;token parameter variable&quot;&gt;-b&lt;/span&gt; ryan&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To add changes to and then commit to the ryan branch, I run this:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;file to add&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit &lt;span class=&quot;token parameter variable&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;[description of what changed]&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;merge-request&quot; tabindex=&quot;-1&quot;&gt;Merge request &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-06-26-Local-Workflows/#merge-request&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When I think it’s ready to be merged into the main branch, I go into the GitLab interface and put in a merge request from my ryan branch into whatever other branch I’m trying to merge it into (either dev or main in this scenario). There are a handful of good options available including who the merge is assigned to, who should do an extra code review first, and what project milestone it should be associated with.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/user/project/merge_requests/&quot;&gt;GitLab has good documentation on merge requests&lt;/a&gt;, so I will not detail them any further here.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal Docker: The First-Run Script</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-06-28-Drupal-Docker-Config-Script/"/>
		<updated>2022-06-29T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-06-28-Drupal-Docker-Config-Script/</id>
		<content type="html">&lt;p&gt;This continues a mini-series describing how I set up a Drupal development environment using &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;Docker Desktop and the VS Code devcontainer functionality&lt;/a&gt;. The full code is available in &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post will look at the configuration script that runs on the initial creation of the containers. It will handle the majority of the Drupal-specific functionality, roughly equivalent to &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/drupal-gitpod-container-2-gitpod-yml/&quot;&gt;the GitPod.yml file&lt;/a&gt; of &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod-drupal/&quot;&gt;the GitPod series&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a bash script that runs in the container once it is first built, so start by defining it as a bash script:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token shebang important&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enforce permissions on the SSH keys, needed for the git SSH connection to work:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-R&lt;/span&gt; drupal:drupal /home/drupal/.ssh
&lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-R&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;700&lt;/span&gt; ~/.ssh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Provide ownership of entire web root to drupal user:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-R&lt;/span&gt; drupal:apache /var/www/html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Move to codebase:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; /var/www/html/local.drupal.com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add local domain to hosts file (useful for tools like pa11y being able to browse the site):&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;127.0.0.1 local.drupal.com&quot;&lt;/span&gt; /etc/hosts&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;127.0.0.1 local.drupal.com&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; /etc/hosts
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create database and grant all privileges to drupal user. In this case I&#39;m putting it in the script explicitly because I want to share an out-of-the-box functional system. If you&#39;re going to do this with a real site, make sure you aren&#39;t using the same password on servers that anybody else can access, unlike Docker on your computer. Also it should be a stronger password than &amp;quot;root.&amp;quot;&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;mysql &lt;span class=&quot;token parameter variable&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;CREATE DATABASE IF NOT EXISTS drupal;&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;token parameter variable&quot;&gt;--password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;root&quot;&lt;/span&gt;
mysql &lt;span class=&quot;token parameter variable&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;GRANT ALL PRIVILEGES ON drupal.* TO &#39;drupal&#39;@&#39;%&#39;;&quot;&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;token parameter variable&quot;&gt;--password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install site&#39;s contributed code base from composer:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;composer&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add drush alias to PATH for easier use:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;alias drush=&lt;span class=&quot;token entity&quot; title=&quot;&#92;&amp;quot;&quot;&gt;&#92;&quot;&lt;/span&gt;/var/www/html/local.drupal.com/vendor/drush/drush/drush&lt;span class=&quot;token entity&quot; title=&quot;&#92;&amp;quot;&quot;&gt;&#92;&quot;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy the Drupal configuration files:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-f&lt;/span&gt; ./.devcontainer/conf/drupal.settings.php &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; .devcontainer/conf/drupal.settings.php web/sites/default/settings.php
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-f&lt;/span&gt; ./.devcontainer/conf/local.services.yml &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cp&lt;/span&gt; .devcontainer/conf/local.services.yml web/sites/local.services.yml
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; private &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; private
  &lt;span class=&quot;token function&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;755&lt;/span&gt; private
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-d&lt;/span&gt; sync/config &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-p&lt;/span&gt; sync/config
&lt;span class=&quot;token keyword&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Import the existing configuration. Note that there is a drush command to build a new site from the existing configuration, but it did not work reliably in this context.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush site-install &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; minimal
vendor/drush/drush/drush cset &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; system.site uuid &lt;span class=&quot;token string&quot;&gt;&quot;3d9878de-3355-4510-af4d-575deb24055f&quot;&lt;/span&gt;
vendor/drush/drush/drush config-import &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Flush generated images, which helps if configuration changes since last time including changes to the media formats. This isn&#39;t really necessary when you aren&#39;t also using &lt;a href=&quot;https://drupal.org/project/content_sync&quot;&gt;the content_sync module&lt;/a&gt;, which I no longer am in this demo, since without that there are no images to regenerate. But I kept the image flush anyway to demonstrate how that works.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush image-flush &lt;span class=&quot;token parameter variable&quot;&gt;--all&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sets admin password. The same note applies as with the MySQL passwords above.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush user:password admin &lt;span class=&quot;token string&quot;&gt;&quot;ZNB*ufm1tyz4rwc@yzk&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Rebuild the node access caches. This isn&#39;t a huge issue, but does save clearing a warning that appears in Drupal.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush php-eval &lt;span class=&quot;token string&quot;&gt;&#39;node_access_rebuild();&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Set the &lt;a href=&quot;https://www.drupal.org/project/environment_indicator&quot;&gt;environment indicator&lt;/a&gt;. This is a Drupal module that shows the site toolbar and favicon with different colours. It&#39;s very helpful to visually cue your brain when you&#39;re in Docker vs dev vs staging vs production. For this to work, you&#39;ll have to include the environment indicator module in your composer.json file.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush cset &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; environment_indicator.indicator name &lt;span class=&quot;token string&quot;&gt;&quot;Local Docker&quot;&lt;/span&gt;
vendor/drush/drush/drush cset &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; environment_indicator.indicator fg_color &lt;span class=&quot;token string&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;
vendor/drush/drush/drush cset &lt;span class=&quot;token parameter variable&quot;&gt;-y&lt;/span&gt; environment_indicator.indicator bg_color &lt;span class=&quot;token string&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the all-important clearing of the caches:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;vendor/drush/drush/drush cr&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Local Development: Vagrant, Docker Desktop, and GitPod</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/"/>
		<updated>2022-07-03T01:43:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/</id>
		<content type="html">&lt;p&gt;I&#39;ve now broken down some of what I&#39;ve learned about different virtualization/containerization options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/tags/vagrant&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/tags/docker/&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitpod/&quot;&gt;GitPod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also learned that each of these options have some pro&#39;s and con&#39;s attached to consider.&lt;/p&gt;
&lt;h2 id=&quot;vagrant-pro-s&quot; tabindex=&quot;-1&quot;&gt;Vagrant Pro&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#vagrant-pro-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vagrant is likely to be the most intuitive to develop since it maps the closest to building a server (other than building a server), if you are used to building servers. It&#39;s not a whole new syntax and way of thinking to learn.&lt;/p&gt;
&lt;h2 id=&quot;vagrant-con-s&quot; tabindex=&quot;-1&quot;&gt;Vagrant Con&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#vagrant-con-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is very slow to build the VM, when it works at all. Fully building the VM and starting the Drupal 9 website I was using this for could take 6-8 hours.&lt;/p&gt;
&lt;p&gt;It continues to be very slow in usage afterward: browsing the site, running composer updates from the terminal, etc.&lt;/p&gt;
&lt;p&gt;It can be very buggy, with issues like arbitrarily changing permissions on a file so that you can no longer delete them from your computer even with admin access. I&#39;ve got files on my computer that as far as I can tell there is no way to delete. Eventually it stopped working for me entirely.&lt;/p&gt;
&lt;p&gt;There are no extra tools for integration with &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/visual-studio-code/&quot;&gt;Visual Studio Code&lt;/a&gt;, although you can ssh to a vagrant VM the same way you can to any other server.&lt;/p&gt;
&lt;h2 id=&quot;docker-desktop-pro-s&quot; tabindex=&quot;-1&quot;&gt;Docker Desktop Pro&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#docker-desktop-pro-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Compared to Vagrant, Docker is much faster to build the image, at about 1-2 hours for the same Drupal 9 site.&lt;/p&gt;
&lt;p&gt;It has great integration with Visual Studio Code via the .devcontainer functionality, including installation of any extensions and pre-defining settings for all users. I have detailed much of my setup here in &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;my Drupal Docker series&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has a strong community to draw on for support and for images. It&#39;s the most popular option now and that means you&#39;ll be able to find what you need more easily than for other options.&lt;/p&gt;
&lt;h2 id=&quot;docker-desktop-con-s&quot; tabindex=&quot;-1&quot;&gt;Docker Desktop Con&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#docker-desktop-con-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is less intuitive to develop the images if you haven&#39;t used Docker before. Learning the new syntaxes (Dockerfile, Docker compose) is straightforward, but there is a shift in thinking to containers.&lt;/p&gt;
&lt;p&gt;It is for the most part about as slow as vagrant to operate after the site is built, although you can improve that a bit by editing your wslconfig file to allot more RAM.&lt;/p&gt;
&lt;h2 id=&quot;gitpod-pro-s&quot; tabindex=&quot;-1&quot;&gt;GitPod Pro&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#gitpod-pro-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GitPod is much faster, both to build and to use afterward, although the build time does sometimes vary wildly and stall out. Even the odd slow time is at least as fast as Docker, but the inconsistency can be disruptive. It&#39;s possible that this is not a serious problem and it only happens in my stress test scenarios like constantly building new containers.&lt;/p&gt;
&lt;p&gt;The pre-build functionality allows for the build to happen before you actually need it.&lt;/p&gt;
&lt;p&gt;It does facilitate keeping everybody on the same code base since it builds directly from the GitLab repository each time. There&#39;s little concern about getting a commit behind.&lt;/p&gt;
&lt;p&gt;The Git integration is the strongest. Since it is already tied to your GitLab/GitHub/Bitbucket account, the push and pull does not require extra configuration like syncing an SSH key file and entering a passphrase each time.&lt;/p&gt;
&lt;p&gt;It allows for defining what to do when each port opens, e.g. open in the browser when Apache starts up so you can browse the site. This is a small time saver.&lt;/p&gt;
&lt;p&gt;It does not tie up your computer&#39;s resources and does not require at least 32GB of RAM like the locally-hosted options do.&lt;/p&gt;
&lt;p&gt;It does not need your computer to support virtual machines / containers (i.e. Windows 10/11 Pro).&lt;/p&gt;
&lt;h2 id=&quot;gitpod-con-s&quot; tabindex=&quot;-1&quot;&gt;GitPod Con&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#gitpod-con-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It&#39;s great when you&#39;re using a Debian-based image, but does not support other Linux variants or multiple containers.&lt;/p&gt;
&lt;p&gt;Data for their SaaS offering is held in the US and EU. Those are the only data residency options. Canada where I am is not an option. If you&#39;re concerned about data staying in your country and you&#39;re not in the US or EU, this is a problem. Otherwise, they do offer self-hosting on Azure/AWS/Google Cloud where you can control where it gets stored, but if you&#39;re going that far, is it that much better than other options?&lt;/p&gt;
&lt;p&gt;It does not automatically open VS Code Desktop. It will open in the browser that looks exactly like VS Code, then you can prompt it to open VS Code desktop, which will take clearing a couple other permission prompts. This isn&#39;t a big deal if you&#39;re opening VS Code once per day, but if you&#39;re in and out for a lot of quick changes, that does add up.&lt;/p&gt;
&lt;p&gt;In my context, it also cannot open VS Code at all if I was on my work network, leaving me to only edit in the browser. It did work early on, and maybe it will work again. I also have no idea to what degree this is on GitPod&#39;s end vs our end, so I don&#39;t say this as much to negatively review GitPod as to say it is another factor to consider.&lt;/p&gt;
&lt;p&gt;It does not support all Visual Studio Code extensions - only those which are in the Open VSX directory - which means a few absences like &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/github-copilot/&quot;&gt;GitHub Copilot&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;local-server-pro-s&quot; tabindex=&quot;-1&quot;&gt;Local Server Pro&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#local-server-pro-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You could sidestep all of these questions about local development options and build your own servers.&lt;/p&gt;
&lt;p&gt;This makes it easiest to guarantee a match with your production servers.&lt;/p&gt;
&lt;p&gt;There shouldn&#39;t be any performance issues or use up any of your computer&#39;s resources.&lt;/p&gt;
&lt;h2 id=&quot;local-server-con-s&quot; tabindex=&quot;-1&quot;&gt;Local Server Con&#39;s &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#local-server-con-s&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This approach doesn&#39;t scale very well if you work on a team or on multiple projects. You would need at least one virtual server per person per project. All of that scale is being paid for while not being used most of the time.&lt;/p&gt;
&lt;p&gt;Depending on your organization structures, you may need to work across different departments to maintain the servers.&lt;/p&gt;
&lt;p&gt;There are no extra tools for integration with Visual Studio Code, although you can ssh to it the same way you can to any other server.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-02-Local-Development-Options/#summary&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In my day job context, we settled on using Docker Desktop. It&#39;s not as fast as GitPod, but it&#39;s close enough and it was worth the trade to be able to build containers exactly as we want and with no data residency concerns because nothing leaves our devices.&lt;/p&gt;
&lt;p&gt;In my experimental and demo stuff that often gets profiled here, I&#39;m often using GitPod. It&#39;s fast, I can run it from any device, and it&#39;s great for demonstration purposes since I can set it up so that anybody can have a site running my code within a couple minutes.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Override Title Tag of Profiles</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-07-10-Profile-Title-Override/"/>
		<updated>2022-07-11T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-07-10-Profile-Title-Override/</id>
		<content type="html">&lt;p&gt;The profile module is a nice tool to have on a Drupal site if you&#39;re looking to create public-facing profiles about your users (e.g. staff). But it has a few weak spots including being unable to change the URL alias - it can only be /profile/id - or the page&#39;s title which shows up as [Profile Name] #[id], e.g. &amp;quot;Staff Profile #1&amp;quot;. That&#39;s not very helpful. There are two places that the profile title needs to be overridden: what appears in the main body of the page and the title tag for the page which you&#39;ll see in your browser address bar. In my case I wanted to show the first name and last name instead, so I started by creating those fields on the profile as standard text fields.&lt;/p&gt;
&lt;p&gt;With the fields in place, this post, and &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-profile-title-override&quot;&gt;accompanying GitHub code and configuration&lt;/a&gt;, is how I worked around those issues.&lt;/p&gt;
&lt;h2 id=&quot;the-url-alias&quot; tabindex=&quot;-1&quot;&gt;The URL Alias &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-10-Profile-Title-Override/#the-url-alias&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Like other nodes, the URL can be changed using &lt;a href=&quot;https://drupal.org/project/pathauto&quot;&gt;the pathauto module&lt;/a&gt; to generate based on a pattern. Note that this takes a change in the pathauto configuration, which might not be obvious if like me you did the initial round of pathauto configuration long before adding profiles.&lt;/p&gt;
&lt;p&gt;Here&#39;s a screenshot of the settings page, which can be found at /admin/config/search/path/settings:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/07/Pathauto_entities.png&quot; alt=&quot;Screenshot of entities settings screen with options to select Custom Block, Media, Custom Menu Link, Content, Profile, Taxonomy Term, and User&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Once the ability to set paths for profiles is turned on, you can switch over to the Patterns tab and create the pattern. I made mine &lt;code&gt;/staff/[profile:field_first_name]-[profile:field_last_name]&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;the-page-title&quot; tabindex=&quot;-1&quot;&gt;The Page Title &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-10-Profile-Title-Override/#the-page-title&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I fixed the page title displayed within the body with a view. I also altered the display of a profile to not show the default title and not show the first name and last name otherwise.&lt;/p&gt;
&lt;p&gt;I won&#39;t break down every setting, but here&#39;s a screenshot of the view configuration:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/07/Profile_Title_View.PNG&quot; alt=&quot;Screenshot of the view configuration including the fields First Name, Last Name, and Custom Text combining them&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You can also see this in configuration YML form in the GitHub project&#39;s /sync/config/views.view.profile.yml file. Once the view is ready, add the block to the correct place in your theme, and turn off the standard Page Title block for those pages (based on the URL).&lt;/p&gt;
&lt;h2 id=&quot;the-browser-title&quot; tabindex=&quot;-1&quot;&gt;The Browser Title &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-07-10-Profile-Title-Override/#the-browser-title&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The second one required a custom module, albeit a relatively simple one. This is the key part:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Implements hook_preprocess_html
 * 
 * Overrides the &quot;Public Profile #[ID]&quot; title with the first name and last name of the profiled staff member instead
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;profile_title_preprocess_html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;head_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string double-quoted-string&quot;&gt;&quot;Staff Profile&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token constant boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//Get the ID from the original title to be replaced&lt;/span&gt;
    &lt;span class=&quot;token variable&quot;&gt;$profile_id&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;head_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stripos&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;head_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string double-quoted-string&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$profile_id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;//Load the profile&lt;/span&gt;
      &lt;span class=&quot;token variable&quot;&gt;$profile&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;entityTypeManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStorage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;profile&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$profile_id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$profile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token variable&quot;&gt;$first_name&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$profile&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_first_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token variable&quot;&gt;$last_name&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$profile&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_last_name&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$first_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$last_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;//Change the title to first name and last name&lt;/span&gt;
          &lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;head_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string double-quoted-string&quot;&gt;&quot;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$first_name&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$last_name&lt;/span&gt;&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: with PHP 8+ I used str_starts_with instead of stripos, but this works just as well for this purpose.&lt;/p&gt;
&lt;p&gt;Along with overriding the title, it also provides a warning to users. Because it is relying on overriding only when the current title follows a certain pattern, it is a little bit fragile in that changing the display title of the profile will result in the code no longer being activated. It won&#39;t break the site or anything, but will return to showing the default unhelpful title.&lt;/p&gt;
&lt;p&gt;Here&#39;s that code. It&#39;s fairly simple, firing on the hook for a profile edit form and then displaying a standard warning.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Implements hook_form_FORM_ID_alter
 * 
 * Adds a warning to the admin page for the profile, to advise against changing the title
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;profile_title_form_profile_type_edit_form_alter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name class-name-fully-qualified type-declaration&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Form&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;FormStateInterface&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$form_state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$form_id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$message&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
              &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;#type&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;container&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;#markup&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;&amp;lt;p&gt;Warning: Do not change the display label of the staff public profile without altering the corresponding code in the custom module profile_title.&amp;lt;/p&gt;
              &amp;lt;p&gt;Failing to do so will result in the title of the profile page reverting back to showing the generic profile name instead of the staff member name.&amp;lt;/p&gt;
              &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;messenger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addWarning&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Hide Block on Own Profile</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-03-28-drupal-profile-block-hidden-own/"/>
		<updated>2022-07-12T20:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-03-28-drupal-profile-block-hidden-own/</id>
		<content type="html">&lt;p&gt;Recently I was building a Drupal 9 site that included staff profiles as well as contact forms for those staff members. I wanted to add a block on the profile pages that included a button to link to the contact form for this contact.&lt;/p&gt;
&lt;p&gt;Here&#39;s the wrinkle in the default behaviour: it won&#39;t give you a contact link when you&#39;re viewing your own content, but it also isn&#39;t returning as nothing at all, so the title for the block appeared with nothing beneath it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/07/Empty_Email_Sidebar.png&quot; alt=&quot;Screenshot of empty box only saying the title &amp;quot;Email&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The key to solve this is the &amp;quot;exclude&amp;quot; option on contextual filters. There&#39;s one contextual filter for the user ID associated to the profile that you&#39;re viewing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/07/View_Contextual_Filter_Only_Matching_User.png&quot; alt=&quot;Screenshot of the configuration page. Details below&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To add this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a contextual filter searching for the User ID&lt;/li&gt;
&lt;li&gt;Set the default value to &amp;quot;User ID from profile route match&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I needed another contextual filter for the user ID of the currently logged in user, and mark that one as excluded.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/07/View_Contextual_Filter_Exclude_Current_User.png&quot; alt=&quot;Screenshot of the configuraton page. Details below.&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To add this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a contextual filter searching for the User ID&lt;/li&gt;
&lt;li&gt;Set the default value to &amp;quot;User ID from logged in user&amp;quot;&lt;/li&gt;
&lt;li&gt;Under the &amp;quot;more&amp;quot; section, check the &amp;quot;exclude&amp;quot; option&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, change the option on the view in the Advanced -&amp;gt; Other section for &amp;quot;Hide block if the view output is empty&amp;quot; to Yes. This will turn off the block entirely when there is no results, such as if you&#39;re viewing your own profile when that contextual filter is in place.&lt;/p&gt;
&lt;p&gt;That did the trick! The block will now appear on any profile where the associated contact has a personal contact form, unless you&#39;re viewing your own profile.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: CSS Structure</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-09-19-Drupal-CSS-Structures/"/>
		<updated>2022-09-19T21:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-09-19-Drupal-CSS-Structures/</id>
		<content type="html">&lt;p&gt;Specificity rules for CSS priority in Drupal are determined on two axes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Active custom subthemes take priority over their parent theme.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.drupal.org/docs/develop/standards/css/css-file-organization-for-drupal-9&quot;&gt;Stylesheets are split into priority groups as described here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Most of the times the descriptions for each category will hold accurate. However, you may encounter, for example, that a parent theme or a module put something in &amp;quot;theme&amp;quot; when it really is better categorized as a &amp;quot;component.&amp;quot; In the scenario that you need to override that style, you&#39;ll have to also put yours at the &amp;quot;theme&amp;quot; level or it will not take priority.&lt;/p&gt;
&lt;p&gt;The end result may be something like this in the theme&#39;s *.libraries.yml file:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;global-styling&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1.x
  &lt;span class=&quot;token key atrule&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;js/navigation.js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;js/search.js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/base/elements.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/base/variables.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/layout/containers.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/layout/footer.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/layout/header.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/layout/sidebar.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/buttons.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/details.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/field.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/forms.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/images.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/lists.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/tables.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/tabs.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/components/views.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/theme/admin.toolbar.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;css/theme/search-results.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;//use.fontawesome.com/releases/v6.1.2/css/all.css&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; external &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that theme in this example also includes an imported stylesheet from elsewhere, in this case fontawesome for the social media icons. This works great, but you may want to remember to periodically updated for new versions.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Microsoft Word: Inclusive Writing Options</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-09-19-Word-Inclusive-Writing/"/>
		<updated>2022-09-19T21:12:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-09-19-Word-Inclusive-Writing/</id>
		<content type="html">&lt;p&gt;I recently learned that Word has a lot of options for what kinds of prompts the spelling and grammar check will give you. One category of these options is inclusivity, helping you write in a way that better includes everyone. Many of these also conveniently double as being more concise, e.g. &amp;quot;child&amp;quot; instead of &amp;quot;boy or girl&amp;quot; or &amp;quot;spouse&amp;quot; instead of &amp;quot;husband or wife.&amp;quot;&lt;/p&gt;
&lt;p&gt;To turn these on (using the latest Windows version of Word):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &amp;quot;File&amp;quot; from the main menu&lt;/li&gt;
&lt;li&gt;Click on &amp;quot;Options&amp;quot; at the bottom&lt;/li&gt;
&lt;li&gt;Click on the &amp;quot;Proofing&amp;quot; tab&lt;/li&gt;
&lt;li&gt;Under &amp;quot;When correcting spelling and grammar in Word,&amp;quot; select the &amp;quot;Settings&amp;quot; button beside &amp;quot;Writing Style&amp;quot;&lt;/li&gt;
&lt;li&gt;This will open a pane with a long list of options, including the inclusive writing tools. Check the box beside each option you want to turn on and apply your choices.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2022/09/word-inclusive-language.png&quot; alt=&quot;&amp;quot;Screenshot of the inclusive writing options&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The option categories are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Age bias&lt;/li&gt;
&lt;li&gt;Cultural bias&lt;/li&gt;
&lt;li&gt;Ethnic slurs&lt;/li&gt;
&lt;li&gt;Gender bias&lt;/li&gt;
&lt;li&gt;Gender-neutral pronouns&lt;/li&gt;
&lt;li&gt;Gender-specific language&lt;/li&gt;
&lt;li&gt;Racial bias&lt;/li&gt;
&lt;li&gt;Sexual orientation bias&lt;/li&gt;
&lt;li&gt;Socioeconomic bias&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to be more inclusive in your writing, this is a helpful tool to turn on and have in your toolbox.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Security Audit</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/"/>
		<updated>2022-09-19T23:19:19Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/</id>
		<content type="html">&lt;p&gt;About a year ago, I (virtually) attended &lt;a href=&quot;https://www.drupalgovcon.org/&quot;&gt;the DrupalGovCon 2021 conference&lt;/a&gt;. The highlight for me was the session on improving security of your Drupal website. I’ve embedded the video below and summarized some of the major points.&lt;/p&gt;
&lt;figure class=&quot;wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio&quot;&gt;&lt;div class=&quot;wp-block-embed__wrapper&quot;&gt;&lt;div class=&quot;nv-iframe-embed&quot;&gt;&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;337&quot; loading=&quot;lazy&quot; src=&quot;https://www.youtube.com/embed/ghoFlwrC3SM?list=PLsGrHy_lmfhT5cl0P_I737mo6952uIkt6&quot; title=&quot;Tips for Securing Your Drupal Application&quot; width=&quot;600&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption&gt;DrupalGovCon video: Tips for Securing Your Drupal Application&lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&quot;security-modules&quot; tabindex=&quot;-1&quot;&gt;Security Modules &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/#security-modules&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Review settings of security modules including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] jsonapi_extras&lt;/li&gt;
&lt;li&gt;[ ] flood_control&lt;/li&gt;
&lt;li&gt;[ ] login_security&lt;/li&gt;
&lt;li&gt;[ ] username_enumeration_prevention&lt;/li&gt;
&lt;li&gt;[ ] honeypot&lt;/li&gt;
&lt;li&gt;[ ] reCAPTCHA&lt;/li&gt;
&lt;li&gt;[ ] seckit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dev-modules&quot; tabindex=&quot;-1&quot;&gt;Dev Modules &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/#dev-modules&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ensure none of your development modules are on production:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;field_ui&lt;/li&gt;
&lt;li&gt;views_ui&lt;/li&gt;
&lt;li&gt;devel&lt;/li&gt;
&lt;li&gt;anything migration related&lt;/li&gt;
&lt;li&gt;stage_file_proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don&#39;t have a perfect solution in place for this yet. I did try the config_split module for a time, allowing me to have separation with some development-related modules on our local development containers but not on production. Unfortunately it was becoming buggy.&lt;/p&gt;
&lt;h2 id=&quot;config-cleanup&quot; tabindex=&quot;-1&quot;&gt;Config Cleanup &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/#config-cleanup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Remove unused views&lt;/li&gt;
&lt;li&gt;[ ] Check that there is correct access control on all views&lt;/li&gt;
&lt;li&gt;[ ] Review permission roles, especially anonymous and authenticated&lt;/li&gt;
&lt;li&gt;[ ] Confirm that user registration is limited to admins&lt;/li&gt;
&lt;li&gt;[ ] Confirm that there are no test user accounts in production&lt;/li&gt;
&lt;li&gt;[ ] Confirm that file size upload limits are reasonable&lt;/li&gt;
&lt;li&gt;[ ] Confirm that private and public file directories are used properly&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;custom-modules-and-themes&quot; tabindex=&quot;-1&quot;&gt;Custom Modules and Themes &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/#custom-modules-and-themes&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Grep for any standard debugging phrases like var_dump which may still be left in your custom code&lt;/li&gt;
&lt;li&gt;[ ] Check code in an editor like VS Code that warns you of unsanitary code&lt;/li&gt;
&lt;li&gt;[ ] Look for any cases where you missed using the t function to make text translatable. Even if your site is entirely in one language, it&#39;s still good practice.&lt;/li&gt;
&lt;li&gt;[ ] Review any TODO / FIXME etc in the code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;users&quot; tabindex=&quot;-1&quot;&gt;Users &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-09-19-Security-Audit/#users&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] Review users. Anybody, e.g. former staff, still have active accounts that they shouldn&#39;t? Does anybody have more permissions than they need?&lt;/li&gt;
&lt;li&gt;[ ] Confirm that the superuser account is blocked and that nobody else has the superuser role in production.&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Twitter, Mastodon, and CounterSocial</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/"/>
		<updated>2022-11-21T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/</id>
		<content type="html">&lt;p&gt;If you&#39;re on this site, you&#39;re probably aware enough of the chaos around Twitter. I started to write a post about &lt;strong&gt;why&lt;/strong&gt; I was leaving Twitter, narrowing in on the various terrible management practices (printing off code, firing based on lines committed, losing entire security teams, etc.) at the time when everybody was focussed on the verification disaster. Then all the stuff I was worried about completely exploded so now everybody is well aware of that, too, and it is likely a matter of days to weeks before Twitter completely fails. So there didn&#39;t seem to be much point there.&lt;/p&gt;
&lt;p&gt;I also started a post about &lt;strong&gt;how&lt;/strong&gt; I left Twitter. I was going to detail how I repeatedly notified everybody there while I started moving more and more to using Mastodon and CounterSocial instead. Then after the latest round of Twitter employees being fired, I realized about 7% of my Twitter follows were already on Mastodon. I&#39;m not sure that many people really need to hear about how I migrated as if that was unusual.&lt;/p&gt;
&lt;p&gt;So, how about this post idea instead: a quick rundown of Mastodon and CounterSocial and how they compare to Twitter. For the most part, Mastodon and CounterSocial line up with each other, as CounterSocial forked off of Mastodon in the past over some licensing disagreements (I have no interest in picking a side), but there are a couple big differences.&lt;/p&gt;
&lt;h2 id=&quot;the-algorithm&quot; tabindex=&quot;-1&quot;&gt;The Algorithm &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#the-algorithm&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest difference from Twitter to the others is that Twitter relies heavily on the algorithm to determine what gets on your feed. Their business model - like all the other major social networks - is based on selling as many of the most targeted ads as possible. You are the product and advertisers are the customers. To do that, they have to collect as much data about you as possible. To do that, they need to keep you engaged as much as possible. To do that, they develop algorithms to target content to you, regardless of whether you actually chose to see that content, so that you can never be &amp;quot;caught up&amp;quot; and return to your normal life without fear of missing out.&lt;/p&gt;
&lt;p&gt;Much has been said about the dangers of these kinds of algorithms. They prey on some of our worst impulses, feeding us things that make us angry. Many right-wing personalities have caught on to this, realizing they can make a big following by gaming the algorithm: they say something that gets people mad, everybody shares it either in support or to dunk on it, and all of that adds up to exponential growth in their audience as the algorithm boosts it even more. The end result is more hate speech, more anger, and more polarization.&lt;/p&gt;
&lt;p&gt;They also need to collect massive amounts of data in order to categorize us effectively for advertisers. While Twitter had a pretty good security record, this does open up the potential for huge data leaks. I don&#39;t expect that pretty good record to last much longer, which is why I&#39;m inclined to delete my Twitter instead of merely deactivating or stopping use of it.&lt;/p&gt;
&lt;p&gt;There certainly are some positives as well. They are designed to give you what you will respond to, so sometimes that&#39;s really good, with it helping surface people you want to follow who may not be big enough to trend in general but is exactly the kind of person you want to know about (especially when dealing with marginalized groups), or making you aware of breaking news very quickly.&lt;/p&gt;
&lt;p&gt;There&#39;s also the simple reality that many people are happy with this trade, giving up loads of data rather than needing to pay for a service. It lowers the barrier to entry.&lt;/p&gt;
&lt;p&gt;Mastodon and CounterSocial do not use an algorithm. You see what you chose to see. You can follow accounts and hashtags and those can boost (retweet) from other accounts into your home timeline. You can also check in on your local timeline (both Mastodon and CounterSocial) or global federated timeline (Mastodon only, since CounterSocial does not federate with anybody else). But you&#39;ll never get recommendations decided by a mysterious machine learning algorithm. The speed of discovery is limited to human speed, not machine speed.&lt;/p&gt;
&lt;h2 id=&quot;verification&quot; tabindex=&quot;-1&quot;&gt;Verification &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#verification&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Verification - at least before the recent changes - was the largest advantage Twitter had over Mastodon and CounterSocial. Trust is important in an information ecosystem to know that people are who they say they are.&lt;/p&gt;
&lt;p&gt;Mastodon and CounterSocial do have a form of verification, but it&#39;s a verification of links, not of identity. It is a system that allows you to set up a link on your website to Mastodon/CoSo, which confirms that the website owner and the account owner are the same person. It does not necessarily confirm that the account is who they say they are. Somebody could impersonate me by setting up a fake website to go alongside the fake account. That it is a lot more work, so it might happen in targeted ways of public figures, but it won&#39;t happen as much in casual mass bot attacks. It also doesn&#39;t give a &amp;quot;blue check&amp;quot; equivalent, so it isn&#39;t obvious at a glance whether somebody is who they say they are. As more public figures and journalists move to Mastodon and to a lesser extent CounterSocial, this will be really interesting to watch whether they need to come up with some kind of system, and in the case of Mastodon, whether that would even be possible in a decentralized system.&lt;/p&gt;
&lt;h2 id=&quot;servers-and-onboarding&quot; tabindex=&quot;-1&quot;&gt;Servers and Onboarding &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#servers-and-onboarding&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s where CounterSocial aligns with Twitter instead of Mastodon. For each of those, you sign up and you&#39;re in. It&#39;s pretty straightforward, not much different than any other website.&lt;/p&gt;
&lt;p&gt;Mastodon gets more complicated. It&#39;s a protocol of federated servers called instances, not a &amp;quot;platform.&amp;quot; This means upfront that you have a question to figure out: what instance should I join?&lt;/p&gt;
&lt;p&gt;Veterans will think this is no big deal, but if you&#39;ve never dealt with something like this before, staring down hundreds of servers is not an obvious choice. There isn&#39;t much in the way of advice for how to decide, or tools to filter a list. Do you care about the data residency of the server? Do you care about how the admins make decisions? Do you care about what rules it has, or what other instances it has blocked? Do you want general topic or a specific interest or identity group?&lt;/p&gt;
&lt;p&gt;I landed on the largest Canadian server, mstdn.ca, but only after trying four others over four days. A couple were tech specific. A couple were big general ones. Once I found this one, I was happy for Canadian data residency, general topics, an admin who has so far done pretty well keeping up with the demand, and reasonable rules.&lt;/p&gt;
&lt;p&gt;If you pick a bad server, you may end up with some problems. Maybe that server doesn&#39;t moderate well and there&#39;s hate speech (or spam, or porn). This means you get a lot of hate speech in your local feed, but it also means other instances might block your instance so that the hate speech doesn&#39;t spread. That leaves you isolated to your server, completely losing out on the advantages of the whole federated concept.&lt;/p&gt;
&lt;p&gt;You could end up spending a couple hours getting set up only to have a miserable experience on a bad server and conclude Mastodon is horrible, when really that one server was horrible. In my opinion it&#39;s worth it in the long run, but it&#39;s a bit of a mess to sort out.&lt;/p&gt;
&lt;h2 id=&quot;user-interface&quot; tabindex=&quot;-1&quot;&gt;User Interface &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#user-interface&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Twitter has polished their interface over the years. There may be things you don&#39;t like, but they know what they&#39;re doing.&lt;/p&gt;
&lt;p&gt;Mastodon depends wildly on which app you use. I&#39;m on Tusky on Android, which is pretty good but does have some weird holes like searching for users on other instances without entering the whole instance address. But it is attractive, easy to use, and has a good range of options.&lt;/p&gt;
&lt;p&gt;CounterSocial is the definite loser here. It isn&#39;t hard to use but it doesn&#39;t fit the Android design language at all, it only has a pseudo dark mode - no light mode and no true dark mode - and is weirdly small on the screen.&lt;/p&gt;
&lt;h2 id=&quot;features&quot; tabindex=&quot;-1&quot;&gt;Features &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#features&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A couple significant features are not in Mastodon or CounterSocial that you might have gotten used to on Twitter.&lt;/p&gt;
&lt;p&gt;There is no quote tweet. This is intentional as it is a feature that is most often used for piling on harassment. But there are lots of positive uses for it as well, so the loss will be felt by many. I used it a lot to comment on a news story as I spread it onto my feed.&lt;/p&gt;
&lt;p&gt;Search on Twitter indexes everything, all the text of every tweet. Mastodon and CounterSocial do not. They only index profiles, hashtags, and posts that you have already interacted with. This is intentional as it gives those posting some control: if you want it to be searchable, add the hashtags you want it to be searchable by, but if you want to be able to keep it a little more private, you can. This limits harassment of mass searching for text and attacking anybody you find.&lt;/p&gt;
&lt;p&gt;There are no circles, although if you were intense enough you could replicate a less flexible version of it by making your own instance and recruiting all your closest friends to it. You can choose to share only to your followers, only to your instance, or available to be federated globally, so that is really nice. If your instance was effectively your circle, problem solved, but that&#39;s not something that most people would achieve.&lt;/p&gt;
&lt;p&gt;Mastodon allows you create bots, but you can flag those bots as bots and it will be obvious when viewing. This is great for unofficial bots like news organizations to know when this account is not being actively monitored.&lt;/p&gt;
&lt;p&gt;The latest version of Mastodon allows editing your posts. This isn&#39;t in the Tusky app on Android that I use, so I cannot comment on it. Prior to this, both Mastodon and CounterSocial had a &amp;quot;delete and re-draft&amp;quot; which was also better than nothing.&lt;/p&gt;
&lt;p&gt;Content warnings or content wrappers are available. The consensus at least for Mastodon (not as much CounterSocial) is to use these quite liberally. They aren&#39;t only for potentially sensitive content but are really any kind of subject header for the post that allows people to decide whether they want to read more or not. This is possibly my favourite feature and I&#39;ve used it for anything from Ontario politics to talking about Twitter to spoilers of Black Panther Wakanda Forever.&lt;/p&gt;
&lt;p&gt;Mastodon and CounterSocial can schedule posts in advance, which is nice. Twitter could to that with some third party tools but not in the official apps.&lt;/p&gt;
&lt;p&gt;Mastodon and CounterSocial both allow you to auto-delete posts after a certain period of time. This is also great if like me you appreciate when it feels more like an ephemeral conversation than a permanent archive of everything I ever said.&lt;/p&gt;
&lt;p&gt;Mastodon and CounterSocial allow you to mute somebody for a shorter period of time, not always an all or nothing permanent decision. This is great if you just need to tune out somebody for a bit but you&#39;re happy to see them again later.&lt;/p&gt;
&lt;p&gt;Many other features are comparable, including muting, blocking, and adding image descriptions for accessibility.&lt;/p&gt;
&lt;p&gt;Overall, in raw features, Mastodon wins out. Losing circles is unfortunate, but some of these other tools truly are great to have and easy to use.&lt;/p&gt;
&lt;h2 id=&quot;payment&quot; tabindex=&quot;-1&quot;&gt;Payment &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#payment&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As discussed above, Twitter is mostly funded by mining data for targeted ads. They also added Twitter Blue as a freemium style plan to get more features, which the Elon Musk era is leaning into.&lt;/p&gt;
&lt;p&gt;CounterSocial is freemium. You can do all the basics for free, but you&#39;ll need a Pro account to do several things including some of the features I&#39;ve named above.&lt;/p&gt;
&lt;p&gt;Mastodon is donation based. The instance admins pay the costs and hope that they get enough donations to cover it. So if you are joining Mastodon, have found a good instance, and have some room in the budget, consider kicking a few dollars to your admin.&lt;/p&gt;
&lt;h2 id=&quot;culture&quot; tabindex=&quot;-1&quot;&gt;Culture &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#culture&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Twitter had a famously unique culture. It was the place where news broke. It was the place where movements started and spread to the mainstream, including both movements for justice and movements of hate. There were plenty of niche corners for your favourite topics, but you would also inevitably get caught up in the big news of the day.&lt;/p&gt;
&lt;p&gt;It&#39;s hard to completely judge Mastodon and CounterSocial since they have been overrun by Twitter exiles. But what I can mostly say is this:&lt;/p&gt;
&lt;p&gt;CounterSocial seems to be much more the home for those who want to talk US left-wing politics. That&#39;s a good portion of the firehose. As a Canadian, that isn&#39;t a great selling point to me. Mastodon certainly has those corners, but it&#39;s also easier to avoid them and to fully delve in completely different topics instead, especially technology.&lt;/p&gt;
&lt;p&gt;Both do suffer from a bit of arrogance. They&#39;re proud of the fact they built these networks without big money algorithms, and they should be. But sometimes they also come across as looking down on those who are new and confused why things are different. I&#39;ve seen this more with CounterSocial which loves to set itself in opposition to Mastodon as well as in opposition to Twitter, but I have seen it in Mastodon as well.&lt;/p&gt;
&lt;p&gt;Both have stronger stances on paper against hate speech and trolls than Twitter. But moderation is a lot easier said than done. Ultimately this all depends on moderator abilities to keep up and to act consistently to avoid frustrations. It will be interesting to see what happens here as Mastodon in particular is growing so rapidly and &lt;strong&gt;will&lt;/strong&gt; become a target.&lt;/p&gt;
&lt;p&gt;CounterSocial is a bit more &amp;quot;extroverted&amp;quot; by which I mean that it is more normal to get replies from (mostly friendly) strangers.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-11-21-Twitter-Mastodon-CoSo/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have just completed deactivating my Twitter.&lt;/p&gt;
&lt;p&gt;I am really finding a new online home on Mastodon. It&#39;s where the most people are headed now and has a great range of features, topics discussed, and it has a friendly interface. It&#39;s really just the hurdle of picking an instance you&#39;ll need to get over first, and that is understandably a larger hurdle than is worth it for some people.&lt;/p&gt;
&lt;p&gt;CounterSocial will be a great option for a lot of people. It&#39;s a lot faster to get an accurate gauge of whether it&#39;s good for you or not, without the instance decisions, so I would say to go ahead and check it out if everything I&#39;ve written makes it sound appealing to you. It may not be my long-term option, aside from the fact that a few people I know are on there and I would like to keep up with them.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>New Certificate: Power Platform App Maker</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-12-10-power-platform-certificate/"/>
		<updated>2022-12-10T16:48:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-12-10-power-platform-certificate/</id>
		<content type="html">&lt;p&gt;This week I completed a new certification! I am now Microsoft certified as a &lt;a href=&quot;https://www.credly.com/badges/f62e6037-44d4-4ee2-9fd8-a83b84500910/public_url&quot;&gt;Power Platform App Maker Associate,&lt;/a&gt;, having completed &lt;a href=&quot;https://learn.microsoft.com/en-us/certifications/exams/pl-100&quot;&gt;the PL-100 exam&lt;/a&gt;. This covers a lot of the introductory understanding of the Power Platform including Power Apps, Power Automate, Power BI, and Power Virtual Agent. There&#39;s a lot of great tools in here and I&#39;m happy that I&#39;ve gotten a good introductory grasp of them.&lt;/p&gt;
&lt;p&gt;It is listed on the &lt;a href=&quot;https://tech.ryanrobinson.ca/about&quot;&gt;about page&lt;/a&gt; along with my other certifications.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Active Links in Views</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-12-29-active-links-views/"/>
		<updated>2022-12-30T01:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-12-29-active-links-views/</id>
		<content type="html">&lt;p&gt;Drupal 9 provides a different style for active links - i.e. a link that goes to the same page that you&#39;re already on - in most contexts. This helps identify for users when it would be redundant to select it again. There&#39;s one exception where it doesn&#39;t do this out of the box, however: within views.&lt;/p&gt;
&lt;p&gt;Here&#39;s how I got around that. First add this file to the theme&#39;s /js folder, in a new file called &lt;code&gt;active-links.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-jquery&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-jquery&quot;&gt;(function (Drupal) {
  var viewLinks = document.querySelectorAll(&#39;.view a[href=&quot;&#39;+window.location.pathname+&#39;&quot;]&#39;);
  for (let i = 0; i &lt; viewLinks.length; i++) {
    viewLinks[i].classList.add(&quot;is-active&quot;);
  }
})(Drupal);&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a simple function, checking to see if there are any links within views that point to the same address as the current page, and if it finds any, it adds the standard &lt;code&gt;is-active&lt;/code&gt; class to it.&lt;/p&gt;
&lt;p&gt;As with any other new JavaScript or CSS file, you&#39;ll also need to tell Drupal to include this library if you want it to show up. Adding it to the global-styling for the theme will load it on every page. You can do that by adding a new line to the libraries.yml file, within the js section under global-styling:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;global-styling&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;js/active-links.js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This could also be structured as a module instead of dropping it into the theme. That would make it more easily sharable for others to include it on their sites instead of needing to adapt it to their themes. But it is also a very small piece of code and that may be more hassle than its worth, so I am not currently planning on doing that.&lt;/p&gt;
&lt;p&gt;Note: you will probably need to clear caches, close your browser, and open a new one, before you&#39;ll notice the change in place. JavaScript will be cached so you might be tempted to think it isn&#39;t working when it really just needs to reload.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab DevOps: Deploy to Server</title>
		<link href="https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/"/>
		<updated>2022-12-30T20:45:05Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/</id>
		<content type="html">&lt;p&gt;This continues with &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;the long-stalled GitLab DevOps series&lt;/a&gt;. An essential piece of any CI/CD system is deploying to another server. You do not want to have to sign in to each server separately and carry out 15 deployment steps to take backups, pull the updated code, import new configuration, update database schemas, clear caches, etc. You want to hit a button and it rolls out everywhere. You also want to have the ability to easily roll back if you realize a mistake was made.&lt;/p&gt;
&lt;p&gt;You will first need &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/gitlab-devops-gitlab-runner/&quot;&gt;a GitLab runner&lt;/a&gt; on the server you want to deploy to.&lt;/p&gt;
&lt;p&gt;As with the earlier post on &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/gitlab-devops-php-lint/&quot;&gt;PHP linting within GitLab CI/CD&lt;/a&gt;, in a real scenario this would be split into two projects. In my real usage, I have one project with the general CI/CD functionality, then the specific website project can extend from those functions to push out to the server. In this demo scenario, it is all in &lt;a href=&quot;https://github.com/ryan-l-robinson/GitLab-CI-CD&quot;&gt;one project of my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;deploy-yml&quot; tabindex=&quot;-1&quot;&gt;Deploy.yml &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/#deploy-yml&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The deploy file provides you a baseline template for deploying code changes, which is in the general CI/CD functionality project. Here&#39;s what that might look like:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;## Deploy Jobs ##&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dev&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/opt/www/html&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;### Generic deploy to specified server ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;.deploy_template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; echo &quot;Deploying to server at $SERVER_URL&quot;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git fetch
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git reset &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;hard
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git stash
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git pull&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;project-gitlab-ci-yml&quot; tabindex=&quot;-1&quot;&gt;Project .gitlab-ci.yml &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/#project-gitlab-ci-yml&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The other key component is the project&#39;s file to extend this deploy job.&lt;/p&gt;
&lt;p&gt;Start the project&#39;s .gitlab-ci.yml file with including the deploy file from the other project. In a scenario where that is a different project but accessible to the same GitLab user, it would look like this, assuming the project is called gitlab-ci:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Includes general CI jobs&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;[group path to project]/gitlab-ci&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; main
    &lt;span class=&quot;token key atrule&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy.yml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will now give you the freedom to extend jobs found in the deploy.yml file of the main branch on the gitlab-ci project.&lt;/p&gt;
&lt;p&gt;Add deploy as a stage for your project:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;stages&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; test
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; deploy&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, define the job(s) that use(s) the general deploy functionality, passing in the needed variables:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;## Deploy Jobs ##&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;### Deploys to dev server only when changes are made to the dev branch ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_dev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Development
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;dev url&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;dev GitLab runner tag&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; dev

&lt;span class=&quot;token comment&quot;&gt;### Deploys to staging server only when changes are made to the main branch ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_staging&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Development
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;dev url&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;staging GitLab runner tag&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main

&lt;span class=&quot;token comment&quot;&gt;### Deploys to production only when main branch and manually triggered ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_prod1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Production 1
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;production 1 URL&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;prod 1 GitLab runner tag&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main
  &lt;span class=&quot;token key atrule&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manual

&lt;span class=&quot;token key atrule&quot;&gt;deploy_prod2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Production 2
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;production 2 URL&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;prod 2 GitLab runner tag&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main
  &lt;span class=&quot;token key atrule&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manual&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will need one of these types of jobs for each server to deploy to, with each&#39;s corresponding variables. This demo includes a dev server, a staging server, and two production servers.&lt;/p&gt;
&lt;h2 id=&quot;project-access-token&quot; tabindex=&quot;-1&quot;&gt;Project access token &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/#project-access-token&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For this to work smoothly, you can use a project access token. This is a unique token that can be set up on a project – essentially a service account – rather than the connection being tied to a particular user. This is helpful to avoid problem scenarios like a sudden change of staff when the deploy was set up using the former staff&#39;s account that no longer exists.&lt;/p&gt;
&lt;p&gt;Create a project token by going to the project -&amp;gt; Settings -&amp;gt; Project Access Tokens. Name the token something descriptive for the server that will be using it, e.g. Dev Server. Specify the permissions for that token. Within this workflow I&#39;ve been walking through here, that is only read access so it can pull within the deployment job. It does not need to be able to write back to the GitLab project, since code changes will always start at local and push through, never the other way around.&lt;/p&gt;
&lt;p&gt;Now when you clone the project or add remote for the new server, add it using a variation on the https format rather than the SSH format:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://oauth2:[token]@[GitLab project address]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;next-drupal-configuration&quot; tabindex=&quot;-1&quot;&gt;Next: Drupal Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2022-12-30-GitLab-DevOps-Deploy-to-Server/#next-drupal-configuration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This deploys code changes to the servers. You quite possibly need more actions to take place, like database updates, depending on what platform you&#39;re using. In my context of developing this for Drupal, there are several more steps needed. Those will be covered in the next post in this series.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab DevOps: Drupal Deployment</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-02-Drupal-Deploy/"/>
		<updated>2023-01-02T15:47:05Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-02-Drupal-Deploy/</id>
		<content type="html">&lt;p&gt;This continues where &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/gitlab-devops-deploy/&quot;&gt;the previous post&lt;/a&gt; in &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/gitlab-devops/&quot;&gt;the GitLab DevOps series&lt;/a&gt; left off. We can now deploy code changes to the new server, and that&#39;s great for generic deployments. Drupal adds a few extra components when it comes to configuration sync and the database.&lt;/p&gt;
&lt;h2 id=&quot;dev-vs-production&quot; tabindex=&quot;-1&quot;&gt;Dev vs Production &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-02-Drupal-Deploy/#dev-vs-production&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest challenge with this topic is navigating that there should be some things different from dev and staging servers compared to production. Some of these are cases where the module or core configuration is on each server, but with different options (e.g. &lt;a href=&quot;https://drupal.org/project/environment_indicator&quot;&gt;environment indicator&lt;/a&gt;) and others are a case of modules that are only needed on dev and staging and therefore shouldn&#39;t be on production at all (e.g. &lt;a href=&quot;https://www.drupal.org/project/maillog&quot;&gt;maillog&lt;/a&gt; and &lt;a href=&quot;https://www.drupal.org/project/stage_file_proxy&quot;&gt;stage_file_proxy&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Composer offers a good way to handle the code package building distinction. You can require a package, or require-dev a package. Then you can &lt;code&gt;composer install&lt;/code&gt; or &lt;code&gt;composer install --no-dev&lt;/code&gt; depending on the server. That part is straightforward.&lt;/p&gt;
&lt;p&gt;The hard part is the distinctions in configuration. Much of this can be handled using the &lt;a href=&quot;https://www.drupal.org/project/config_ignore&quot;&gt;config_ignore&lt;/a&gt; module, which tells the configuration imports and exports to not include that configuration file, which means it doesn&#39;t get synced across the servers. You have to set those ignored configurations up separately on every server, which means if there&#39;s a change, you need to remember to do it on all environments where it would be relevant. But then there&#39;s other configurations like modules that shouldn&#39;t be active at all on production but is on dev and staging. You can&#39;t simply ignore syncing the installed modules configuration, or else you&#39;d have a mess every time you added or removed a module. Sometimes those modules create new configuration schemas, or require you to change another configuration schema to take advantage of it.&lt;/p&gt;
&lt;p&gt;Maillog is the best example of this. Maillog is a module that should install on dev/staging but not production, as it is a debugging tool for logging outgoing mail rather than sending it. It can be separated in composer as a dev module so that the code doesn&#39;t install on production. But then it also changes the modules configuration when it is installed, as well as the site&#39;s mail settings configuration. Ideally these servers are still managed through the configuration, with differences in dev/staging compared to production. That rules out using config_ignore.&lt;/p&gt;
&lt;p&gt;The other imperfect option is changing those configurations as part of the CI/CD processes. It also has a couple of problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There might be a few seconds where the configuration is wrong, e.g. if you import the synced configuration but then force it back to the desired value with a follow-up command. Often this doesn&#39;t matter, like a module being installed and then being promptly uninstalled again, but in other cases like sending email, it might be that the site tries to send an email in those few seconds, fails, and nobody notices that somebody should have gotten an email but didn&#39;t. So you&#39;d have to be very careful about this technique in production.&lt;/li&gt;
&lt;li&gt;It relies on keeping the CI/CD up to date. If something changes with the site configuration, you better remember to account for how that configuration will be the same or different on all servers and if the CI/CD needs any changes to prepare for it. This makes it more prone to something breaking when you forget or can&#39;t adequately test production behaviour until it&#39;s too late, already on production.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note: I did try the &lt;a href=&quot;https://www.drupal.org/project/config_split&quot;&gt;config_split&lt;/a&gt; module, which sounds like it should help but did not work reliably. There is an update that came out since my last times, so maybe it will be worth trying it again.&lt;/p&gt;
&lt;p&gt;For the simplicity of the rest of this blog post, I&#39;ve decided not to include my specific examples here. Hopefully my thoughts on how I&#39;ve negotiated the options for these kinds of scenarios is more valuable than any specific conclusions that we have in place right now.&lt;/p&gt;
&lt;h2 id=&quot;the-jobs&quot; tabindex=&quot;-1&quot;&gt;The Jobs &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-02-Drupal-Deploy/#the-jobs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These jobs are added to the general function deploy.yml, which in my real-world scenario is in a different project but could be in the same project.&lt;/p&gt;
&lt;p&gt;Here&#39;s what the extendable jobs look like:&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;### Generic deploy to specified server ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;.deploy_template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; echo &quot;Deploying to server at $SERVER_URL&quot;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git fetch
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git reset &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;hard
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git stash
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; git pull

&lt;span class=&quot;token comment&quot;&gt;### Drupal install jobs ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;.drupal_composer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;set system.maintenance_mode 1 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;format=integer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; composer install

&lt;span class=&quot;token key atrule&quot;&gt;.drupal_composer_prod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;set system.maintenance_mode 1 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;format=integer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; composer install &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;no&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;dev

&lt;span class=&quot;token key atrule&quot;&gt;.drupal_config&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;after_script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;set system.maintenance_mode 1 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;format=integer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush cr
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush config&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;import &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;y
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush cr
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush updb &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;y
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;set system.maintenance_mode 0 &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;input&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;format=integer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush cr

&lt;span class=&quot;token key atrule&quot;&gt;.drupal_cache&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; deploy
  &lt;span class=&quot;token key atrule&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $ENVIRONMENT_NAME
    &lt;span class=&quot;token key atrule&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $SERVER_URL
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; prod2
  &lt;span class=&quot;token key atrule&quot;&gt;after_script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; cd $WEB_ROOT
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; vendor/drush/drush/drush cr&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first job is the one detailed in &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/gitlab-devops-deploy/&quot;&gt;the previous post&lt;/a&gt;, except that it has now been moved from &lt;code&gt;script&lt;/code&gt; to &lt;code&gt;before-script&lt;/code&gt; to work better with the other pieces.&lt;/p&gt;
&lt;p&gt;The next component is composer. Drupal is built using composer packages. Any action that updates the composer.lock file - adding a new module, deleting a module, updating packages - will require this step. &lt;code&gt;composer install&lt;/code&gt; ensures that it installs the exact same versions of the exact same packages as on your other servers. It might be tempting to use &lt;code&gt;composer update&lt;/code&gt; instead to get the latest versions, but then you might end up with trying to install something that you haven&#39;t tested elsewhere yet. There are two variants of this job, one for dev servers that installs dev packages and one for production that does not.&lt;/p&gt;
&lt;p&gt;Secondly, the configuration and databases need to be updated. &lt;code&gt;drush cr&lt;/code&gt; rebuilds your caches. There&#39;s one to start this section because it is often necessary for scenarios like a new module. The Drupal cache needs to know when there&#39;s a new module with the code in place, before you get to the &lt;code&gt;config-import&lt;/code&gt; that will try to install that module. Otherwise you&#39;ll get an error. With that settled, you can import all the configuration changes, then clear the caches again to ensure the site is now reflecting those changes. Finally, update the site&#39;s database using &lt;code&gt;drush updb&lt;/code&gt;. This is sometimes needed with new modules or updated modules that need to change the database schema. If you don&#39;t do this, you can end up with errors about missing columns in tables.&lt;/p&gt;
&lt;p&gt;The final job only clears the caches, without any of the other changes. The reason for these separations will become more clear in the site&#39;s jobs that extend from these.&lt;/p&gt;
&lt;h2 id=&quot;site-jobs&quot; tabindex=&quot;-1&quot;&gt;Site Jobs &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-02-Drupal-Deploy/#site-jobs&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are the jobs to execute each job on the relevant server, found in the .gitlab-ci.yml file for the project.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;## Deploy Jobs ##&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;### Deploys to dev server only when changes are made to the dev branch ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_dev&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_composer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_config
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Development
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; dev.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; dev
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; dev

&lt;span class=&quot;token comment&quot;&gt;### Deploys to staging server only when changes are made to the main branch ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_staging&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_composer
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_config
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Staging
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; staging.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; staging
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main

&lt;span class=&quot;token comment&quot;&gt;### Deploys code to production only when main branch and manually triggered ###&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;deploy_prod_1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_composer
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Prod 1
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; prod1.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; prod1
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main  
  &lt;span class=&quot;token key atrule&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manual

&lt;span class=&quot;token key atrule&quot;&gt;deploy_prod_2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .deploy_template
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; .drupal_composer
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Prod 2
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; prod2.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; prod2
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main  
  &lt;span class=&quot;token key atrule&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; manual

&lt;span class=&quot;token comment&quot;&gt;#### Deploys config updates to production. These need to wait for both servers to have the composer updated code. ####&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;drupal_install_prod1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .drupal_config
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Production 1
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; prod1.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; prod1
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main
  &lt;span class=&quot;token key atrule&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;deploy_prod1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; deploy_prod2&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;drupal_install_prod2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; .drupal_cache
  &lt;span class=&quot;token key atrule&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ENVIRONMENT_NAME&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Production 2
    &lt;span class=&quot;token key atrule&quot;&gt;SERVER_URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; prod2.demo.com
    &lt;span class=&quot;token key atrule&quot;&gt;WEB_ROOT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /opt/www/html
  &lt;span class=&quot;token key atrule&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; prod2
  &lt;span class=&quot;token key atrule&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; main
  &lt;span class=&quot;token key atrule&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;deploy_prod1&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; deploy_prod2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; drupal_install_prod1&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Deploying to dev server can be done in a single job. The before_script deploys the code changes, the script installs from composer, and the after_script imports the configuration. It runs on any change to the dev branch. The idea is that we do work on separate issue branches, then when we need to test on dev, we merge it into the dev branch and it will deploy there.&lt;/p&gt;
&lt;p&gt;Deploying to staging server is the same, but with different variables for the server details and activating on merges to main instead of to dev. Merges to main should only happen when its a release candidate ready for final testing before deployment.&lt;/p&gt;
&lt;p&gt;Deploying to production adds a couple more layers to consider. There are two servers load balanced, with one database on a different dedicated server. Composer needs to install the updates on both servers. But the configuration only needs to be imported on one, since it&#39;s the same database - it wouldn&#39;t break anything to do the config on both, but would be an unnecessary extra few minutes of the site being in maintenance mode to run the same job all over again. The second server does still need caches cleared, though, or it might take some time for the changes to be reflected there, which could mean errors in the meantime.&lt;/p&gt;
&lt;p&gt;The other factor to consider is that the configuration import should not run until the code update has been deployed on both servers. If the order of operations was to install code updates on prod 1, then run config import, it would be trying to make updates on the shared database when only one of the servers has the code ready for the updates. That&#39;s why production can&#39;t collapse to one job per environment like dev and staging do.&lt;/p&gt;
&lt;p&gt;The resulting order of operation that you need is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Deploy code changes, with composer install, to production 1.&lt;/li&gt;
&lt;li&gt;Deploy code changes, with composer install, to production 2.&lt;/li&gt;
&lt;li&gt;Import configuration changes to production 1.&lt;/li&gt;
&lt;li&gt;Clear the caches on production 2.&lt;/li&gt;
&lt;/ol&gt;
</content>
	</entry>
	
	<entry>
		<title>GitLab&#39;s New Web IDE</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-03-GitLab-IDE/"/>
		<updated>2023-01-03T15:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-03-GitLab-IDE/</id>
		<content type="html">&lt;p&gt;I discovered a few days ago that GitLab has a new web IDE that is based on Visual Studio Code. &lt;a href=&quot;https://about.gitlab.com/blog/2022/12/15/get-ready-for-new-gitlab-web-ide/&quot;&gt;The blog about this new editor&lt;/a&gt; highlights a few advantages this gives compared to their previous editor, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Flexible layouts, with the possibility for multiple panes open at once.&lt;/li&gt;
&lt;li&gt;Drag and drop support in the file browser.&lt;/li&gt;
&lt;li&gt;Find and replace across all open files.&lt;/li&gt;
&lt;li&gt;80% reduction in memory usage.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&#39;ll also add that it&#39;s nice to have consistency between my desktop editor and the web IDE. Whether I&#39;m editing code from the desktop app or the occasional quick fix directly in GitLab from a browser, it is essentially the same experience (aside from things like what plugins are installed).&lt;/p&gt;
&lt;p&gt;This is similar to what is available on their big rival GitHub. They&#39;ve had a web IDE based on VS Code for a while, which you can access by substituting GitHub.com in the URL of your project with GitHub.dev instead, or by typing the . (period) key while viewing your GitHub project. It&#39;s less obvious that it is there compared to GitLab which has always had a big button for their web IDE, but works great once you know about it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/codespaces/the-githubdev-web-based-editor&quot;&gt;See documentation about GitHub&#39;s editor.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tangentially, this is also a big vote of confidence in VS Code. GitHub being built on VS Code isn&#39;t surprising as they&#39;re both Microsoft products. But GitLab also using it, as well as other services like GitPod, is a significant indicator that it is becoming the industry default editor.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Importing Multiple Paragraphs</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/"/>
		<updated>2023-01-04T16:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/</id>
		<content type="html">&lt;p&gt;A few months ago I was part of migrating content from an old Drupal 7 website to a new Drupal 9 website. Much about the data structures were similar, but some components were not. The biggest one was a field on the old site using field collections while the new site needed the newer &lt;a href=&quot;https://www.drupal.org/project/paragraphs&quot;&gt;paragraphs&lt;/a&gt; module instead. Each field collection/paragraph contains two fields, one for a title and one for a longer description. That already gives us one complication in a migration strategy, because those (collection or paragraph) are separate entities which are linked to the main node, so it is a bit harder to create those and link them in one smooth import.&lt;/p&gt;
&lt;p&gt;A second complication comes from it being possible to have multiple field collections on the old site and also multiple paragraphs on the new site, so we&#39;ll need to navigate collapsing multiple entities with two fields each alongside the related node into one export, then import that to again have multiple paragraphs with two fields each connected to the correct node.&lt;/p&gt;
&lt;p&gt;This post may not be as precise as I&#39;d usually like because it was a while ago and I can&#39;t easily recreate all of it, but hopefully it will be close enough that a Drupal admin would be able to fill in the gaps sufficiently.&lt;/p&gt;
&lt;h2 id=&quot;drupal-7-export&quot; tabindex=&quot;-1&quot;&gt;Drupal 7 Export &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/#drupal-7-export&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Step one is setting up the export from the old site. This relies on &lt;a href=&quot;https://www.drupal.org/project/views_data_export&quot;&gt;the views_data_export module&lt;/a&gt; to help generate a csv export. The view should be based on the main content type node that you&#39;ll be exporting.&lt;/p&gt;
&lt;p&gt;I added a relationship between the node and the field collection.&lt;/p&gt;
&lt;p&gt;I added each of the field collection&#39;s fields to the Fields of the view, to be included in the export. There were other fields to also consider in the export, as well as other options around formatting, but those are fairly standard views behaviour and not related to this problem, so I won&#39;t detail them.&lt;/p&gt;
&lt;p&gt;The end result should be that you can get multiple rows for each node with field collection combination, e.g.:&lt;/p&gt;
&lt;pre class=&quot;language-csv&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-csv&quot;&gt;&lt;span class=&quot;token value&quot;&gt;Node Title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field Collection Title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field Collection Description&lt;/span&gt;
&lt;span class=&quot;token value&quot;&gt;Node 1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field 1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Description 1&lt;/span&gt;
&lt;span class=&quot;token value&quot;&gt;Node 1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field 2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Description 2&lt;/span&gt;
&lt;span class=&quot;token value&quot;&gt;Node 2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field 3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Description 3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;data-cleanup-in-excel&quot; tabindex=&quot;-1&quot;&gt;Data Cleanup in Excel &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/#data-cleanup-in-excel&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I now needed to collapse each node into one line. I did this somewhat manually in Excel, copying field data into each row but separated by double colons (::). You can choose any character separator as long as it won&#39;t occur naturally within the field, so you probably don&#39;t want as simple as a single : or ;. In my scenario we were dealing with about 1000 nodes, about 100 of which had multiple field collections from this field. If you have much more than that, you probably want to script something to combine the rows for you.&lt;/p&gt;
&lt;pre class=&quot;language-csv&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-csv&quot;&gt;&lt;span class=&quot;token value&quot;&gt;Node Title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field Collection Title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field Collection Description&lt;/span&gt;
&lt;span class=&quot;token value&quot;&gt;Node 1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field 1::Field 2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Description 1::Description 2&lt;/span&gt;
&lt;span class=&quot;token value&quot;&gt;Node 2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Field 3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token value&quot;&gt;Description 3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: there may be other complications here like what text encoding to use, depending on the characters in your data. Similarly you may have to navigate whether each column should be separated by a comma (,) or something else. I won&#39;t get into that here.&lt;/p&gt;
&lt;h2 id=&quot;drupal-9-feeds-configuration&quot; tabindex=&quot;-1&quot;&gt;Drupal 9 Feeds Configuration &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/#drupal-9-feeds-configuration&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The data is now ready to get into the new site. This import will be handled by the &lt;a href=&quot;https://www.drupal.org/project/feeds&quot;&gt;feeds&lt;/a&gt; module, with help from &lt;a href=&quot;https://www.drupal.org/project/feeds_tamper&quot;&gt;feeds_tamper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I created a new feeds type from Structure -&amp;gt; Feed types -&amp;gt; Add feed type. Fill in the options.&lt;/p&gt;
&lt;p&gt;The most important is the second group, the basic options of how to grab the data and what to do with it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetcher: Upload file&lt;/li&gt;
&lt;li&gt;Parser: CSV&lt;/li&gt;
&lt;li&gt;Processor: Node&lt;/li&gt;
&lt;li&gt;Content type: [Your content type, in this case it was Resources]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/01/FeedSettings.png&quot; alt=&quot;Screenshot of feeds settings screen, showing options described above&quot; /&gt;&lt;/p&gt;
&lt;p&gt;On the mapping screen, I added a straightforward mapping between the Field Collection Title in your csv file and a temporary text column (allowing multiple values) created in your content type of the new site.&lt;/p&gt;
&lt;p&gt;After this, the import will be able to bring in data and put it in new nodes of the content type, but the text in the temporary fields are still separated by the :: if there are multiple.&lt;/p&gt;
&lt;p&gt;Now I went over to the Tamper tab and found the field you need to split up and added an &amp;quot;Explode&amp;quot; tamper plugin for that field, specifying the string separator and a label. I repeated this on each these temporary multiple fields.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/01/FeedsTamper.png&quot; alt=&quot;Screenshot of tamper screen, showing options described above&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This will now leave us with multiple entries in the temporary field directly on the node. We still need to turn those into paragraphs and associate those paragraphs with the node, which is where we run out of options within Feeds to handle it on its own.&lt;/p&gt;
&lt;h2 id=&quot;custom-module&quot; tabindex=&quot;-1&quot;&gt;Custom Module &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-01-04-Importing-Multiple-Paragraphs/#custom-module&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The final piece is to convert the temporary text fields into multiple associated paragraphs instead. This will be handled with a custom module. I&#39;ve created &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-paragraph-split&quot;&gt;a generic demo of this available in my GitHub&lt;/a&gt;. This is the main PHP file.&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token php language-php&quot;&gt;&lt;span class=&quot;token delimiter important&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;token package&quot;&gt;Drupal&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Core&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Entity&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;EntityInterface&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;token package&quot;&gt;Drupal&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;paragraphs&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Entity&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Paragraph&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;token package&quot;&gt;Drupal&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Entity&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;User&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;token package&quot;&gt;Drupal&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Entity&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Node&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/** 
 * Implements hook_ENTITY_TYPE_insert() for &#39;nodes&#39;
 * When a node is created, with content in the temporary field, create the associated paragraph instead
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;paragraph_split_node_insert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name type-declaration&quot;&gt;EntityInterface&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//If node content type is node_type&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;node_type&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token variable&quot;&gt;$new_paragraphs&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token variable&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

                &lt;span class=&quot;token comment&quot;&gt;//This is needed to handle when there is a title without a matching description&lt;/span&gt;
                &lt;span class=&quot;token variable&quot;&gt;$desc&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_description&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_description&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;token comment&quot;&gt;//Create new paragraph entity&lt;/span&gt;
                &lt;span class=&quot;token variable&quot;&gt;$paragraph&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name static-context&quot;&gt;Paragraph&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;type&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;paragraph_type&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_title&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_title&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$k&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;field_description&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$desc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;uid&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token variable&quot;&gt;$paragraph&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;token comment&quot;&gt;//Add the new paragraph to the array&lt;/span&gt;
                &lt;span class=&quot;token function&quot;&gt;array_push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$new_paragraphs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;target_id&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$paragraph&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;target_revision_id&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$paragraph&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRevisionId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token comment&quot;&gt;//Overrides if there was already one in place, which there shouldn&#39;t be in this context of an import&lt;/span&gt;
            &lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;field_paragraph_reference&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$new_paragraphs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token variable&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The module logic is relatively straightforward:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hook is on the node being created but it will only continue on a specific node type. Everything else is irrelevant in this scenario.&lt;/li&gt;
&lt;li&gt;If the temporary title field is provided, continue. Otherwise there&#39;s no extra handling needed. In this context there was never a description without a title, so this was safe. You may need more handling for those scenarios.&lt;/li&gt;
&lt;li&gt;Loop on every match found, since there can be multiple in the temporary title field.&lt;/li&gt;
&lt;li&gt;If there was a title but not a description - which did happen in our context, unlike the reverse - then the description, replace with a blank string.&lt;/li&gt;
&lt;li&gt;Create a new paragraph entity and save it.&lt;/li&gt;
&lt;li&gt;Create a new entry in the field of the node that links to the paragraph, with the paragraph&#39;s ID and revision ID.&lt;/li&gt;
&lt;li&gt;Save the node when done.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note: another approach here that would also involve custom module code would be to build this handling directly into the feeds import instead of hooking on the node being created. That&#39;s probably a bit more precise to run only in this one context. This hook on node insert does run more often, which is both less efficient and could be extra safety in case somebody accidentally put data in those temporary fields manually instead of creating the paragraphs. In any case, this was a quicker one for us to prepare, which was the priority with getting a one-time import done.&lt;/p&gt;
&lt;p&gt;When the module is ready (including an info file), enable it and give it a test run.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Disable Password Reset</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-08-Drupal-disable-pw-reset/"/>
		<updated>2023-01-08T22:00:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-08-Drupal-disable-pw-reset/</id>
		<content type="html">&lt;p&gt;In one particular site, we chose to block the user registration and user password reset options. The site is using SSO login anyway, so this would really only impact our development team&#39;s superuser admin account (user 1) that is typically blocked outside of an emergency, so this seals up a possible attack vector with no user impact.&lt;/p&gt;
&lt;p&gt;User registration can also be blocked with site configuration, so I wouldn&#39;t have bothered with custom code for only that part. But since I was doing it for the password reset anyway, I decided to go ahead with the extra layer of protection on the registration route as well.&lt;/p&gt;
&lt;p&gt;I achieved this with a simple custom module which you can view in full &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-disable-password-reset&quot;&gt;in my GitHub&lt;/a&gt;. Here&#39;s the key part, blocking access to the routes:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;alterRoutes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name type-declaration&quot;&gt;RouteCollection&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Always deny access to unwanted routes.&lt;/span&gt;
    &lt;span class=&quot;token variable&quot;&gt;$disallow_routes&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;user.register&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;user.pass&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$disallow_routes&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$disallow_route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$route&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$collection&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$disallow_route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token variable&quot;&gt;$route&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setRequirement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;_access&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;FALSE&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Brandwood A11y Checker</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-09-Brandwood/"/>
		<updated>2023-01-09T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-09-Brandwood/</id>
		<content type="html">&lt;p&gt;Today I learned about an interesting tool: the &lt;a href=&quot;http://brandwood.com/a11y/&quot;&gt;Brandwood Accessibility Checker&lt;/a&gt;. There are lots of tools out there for testing colour contrast and whether it meets the necessary levels to meet accessibility requirements. But in most of those, you enter one colour for the foreground and one for the background and it gives you the contrast ratio and whether that passes.&lt;/p&gt;
&lt;p&gt;This one goes a step further and lets you see contrast of text in front of images. This is great for scenarios like a homepage slideshow (slideshows often aren&#39;t great for accessibility in other ways, but we&#39;ll ignore that for now) where there is text of a title that shows up layered in front of an image. Whether the text is readable with enough contrast might depend on what part of the image the text appears over, so this tool lets you specify your image, your text colour, and lets you move the text around to see what the contrast is against the image at that specific point.&lt;/p&gt;
&lt;p&gt;Note that depending on your mobile responsiveness handling and the possibility for other tools like browsers increasing or decreasing the font size, this might still not be a perfect conclusion. The simplest solution when possible is to put the text above or below the image instead of layered on top of it. But if you need to do it, or if you&#39;re looking for a tool to help with a more fixed design scenario - like a PDF document or printed poster - this is a nice tool to have in your belt.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>A11yTalks: Cognitive Ease</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-01-14-Cognitive-Ease/"/>
		<updated>2023-01-14T18:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-01-14-Cognitive-Ease/</id>
		<content type="html">&lt;p&gt;A11yTalks had a great presentation this week about designing for cognitive load. It has a lot of valuable insights about ways that we can do much better with website design that goes beyond simply meeting the WCAG checklists. Check it out below:&lt;/p&gt;
&lt;figure&gt;&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;337&quot; loading=&quot;lazy&quot; src=&quot;https://www.youtube.com/embed/BXeixHLjZwM&quot; title=&quot;A11yTalks video: Designing for Cognitive Ease&quot; width=&quot;600&quot;&gt;&lt;/iframe&gt;&lt;figcaption&gt;A11yTalks video: Designing for Cognitive Ease&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;As a tangent, I know this site has a lot of weaknesses in its semantic design and I&#39;ve largely ignored them because this is mostly my little blog to myself that few if any will see, but I know I should look into forking from this theme to create a more accessible version.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Mastodon Apps on Android</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/"/>
		<updated>2023-02-21T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/</id>
		<content type="html">&lt;p&gt;I&#39;ve been enjoying my time on Mastodon since the recent migration from Twitter. Of course, I&#39;m far from the only one to make this migration, and that includes a lot of developers, so we&#39;re starting to see a lot of better apps for Mastodon and the wider fediverse popping up. That has led me to an experience that has been very rare since about 2012: testing out and researching a variety of independent apps to meet a need. For years I&#39;ve mostly just used whatever the official app is for whatever service (including Twitter), with really the only recent exception being when &lt;a href=&quot;https://tech.ryanrobinson.ca/android-email-apps/&quot;&gt;I spent some time testing out alternative email apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before writing this post, I put the question out on my Mastodon to see what factors others have considered in picking their preferred Android app. I&#39;ll incorporate a couple of those answers here, but first, one shared &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1De5KRwqMIdwEryfoeBLARgxF7QgKkeOQBCilKuIdAXE/edit?usp=drivesdk&quot;&gt;a very helpful spreadsheet breaking down all the options&lt;/a&gt; (not only Android). This is great if you need a high level overview of features available.&lt;/p&gt;
&lt;p&gt;This post will try to narrow down some of what matters most to me and to others when I put the question out for feedback.&lt;/p&gt;
&lt;h2 id=&quot;mastodon-official-app&quot; tabindex=&quot;-1&quot;&gt;Mastodon (official app) &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#mastodon-official-app&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As I&#39;m sure with most people, I first tried the official app simply called Mastodon. This was the time of the great migration and a significant portion of posts I saw were advice about Mastodon, including a lot of posts saying not to use the official app. But it&#39;s not as bad as that makes it sound.&lt;/p&gt;
&lt;p&gt;It has Trending topics. It has home and local feeds. It&#39;s a fairly clean and friendly design.&lt;/p&gt;
&lt;p&gt;But yes, as many point out, it is missing several other features that you might want. Check the spreadsheet linked above for the full list, but here are a few that that matter to me:&lt;/p&gt;
&lt;p&gt;You can&#39;t read threads in continuity, which makes it prone to reading posts without recognizing there&#39;s context.&lt;/p&gt;
&lt;p&gt;There&#39;s no federated timeline.&lt;/p&gt;
&lt;p&gt;You can&#39;t manage lists at all.&lt;/p&gt;
&lt;p&gt;You can&#39;t see ALT text, which does matter even for those of us who are sighted because descriptions can still help us identify things, and it might help us identify that maybe we don&#39;t want to boost a post that is missing ALT text.&lt;/p&gt;
&lt;p&gt;It doesn&#39;t support unlisted posts, or scheduled posts, or the delete and redraft option, or simultaneous posting of a thread, or multiple choice selection polls.&lt;/p&gt;
&lt;p&gt;It&#39;s fair to say that none of those are core features, but there&#39;s enough of them that there&#39;s probably at least one you&#39;d be disappointed to be missing.&lt;/p&gt;
&lt;h2 id=&quot;tusky&quot; tabindex=&quot;-1&quot;&gt;Tusky &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#tusky&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When I was seeing posts about not using the official Mastodon app, it was usually tied with the recommendation to use Tusky instead (sometimes Fedilab). I tried that and kept it as my main app for a couple of months.&lt;/p&gt;
&lt;p&gt;It does a few things very well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very clean design that feels at home on Android, especially with the truly black theme and options for the main navigation to be either at the top or bottom&lt;/li&gt;
&lt;li&gt;A good array of options including being able to do most of the things that the official Mastodon app cannot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My question on Mastodon also got this negative response about some of Tusky&#39;s design choices:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve been a mobile developer for 15 years (mostly android) and used Tusky before I got my iPhone. It wasn’t my favorite tbh. my gripes with Tusky are all around data and state handling.
For instance the UI has very few “in progress” states, so for instance boosting a toot can  momentarily show the button in the wrong state if the request is slow.
Also the caching for viewed toots is very rudimentary, so lots of toots (in conversations esp.) are needlessly reloaded while I stare at a blank screen.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://tech.lgbt/@em_ad/109855207946318853&quot;&gt;https://tech.lgbt/@em_ad/109855207946318853&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;fedilab&quot; tabindex=&quot;-1&quot;&gt;Fedilab &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#fedilab&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I then tried Fedilab, the next I saw recommended a lot. It has a small one time cost for the app, but if you&#39;re already settled on using Mastodon, it will probably be worth it to you to try it out.&lt;/p&gt;
&lt;h3 id=&quot;positives&quot; tabindex=&quot;-1&quot;&gt;Positives &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#positives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As the spreadsheet backs up, it is the most featured app by a significant margin. I&#39;ll highlight a couple big selling points that the others don&#39;t have:&lt;/p&gt;
&lt;p&gt;It allows following other instances, which is a great way to monitor niche topic communities even if you&#39;re not in them. For example, there is an instance for Drupal developers at drupal.community. I don&#39;t really want that to be my primary home, since Drupal is a relatively small portion of what I post. But I do want to easily keep an eye on conversations happening there since they will have a high rate of being relevant to me.&lt;/p&gt;
&lt;p&gt;It allows following Twitter accounts via Nitter, although there are some drawbacks to how it is implemented. You can&#39;t edit the list of who you are following easily. There&#39;s no follow/unfollow buttons. There isn&#39;t even a way to view the list of everyone you currently follow. So you need to maintain a list somewhere else, in the right format (separated by a space, not a new line) so that you can copy and paste it in each time you want to add or delete one. It also may have a limit on how many total it can follow? I&#39;m not sure about that, but I found that when I tried to add more, it broke, with a generic error that didn&#39;t explain anything. And finally, a lot of the time the links it shows for a quote tweet simply don&#39;t work. I often try clicking the link several times in a row to see what is being quoted.&lt;/p&gt;
&lt;p&gt;It allows creating simultaneous posts in a thread, which none of the others do. I always appreciate this feature as I don&#39;t like getting caught having written up half a thread. This is even more true on Mastodon than on Twitter because it is best practice to keep all posts in a thread after the first as unlisted. But when there are long gaps between the start and end of the thread, I might end up with nobody even seeing that you have added more to it. Being able to dump the whole thread at once optimizes that best practice.&lt;/p&gt;
&lt;p&gt;It is one of the few apps that is built for all Fediverse services, not only Mastodon. That means if I get a Pixelfed account some day, I could do it from the same app.&lt;/p&gt;
&lt;p&gt;A Mastodon user highlighted another feature that isn&#39;t a big deal to me but might be to you:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I read the posts from oldest to newest. At the moment Fedilab seems to work best for this reading order, as it can continuously update the timeline so there are no breaks.
Tusky is second best, you can set the &amp;quot;load more&amp;quot; button to fill the timeline above the break, not below.
Still no app seems to allow reverse order timeline (oldest posts first), which was a deal breaker for me when selecting my Twitter app.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://mastodonsweden.se/@kallekn/109856154392108362&quot;&gt;https://mastodonsweden.se/@kallekn/109856154392108362&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;negatives&quot; tabindex=&quot;-1&quot;&gt;Negatives &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#negatives&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Most of my negatives have to do with the user interface and I&#39;ll focus on two:&lt;/p&gt;
&lt;p&gt;I don&#39;t like the pill button design. It feels out of place on Android. It feels dated, like a few years ago when there was a lot less consistency in app design on Android, while now most comply with the recommended design language.&lt;/p&gt;
&lt;p&gt;I don&#39;t like the fragmented placement of timelines. In the bottom toolbar you can have the home, local, federated, notifications. That&#39;s great. Then in the top go any other instances you follow, lists, and Nitter, in this weird ticker style interface. Then in the sidebar under the profile photo mostly makes sense but also has Trending in there. I&#39;d love to have these consolidated to one navigation area, in the bottom, where I can pick the four that are highest priority to stay with easy access, then the rest in an easy to access overflow menu. There is an option to combine the top and bottom, but only to put them all in that weird top ticker style, not in the bottom as I would want. And there&#39;s no option to add Trending there.&lt;/p&gt;
&lt;h2 id=&quot;megalodon&quot; tabindex=&quot;-1&quot;&gt;Megalodon &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#megalodon&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the newest discovery for me. It is not heavily featured - a little more than the official Mastodon app, less than the others - but it looks fantastic, probably my favourite design of the bunch.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-21-Mastodon-Apps-Android/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For now, I&#39;m sticking with Fedilab. I really like some of those features it does better than the rest, enough that I&#39;m willing to sacrifice some annoyance at the design style. But I am going to keep the others around and check in on them occasionally. It&#39;s early enough in the life of most of these that they may catch up in the features while maintaining a nicer design.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Include Default View in Module</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-02-23-Include-Default-View-Custom-Module/"/>
		<updated>2023-02-23T22:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-02-23-Include-Default-View-Custom-Module/</id>
		<content type="html">&lt;p&gt;You may be working on a Drupal module and want to include a default view.&lt;/p&gt;
&lt;h2 id=&quot;install&quot; tabindex=&quot;-1&quot;&gt;Install &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-23-Include-Default-View-Custom-Module/#install&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is actually quite simple: put the configuration file in the config/install folder within the module, with the proper configuration name, and it will install.&lt;/p&gt;
&lt;p&gt;This would be the full configuration file, the same as you would generate using the configuration sync tools.
You can write this file from scratch, especially if they&#39;re hidden options. If it is something that has a user interface, you can do what I tend to do: determine all your preferred settings and test it out within the interface, then export the configuration from either the UI (/admin/config/development/configuration/single/export) or drush (&lt;code&gt;drush config-export&lt;/code&gt; but that does all configuration, not only the specific one you want).&lt;/p&gt;
&lt;h2 id=&quot;uninstall&quot; tabindex=&quot;-1&quot;&gt;Uninstall &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-23-Include-Default-View-Custom-Module/#uninstall&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What about uninstalling the configuration you&#39;ve installed with the module? This will depend on the context of your module, but you may want to also uninstall this configuration when the module is uninstalled. The configuration might no longer make sense without the module, or you might create conflicts if you installed it once, uninstalled the module but left the configuration, then tried to install it again.&lt;/p&gt;
&lt;p&gt;To do that, add a few lines like this to the uninstall hook of the .module file, for example with a config file named webform.webform.event_registration:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Implements hook_uninstall
 * */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;module_name_uninstall&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;configFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEditable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;webform.webform.event_registration&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;configFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEditable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;webform.webform.event_registration&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>On Algorithms and Section 230</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/"/>
		<updated>2023-02-26T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/</id>
		<content type="html">&lt;p&gt;For those paying attention, there are a couple big cases in front of the US Supreme Court that could shape the Internet as we know it. I&#39;m Canadian, but the (English) Internet is largely determined by what is allowed in the U.S., so yes, I&#39;m still talking about it.&lt;/p&gt;
&lt;h2 id=&quot;context&quot; tabindex=&quot;-1&quot;&gt;Context &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#context&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Essentially, the plaintiffs want to hold Google legally responsible that its recommendation algorithm sometimes promotes ISIS recruitment videos. The concept could apply to other harmful content as well.&lt;/p&gt;
&lt;p&gt;There is no question that Google is protected in the harmful videos existing on YouTube. It would be impossible for the modern Internet to exist if every piece of content had to be moderated and considered by a team of lawyers before it could go online. That is clearly covered by section 230.&lt;/p&gt;
&lt;p&gt;It&#39;s the recommendation algorithm that complicates things, because that gives an impression of an endorsement from Google. Google claims they are protected under section 230, which says they are not responsible for content posted by users and the algorithm&#39;s results is effecctively user-generated. The plaintiffs say that Google is not protected because the algorithm for recommendations means Google is acting as a publisher.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nebula.tv/videos/legaleagle-this-supreme-court-case-will-destroy-the-internet&quot;&gt;Legal Eagle provides a good breakdown on Nebula&lt;/a&gt; or (appropriately) &lt;a href=&quot;https://www.youtube.com/watch?v=hzNo5lZCq5M&quot;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hzNo5lZCq5M&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;He does a great job explaining why it would be terrible to remove section 230 entirely. The Internet would divide into either no moderation or extremely strict and expensive moderation. So let&#39;s rule out that extreme immediately.&lt;/p&gt;
&lt;p&gt;But here&#39;s where it gets really interesting to me. If not the status quo, and not the opposite extreme, what else is possible in between?&lt;/p&gt;
&lt;p&gt;Another distinction he mentions that SCOTUS may try to make is that between recommendation engines and search results, allowing the latter but making the platform provider responsible for the former. He says this would be less of a disaster, but there isn&#39;t that big of a philosophical difference between the two, so it might be hard to hold up.&lt;/p&gt;
&lt;h2 id=&quot;personalization&quot; tabindex=&quot;-1&quot;&gt;Personalization &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#personalization&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another distinction even more interesting to me, that he doesn&#39;t mention, is &lt;em&gt;personalized&lt;/em&gt; recommendations and search result algorithms.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-the-business-model&quot; tabindex=&quot;-1&quot;&gt;The Impact on the Business Model &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#the-impact-on-the-business-model&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This might seem like a smaller change but it hits at the heart of big tech.&lt;/p&gt;
&lt;p&gt;The basic business of most big tech is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They make most of their money by selling ads&lt;/li&gt;
&lt;li&gt;Ads are more effective if they are personalized&lt;/li&gt;
&lt;li&gt;In order to personalize, they need you to give them lots of data about yourself&lt;/li&gt;
&lt;li&gt;The best way for them to get you to give up lots of data is for them to keep feeding you things that you want to engage with&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the recommendations and/or search results were not personalized, you probably spend less time on their service and give them less data. They can still sell ads, but they won&#39;t be as effective and they make less money. The big established platforms could still make a profit, I&#39;m sure, but it would be a radical shake up of the entire business model.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-privacy&quot; tabindex=&quot;-1&quot;&gt;The Impact on Privacy &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#the-impact-on-privacy&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In terms of privacy, this would be good for users. There would be a lot less incentive for big tech to know everything about us, which could result in unintended consequences like security breaches.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-ai-research&quot; tabindex=&quot;-1&quot;&gt;The Impact on AI Research &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#the-impact-on-ai-research&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In terms of AI, it would significantly slow down development. AI needs lots of data, which big tech already has. If we stop giving as much data, there&#39;s a lot less training material. Maybe at this point it wouldn&#39;t matter much, since they&#39;re already collecting all the data.&lt;/p&gt;
&lt;h2 id=&quot;hate-and-progress-movements&quot; tabindex=&quot;-1&quot;&gt;Hate and Progress Movements &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#hate-and-progress-movements&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What does it mean in terms of social consequences, which is an important question not only because that&#39;s related to the cause of the lawsuit in the first place, but also because isn&#39;t it really always the big question?&lt;/p&gt;
&lt;p&gt;If recommendations and search results were not personalized, they could still be weighted in other ways, like prioritizing content that already has lots of interaction or newer content. It just wouldn&#39;t be able to prioritize and give different results based on what the algorithm has determined that you individually will engage with.&lt;/p&gt;
&lt;p&gt;That means that everyone sees the same results from the same input. We would lose a lot of the &amp;quot;echo chambers&amp;quot; where you only see things that you want to see, at least not without consciously entering that echo chamber (searching a hashtag, deciding who to follow, etc.)&lt;/p&gt;
&lt;p&gt;There wouldn&#39;t be an algorithmic push to extremes. This applies to all extremes, not just social/political ones. We&#39;d see a lot of content that is broadly palatable to almost everyone. Think of what network TV was like 20 years ago, when each household had one TV so if you wanted viewership you wanted a show that the entire family could watch together. If you watch some of that content now, it will mostly seem boring, because you&#39;re used to media that is much more niche targeted to your interests.&lt;/p&gt;
&lt;p&gt;The core argument in favour of this kind of approach is that algorithms stop promoting hatred. It would break the very successful business model of right wing grifters who make lots of money by generating lots of engagement spewing hatred and fear. That certainly sounds good.&lt;/p&gt;
&lt;p&gt;But that&#39;s not the only group that would be impacted. It would also break the reach of anybody else who doesn&#39;t already have a critical mass of followers, like activists. You wouldn&#39;t hear from those profiting from spreading transphobic lies, but you also wouldn&#39;t hear a lot of important work from trans people telling their stories. You&#39;d see less of the crafted manipulation of authoritarians but you&#39;d also see a lot less of those fighting back. Algorithmic social media is often step one in organizing resistance and a big part of that is because in order to keep you there, they give you something that&#39;s a little more of what they think you want. So if you express a little interest in anti-racism work, it&#39;s going to help you find more anti-racism, which is great.&lt;/p&gt;
&lt;p&gt;This is the area that is the most complicated. Do you consider that a fair trade, even if it were practically possible? And it is also ideological, not only practical: is that a level of regulation that you want your governments to be able to exert - not stifling free speech, but stifling reach?&lt;/p&gt;
&lt;h3 id=&quot;smaller-sites&quot; tabindex=&quot;-1&quot;&gt;Smaller Sites &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#smaller-sites&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These kinds of proposals will have 95% of the conversation focused on big tech, but if the rule is established for YouTube, it would apply for everybody else, too.&lt;/p&gt;
&lt;p&gt;My day job is for a university library, primarily the website. There is currently no recommendation interface. There are search results, which are not at all personalized, but I&#39;ve had the serious thought that maybe they should be in a very minimal way. There&#39;s a lot of content on the site and a lot of it using similar keywords around databases and resources and citations, so if you use keywords like that, you get a bunch of different pages spanning all of the subjects, likely burying the results most relevant to you. Even one piece of personalized information would really improve search results: what subjects are you studying? Wouldn&#39;t the search be better if we knew that and prioritized responses accordingly, giving computer science results first if you&#39;re a computer science student?&lt;/p&gt;
&lt;p&gt;That&#39;s a small example. It doesn&#39;t require big machine learning algorithms monitoring your every move on the Internet, but it does still require personalization. Maybe that&#39;s the distinction instead: allow personalized results based on information explicitly given by the user, but don&#39;t allow engagement data mining. But who defines what is engagement data mining and what is essential information to provide the service, or engagement data mining for telemetry, for the developers to know what improvements they need to maks? My example may have a clearer line, but that certainly won&#39;t always be the case.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-02-26-algorithms/#conclusion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a lot of complicated factors here and I&#39;m thankful for channels like Legal Eagle that are helping to unpack the potential consequences. Let&#39;s hope SCOTUS thinks this through carefully and rules in the best interests of a healthy role for the Internet in society.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Recycle Bin</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/"/>
		<updated>2023-03-01T23:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/</id>
		<content type="html">&lt;p&gt;Drupal does not come with any kind of recycle bin / trash system out of the box, unlike the other technologies I have worked with most (WordPress, SharePoint). There were a few modules available at the time I looked into this (admittedly over a year ago now), but they were all rough, either old or barely developed. None were reliable enough to count on. In this post I’ll describe a simple halfway approach that did not require any extra code.&lt;/p&gt;
&lt;p&gt;There is a demo of this &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-recycle-bin&quot;&gt;available on my GitHub&lt;/a&gt;, with a GitPod container to test it out.&lt;/p&gt;
&lt;h2 id=&quot;permissions-only-admins-can-delete&quot; tabindex=&quot;-1&quot;&gt;Permissions: Only Admins can Delete &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#permissions-only-admins-can-delete&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Check permissions for each content type to confirm that only admins can delete anything. Everybody else will only be able to use the flag field we&#39;re about to create to request deletion, not directly delete anything.&lt;/p&gt;
&lt;p&gt;Go to the node permissions screen at /admin/people/permissions. Look for the permissions of each content type that are &amp;quot;Delete own content&amp;quot; or &amp;quot;Delete any content.&amp;quot; For the purposes of this demo, only the admin users should have these permissions. Your permission structure may be more complicated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinPermissions.png&quot; alt=&quot;&amp;quot;Screenshot of the permissions screen, with all permissions given to admins and no permissions given to others. The key for this example is that only admins have the Delete permissions&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;field-flag-for-delete&quot; tabindex=&quot;-1&quot;&gt;Field: Flag for Delete &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#field-flag-for-delete&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Proceed to the Manage Fields page of the first content type that you want to have this feature on. For example, if my content type is recyclable_content_type, I would go to /admin/structure/types/manage/recyclable_content_type_/fields. Create a boolean field.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinAddField.png&quot; alt=&quot;&amp;quot;Screenshot of the form to create a new field. A new field of type Boolean is being created with the label of Flag for Delete.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Limit the field to only allow one value at a time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinFieldStorage.png&quot; alt=&quot;&amp;quot;Screenshot of the form for setting storage on the field. This field allows only 1 value.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The final screen for creating the field allows you to add more options that are mostly about helping your content creators understand what this is doing. I&#39;ll add some help text as well as change the On and Off labels to be more clear of what they mean.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinFieldHelp.png&quot; alt=&quot;&amp;quot;Flag for Delete field settings. This includes setting the help text to explain to the users what it does, changing the On label to Delete and the Off label to Keep.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You now have the field on this content type ready to use. You may also want to go into &amp;quot;Manage form display&amp;quot; and &amp;quot;Manage display&amp;quot; to customize how this appears for your users. In my case, on the form I put it inside a Details sidebar paired with the published option. I then used a module like &lt;a href=&quot;https://www.drupal.org/project/condition_field&quot;&gt;condition_field&lt;/a&gt; to only show that option when the node is already marked as unpublished, so that somebody cannot accidentally mark something for deletion without unpublishing it first. Finally, on the display I hid it entirely because the public should never see that field - it is only for back-end processes.&lt;/p&gt;
&lt;p&gt;If you have more than one content type you want to deploy this feature on, go to the next content type and add a field again. This time, select from the dropdown of existing fields instead of creating a new one. The final steps for help text, form display, and public display remain the same.&lt;/p&gt;
&lt;h2 id=&quot;view-ready-for-deletion&quot; tabindex=&quot;-1&quot;&gt;View: Ready for Deletion &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#view-ready-for-deletion&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, you&#39;re going to want a way that admins can review the nodes flagged for delete and go ahead with permanently deleting after the set amount of time. This is a great problem to be solved by views.&lt;/p&gt;
&lt;p&gt;You can either create a new view or add a new display to an existing view. I&#39;m going to start by building on top of the default admin view named &amp;quot;Content&amp;quot; since I want something that is basically the same but with extra filters. This is at /admin/structure/views/view/content. Either add a new page from the Add button, or duplicate the existing page with the Duplicate Page option in the dropdown near the right side of the screen. If there was only one display which is also the default, the result would be essentially the same.&lt;/p&gt;
&lt;p&gt;I put it in the menu under Content of the Admin menu, and with the path /admin/content/delete.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinViewPageSettings.png&quot; alt=&quot;&amp;quot;First settings show the path set to /admin/content/delete. Second setting shows the Menu link as Normal and labelled Ready for Deletion.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;flag-for-delete-filter&quot; tabindex=&quot;-1&quot;&gt;Flag for Delete filter &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#flag-for-delete-filter&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add a filter to the view, overriding this page only, on the Flag for Delete field.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinAddFlagFilter.png&quot; alt=&quot;&amp;quot;Screenshot of the views admin to add a filter. A filter on the field Flag for Delete is being added.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinViewConfigureFilter.png&quot; alt=&quot;&amp;quot;Screenshot of the views admin, setting the value of Flag for Delete is equal to True.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;published-filter&quot; tabindex=&quot;-1&quot;&gt;Published filter &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#published-filter&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The view I duplicated from already had a Published filter, but it was exposed to allow users to select. So I&#39;m going to edit that one to only show unpublished content. I only want unpublished content, because if somebody has flagged for delete but it is still published, that suggests they might have made a mistake.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinViewPublishedFilter.png&quot; alt=&quot;&amp;quot;Configuration for the Published filter on the view, set as is equal to Published status of No.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;date-updated-filter&quot; tabindex=&quot;-1&quot;&gt;Date Updated filter &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-01-Drupal-Recycle-Bin/#date-updated-filter&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Finally, in my case, I also wanted to filter on the date updated, so that only content that hasn&#39;t been updated within the past 30 days would show up. Anything less than that suggests that the content creator may be having second thoughts and isn&#39;t really ready to delete it yet. In your context, you may not want this delay at all, or you may want a much longer delay.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinViewAddUpdatedFilter.png&quot; alt=&quot;&amp;quot;Screenshot of adding the Updated date filter to the view&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/RecycleBinViewConfigureUpdatedFilter.png&quot; alt=&quot;&amp;quot;Screenshot of settings for the Updated filter, setting the operator to Is Less Than and the value as an offset of -30 days&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Now admins can periodically check and bulk delete any content that is flagged for delete, unpublished, and last updated more than 30 days ago. You can also do any of the usual views changes from here as you desire, including adding views, changing text to show when there are no results, adding CSS classes, etc.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Paragraphs Sidebar</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/"/>
		<updated>2023-03-29T22:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/</id>
		<content type="html">&lt;p&gt;Suppose you want to be able to specify a contact person for most nodes of content on a site, which will then show up in the sidebar with a label and some information about the contact person. Each node could have zero contacts, could have one contact, or could have several contacts.&lt;/p&gt;
&lt;p&gt;I solved this using a combination of &lt;a href=&quot;https://www.drupal.org/project/paragraphs&quot;&gt;the Paragraph module&lt;/a&gt;, &lt;a href=&quot;https://www.drupal.org/project/profile&quot;&gt;the Profile module&lt;/a&gt;, content type fields, and views. A demo of this is available in &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-paragraphs-sidebar&quot;&gt;my GitHub&lt;/a&gt; that you can load up using &lt;a href=&quot;https://www.gitpod.io/&quot;&gt;GitPod&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;create-the-paragraph-and-its-fields&quot; tabindex=&quot;-1&quot;&gt;Create the paragraph and its fields &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#create-the-paragraph-and-its-fields&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, create the paragraph and its corresponding fields. In my case, I wanted two fields: a label that will be displayed, and a user reference to connect to a staff user account.&lt;/p&gt;
&lt;p&gt;I created the paragraph type and called it “Contact.”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-create-paragraph.PNG&quot; alt=&quot;&amp;quot;Creating a paragraph type called Contact&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Next, add a field for the label, as a text select to choose from a few pre-defined options including &amp;quot;Primary Contact,&amp;quot; &amp;quot;Secondary Contact,&amp;quot; etc. Only allow one label per paragraph, which is different from where we&#39;ll later allow multiple paragraphs per node.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-create-label-field.PNG&quot; alt=&quot;&amp;quot;Creating a field called Contact Label, as a Text (List) type&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-label-settings.PNG&quot; alt=&quot;&amp;quot;Settings for the label field, including the valid options and to allow allow 1 value.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, add a field for the user reference. Set this up to show up as an autocomplete, filtering to only show those who are of the Staff role.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-create-user-field.PNG&quot; alt=&quot;&amp;quot;Creating a user entity reference field called Contact User&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-user-filter.PNG&quot; alt=&quot;&amp;quot;The user entity reference settings, filtering to only show those of the role Staff&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;assign-to-a-content-type&quot; tabindex=&quot;-1&quot;&gt;Assign to a content type &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#assign-to-a-content-type&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add a field on the content type that references this paragraph. The field type is going to be an entity reference revision.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-add-field-to-content-type.PNG&quot; alt=&quot;&amp;quot;Adding the paragraph reference to the Page content type&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-entity-reference-paragraph-type.PNG&quot; alt=&quot;&amp;quot;The settings for the entity field, filtering to be able to select paragraphs of type Contact&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In this case, since it&#39;s going to display it in the sidebar using a view, also remove it from the display for the content type. I won&#39;t get into details of designing the page on this post.&lt;/p&gt;
&lt;p&gt;This step can be repeated to add the field to multiple content types, so that you can have the consistent design on all of them.&lt;/p&gt;
&lt;h2 id=&quot;create-the-profile&quot; tabindex=&quot;-1&quot;&gt;Create the profile &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#create-the-profile&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For the sake of this demo, I&#39;ll only add a couple of fields to the profile - a name, a phone number, and an email - and I won&#39;t do any of the design of the profile page, just creating the fields for the purpose of showing it in the sidebar of the content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-profile-fields.PNG&quot; alt=&quot;&amp;quot;Created fields for the profile: name, phone, and email&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-sidebar-view&quot; tabindex=&quot;-1&quot;&gt;Create sidebar view &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#create-sidebar-view&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That&#39;s all the underlying structure. We can now proceed to creating the view itself. This will be a view of content, because while it will be showing paragraphs, it will be showing those paragraphs based on the content being viewed. It will be a block, since we&#39;re going to want blocks that can be placed in theme block regions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/Paragraphs-sidebar-start-view.PNG&quot; alt=&quot;&amp;quot;Settings for creating the view. The essential component is the view settings showing Content.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Next, make a contextual filter so it will only show content related to the current content on display. This will be on the node ID of the page being viewed, so that only paragraphs related to the current node will come up as results. Create a filter for content ID and set the default to be &amp;quot;Content ID from URL.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/paragraphs-sidebar-contextual-filter.jpg&quot; alt=&quot;&amp;quot;Settings for the contextual filter, the content ID set to default on the content ID in the URL.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Now we need to create the link between the page being viewed and its contact paragraphs. This can be done with the relationships functionality of views. Under Relationships, click on Add, then select &amp;quot;Paragraph referenced from field_contact.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/paragraphs-sidebar-relationship.jpg&quot; alt=&quot;&amp;quot;Adding a relationship to paragraph referenced from field_contact.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We then need two more relationships:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From the contact field of the paragraph back to the user: &amp;quot;User referenced from field_contact_user.&amp;quot;&lt;/li&gt;
&lt;li&gt;From the user to the profile, which will have the majority of the fields we want to display: &amp;quot;Profile.&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last setting we&#39;ll change in the Advanced section is near the bottom: set &amp;quot;Hide block if the view output is empty&amp;quot; to Yes. We don&#39;t want it to show up at all if there isn&#39;t a contact for the current content.&lt;/p&gt;
&lt;p&gt;Now that we&#39;ve built the complexities of the query, we can return to the more common configuration in the left pane to determine what is shown. I set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display for the view to an unformatted list of fields.&lt;/li&gt;
&lt;li&gt;The fields are the contact name, the contact label, the phone number, and the email address, all from the associated profile. Each field is set to be hidden if there is no result, in case a profile is created with some information but not others, e.g. somebody offers their email but doesn&#39;t want to share their phone. You can also add more styling around how these get displayed (labels, links, etc).&lt;/li&gt;
&lt;li&gt;Filter on the paragraph type to be &amp;quot;Contact,&amp;quot; on the paragraph to be published, and for the user to be active. This helps avoid unexpected results when a user is later blocked, or somehow another paragraph type is associated to the content.&lt;/li&gt;
&lt;li&gt;Sort by the contact label and then by contact name, which will be more intuitive to users than sorting on something else like authored date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can go back to the settings on the Unformmated list to group results by the label, so that the label will show up as a header. If you want more precise control over what HTML tags are used for which elements, &lt;a href=&quot;https://www.drupal.org/project/semanticviews&quot;&gt;semantic views&lt;/a&gt; is another great module.&lt;/p&gt;
&lt;h2 id=&quot;place-block-view-in-sidebar&quot; tabindex=&quot;-1&quot;&gt;Place block view in sidebar &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#place-block-view-in-sidebar&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, add the block to show in that sidebar for all relevant content types. Of course this will depend on your theme having a sidebar region, but most have at least one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/paragraphs-sidebar-block.jpg&quot; alt=&quot;&amp;quot;Adding a block to appear in the sidebar of the Page content type&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;final-result&quot; tabindex=&quot;-1&quot;&gt;Final result &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-03-29-Paragraphs-sidebar/#final-result&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s an example of what all of this looks like, at its most basic level without any extra CSS styles added:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2023/03/paragraphs-sidebar-demo.jpg&quot; alt=&quot;&amp;quot;Sidebar in place on a demo page, showing the Primary Contact label, name Ryan Robinson linked to the profile, email address, and phone number as a valid phone link.&amp;quot;&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: OpenAI Module</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-05-03-drupal-openai/"/>
		<updated>2023-05-03T23:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-05-03-drupal-openai/</id>
		<content type="html">&lt;p&gt;AI, or more specifically large language models (LMMs) are all the rage these days, so it shouldn&#39;t come as too much of a surprise that there is now &lt;a href=&quot;https://www.drupal.org/project/openai&quot;&gt;a Drupal module that integrates OpenAI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is only an alpha release but includes several submodules to leverage OpenAI tools within a Drupal site in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate content for you in any content type&lt;/li&gt;
&lt;li&gt;Speech to text&lt;/li&gt;
&lt;li&gt;Interaction with the ChatGPT prompt endpoint&lt;/li&gt;
&lt;li&gt;A button in CKEditor to send a prompt to OpenAI and get text back&lt;/li&gt;
&lt;li&gt;Assistance in the content editing process, such as adjusting your tone and summarizing body text&lt;/li&gt;
&lt;li&gt;Analyzes logs to summarize likely problems&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven&#39;t given it a try yet, mainly because I do not have a paid OpenAI API key and I assume I cannot use this without one, but it definitely could be worthwhile in certain Drupal site contexts.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Accessibility: Level of Descriptiveness</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-06-11-Descriptive-ALT/"/>
		<updated>2023-06-11T18:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-06-11-Descriptive-ALT/</id>
		<content type="html">&lt;p&gt;There&#39;s a tension in discussing accessibility for screen reader users that comes up sometimes. Most recently and perhaps most commonly is about ALT text, but it can also apply to other things, too. The main conflict is between:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should provide lots of detail in order to make sure a blind user has access to as much detail as a sighted user can. If you&#39;ve got a picture of a cute cat, you provide all the details about the cat: colour, size, facial expression, posture in the shot, anything that a sighted user would be able to see.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should provide only the core details so that the screen reader user can get to the important point as fast as possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It might be tempting, especially if you&#39;re in the first camp, to frame this as something like equality vs efficiency. But it&#39;s really two different definitions of equality: is it equality in detail or equality in function.&lt;/p&gt;
&lt;p&gt;Another way to think about it is in terms of cognitive processing time. When an image has more details, it doesn&#39;t really add to the time that a sighted user needs to process it all, unless it&#39;s a Where&#39;s Waldo kind of scenario that is intentionally hiding details in a way that is not available at a glance.&lt;/p&gt;
&lt;p&gt;On the other hand, adding more text description that needs to be spoken out loud is a linear function. If you have twice as much descriptive content, that&#39;s twice as much time to listen to it. Maybe you structure it in such a way that they can get the basics out of the way and then have the longer description in a different spot that they can easily skip over, giving them a choice, but that&#39;s not always going to be easy.&lt;/p&gt;
&lt;p&gt;So what&#39;s the answer? How much description should be added for screenreader users? Like many things in life, I think the answer is &amp;quot;it depends.&amp;quot;&lt;/p&gt;
&lt;p&gt;Here&#39;s one scenario: you&#39;re posting on Mastodon about how cute your cat is. In that kind of scenario, the point is the details. You probably should have a description of the cat and what makes it cute. If somebody is choosing to listen to the description of the image attached to a post about how cute your cat is, it&#39;s probably fair to assume that they want the details even if that takes a minute or two.&lt;/p&gt;
&lt;p&gt;A chart of data may vary on the context. In a quick casual social media post, it&#39;s probably better to get to the point. Imagine a chart that shows the increase of CO2 emissions over time, spanning several years with lots of data points, but the clear purpose of the chart is to show how badly things are increased. Somebody probably doesn&#39;t want to be scrolling social media and get bogged down in a 5 minute narration of data points naming every year plus exact numbers for that year that all blend together and are hard to interpret. That&#39;s probably not what they&#39;re there for.&lt;/p&gt;
&lt;p&gt;But what if it&#39;s the same chart but as an academic resource? If somebody is doing research, they might need to know the exact data points, so the ALT text (or corresponding text nearby) needs to be quite detailed.&lt;/p&gt;
&lt;p&gt;Side note: I once heard about efforts to aid screen reader users encountering a graph to get the point better than a list of numbers, that relies on sounds. If the data is going up, it makes a higher pitch sound. If the data is going down, it makes a lower pitch sound. It will be interesting to see if something like that ever becomes standardized enough to work.&lt;/p&gt;
&lt;p&gt;This exact same distinction can also apply to other context like menu items: do you want to add extensive aria-labels to force verbose experiences on blind users? The title attribute is a nice balance in that example. At least in Jaws, there is a user setting for whether to read out title text. This allows developers to empower the blind users to decide for themselves whether they want the verbose description or not. And it&#39;s always better to empower users to have control over their own experience whenever possible. Provide title attributes and if they want it, they&#39;ll have it; if they don&#39;t want it, it won&#39;t slow them down.&lt;/p&gt;
&lt;p&gt;In any case, the main point is that ALT text and accessibility in general is not always an obvious formula. Sometimes there are tensions to navigate. The most important part is that you are thinking about it, and when possible listening to the real experiences of users to steadily improve how to navigate those tensions.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Composer: Options for a Submodule</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-07-09-drupal-subprojects/"/>
		<updated>2023-07-09T19:12:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-07-09-drupal-subprojects/</id>
		<content type="html">&lt;p&gt;Suppose you want to tie in another private git package, such as something that is not listed on the Drupal directory - as part of your standard build process. Here are two approaches to do that:&lt;/p&gt;
&lt;h2 id=&quot;composer&quot; tabindex=&quot;-1&quot;&gt;Composer &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-09-drupal-subprojects/#composer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Drupal packages are managed with a composer file. Composer files can pull from many sources. Most commonly in the case of a Drupal project, that means pulling in modules and themes from the Drupal directory. But it also includes the ability to pull in projects as zip files or a git project hosted elsewhere, even a private one.&lt;/p&gt;
&lt;p&gt;Here&#39;s how:&lt;/p&gt;
&lt;p&gt;Create the module that you want to pull in and give it a composer.json file. Here&#39;s an example of that file:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ryan-robinson/demo-module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal-module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Demo module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;Drupal&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;module&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;GPL-2.0+&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;drupal/core&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^9.0 || ^10&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;platform&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8.1&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add two things to the composer.json of your Drupal project:&lt;/p&gt;
&lt;p&gt;One, you need to define the source for where to get the project:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;repositories&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;vcs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;git@gitlab.com:ryan-robinson/demo-module.git&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;branch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;main&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, you need to add it to the requirements list to pull in:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;ryan-robinson/demo-module&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dev-main&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the repository is private, you&#39;ll also need an auth.json file with your personal access token. Here&#39;s an example that would work for a GitLab project:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;gitlab-token&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;gitlab.com&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;token value&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;git-submodule&quot; tabindex=&quot;-1&quot;&gt;Git Submodule &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-09-drupal-subprojects/#git-submodule&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The other approach is to make it a git submodule.&lt;/p&gt;
&lt;p&gt;The advantage of the submodule approach is if you want to be able to continue to contribute to that. You can work on the parent project and the submodule at the same time, committing them both separately. Of course that only matters I&#39;d you have permission to do so.&lt;/p&gt;
&lt;p&gt;The context I&#39;ve found myself using this: when I&#39;m developing a custom Drupal module, I need a Docker devcontainer environment to work within for testing. That&#39;s one git repository. I also need a repository for the module itself, so that it will be ready to share with other Drupal projects (often using the composer technique above). This allows me to load the devcontainer, work on the module, and commit back to the module.&lt;/p&gt;
&lt;p&gt;This can be done by running the &lt;code&gt;git submodule add&lt;/code&gt; command, e.g.:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; submodule &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;URL to module&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This generates a .gitmodules file at the project root that looks something like this:&lt;/p&gt;
&lt;pre class=&quot;language-gitmodule&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-gitmodule&quot;&gt;[submodule &quot;web/modules/custom/demo-module&quot;]
	path = web/modules/custom/demo-module
	url = [URL to module]&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Future of Microblogging Social Media</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/"/>
		<updated>2023-07-14T13:18:09Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/</id>
		<content type="html">&lt;p&gt;Twitter, Mastodon, Calckey, Bluesky, Threads... And a whole bunch more that aren&#39;t even worth mentioning in my opinion (&lt;a href=&quot;https://tech.ryanrobinson.ca/twitter-mastodon-counter-social/&quot;&gt;I did try a couple of them&lt;/a&gt;). It&#39;s an interesting time for social media, especially the microblogging format.&lt;/p&gt;
&lt;p&gt;Part of what makes it so interesting is that there are real differences in philosophies of what the Internet - and therefore, society at large - should be, not only a difference in which billionaire gets to sell all our data.&lt;/p&gt;
&lt;p&gt;So, after a particularly tumultous week, I decided now is a good time to check in with how I feel about the current options and where I see things going from here.&lt;/p&gt;
&lt;h2 id=&quot;twitter&quot; tabindex=&quot;-1&quot;&gt;Twitter &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/#twitter&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Twitter is dying. It may not fully shut down, but there&#39;s no trust of anything you read, there&#39;s lots of harassment, you&#39;re limited in how much you can even use it, there&#39;s lots of security failures and privacy violations, occasionally it goes down for several hours. &lt;a href=&quot;https://www.washingtonpost.com/technology/2023/07/13/twitter-creators-payments-right-wing/&quot;&gt;They&#39;re even now bribing far right influencers to keep people around spewing hate speech&lt;/a&gt; so yeah, if you&#39;re still viewing Twitter, or still buying ads on Twitter, you&#39;re directly funding hate speech.&lt;/p&gt;
&lt;p&gt;It&#39;s on life support and it&#39;s hard to see it lasting for much longer as anything more than Musk&#39;s vanity project.&lt;/p&gt;
&lt;h2 id=&quot;threads&quot; tabindex=&quot;-1&quot;&gt;Threads &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/#threads&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Threads from Meta is the other big corporate player, trying to claim that spot as the default microblogging platform. One big difference is that they want it to be more of a happy fun place that advertisers want to be with minimal moderation efforts required, so they&#39;re downplaying talk of real life issues.&lt;/p&gt;
&lt;p&gt;I have not personally used it. I don&#39;t use anything owned by Meta. From what I&#39;ve heard, it&#39;s a very rough start in terms of features, but as you expect from Meta&#39;s expertise, it&#39;s easy to get started and it got a huge start from brands, journalists, and influencers - the kinds that drive the network effect - in addition to everybody else. The feed is heavily algorithmic, forcefeeding you a lot of brand content instead of who you follow.&lt;/p&gt;
&lt;p&gt;Where it gets really interesting is their promise that it will be federated with the ActivityPub protocol, meaning it will not be a complete walled garden. Why are they doing that is hard to say. Maybe they think it will appease regulators. Maybe some engineer who does believe in federation proposed it without really thinking it would be approved and it got through. In any event, it&#39;s great to see. I&#39;ll respond to more of that below.&lt;/p&gt;
&lt;h2 id=&quot;bluesky&quot; tabindex=&quot;-1&quot;&gt;Bluesky &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/#bluesky&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Bluesky is the most interesting, somewhere in the middle of the spectrum. It&#39;s federated, sort of. They&#39;re promising their protocol will be available to others. But it isn&#39;t yet. And it&#39;s a unique protocol, not tying in to ActivityPub, the established standard. Which means is still exists on its own, like Twitter, at least until the protocol is done and they manage to sell others on it.&lt;/p&gt;
&lt;p&gt;In my time there, I&#39;ve struggled to see a unique selling proposition that can keep it going. It has some nice features: the options for content filters, being able to subscribe to someone else&#39;s mute list which can shut down problem accounts faster, making your username a domain you own, some degree of customizing your feeds. But as I learned back in the Google+ days, features alone do not a social network make, especially once the established players start copying the best ideas.&lt;/p&gt;
&lt;p&gt;The unique selling proposition so far seems to be that it is not as much of a cesspool as Twitter, not as confusing to sign up as Mastodon, and not controlled by an evil megacorp like Threads. That comes from the exclusivity of being invite only at this point: most of the people who are there are more or less on the same page with what they want from this network.&lt;/p&gt;
&lt;p&gt;But the seams are showing with each time it fails to moderate well - they don&#39;t even have a trust and safety leadership structure - and as the user base steadily grows. As eventually happened with Facebook, exclusivity isn&#39;t much of a selling point when it will get more inclusive over time. Facebook survived because there wasn&#39;t much in the way of competition. But for Bluesky? There&#39;s plenty fighting for this space right now.&lt;/p&gt;
&lt;p&gt;And more to the point, most of the people I see there I don&#39;t think really want exclusivity forever. A lot are socially conscious &amp;quot;shitposters&amp;quot; and journalists and authors. I was for a while referring to the first group mostly as activists, but I&#39;ve realized that isn&#39;t quite right. They&#39;re more like we saw a lot on Twitter, people who compete for the most snarky response to whatever the story of the day is that we&#39;re all angry about, then move on to the next thing tomorrow. That&#39;s not so much activism, which is usually more focused on long-term efforts toward a specific cause.&lt;/p&gt;
&lt;p&gt;But in any case, wherever it falls in the activism work vs shitposting spectrum, it can only go so far in a closed bubble. Most of them are still on Twitter and/or on Threads as well for that reason. So how long do they want to spend also focusing efforts on Bluesky? Or do they keep it as their secondary place of rest, to recover from the more frontline work elsewhere?&lt;/p&gt;
&lt;p&gt;I see that fading out as the exclusivity fades and the lack of trust and safety becomes more obvious, and I&#39;m not sure they&#39;ll have any other selling point to replace it. Bluesky seems to think the selling point is their protocol, but it&#39;s not even done yet and most people don&#39;t care about federation. Those who do are already in the fediverse.&lt;/p&gt;
&lt;p&gt;Maybe I&#39;m wrong. Maybe they hire a big moderation team that sets the new gold standard for protecting marginalized people. That would certainly be a selling point. But they aren&#39;t doing that so far and that makes me think they don&#39;t have much of a future.&lt;/p&gt;
&lt;h2 id=&quot;the-open-fediverse-mastodon-and-calckey&quot; tabindex=&quot;-1&quot;&gt;The Open Fediverse: Mastodon and Calckey &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/#the-open-fediverse-mastodon-and-calckey&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Mastodon is where I have mostly found my home (@&lt;a href=&quot;mailto:Ryan@mstdn.ca&quot;&gt;Ryan@mstdn.ca&lt;/a&gt;). It&#39;s got years of stability in its extensive features - some would argue too many features that make it harder to use. It&#39;s on the ActivityPub protocol so it connects with other fediverse projects, including eventually Threads. The complaints are mostly that it is hard to use, especially signing up and having to pick a server.&lt;/p&gt;
&lt;p&gt;Calckey is another in the fediverse that addresses some of the concerns many have with Mastodon, like full text search and quote posts.&lt;/p&gt;
&lt;p&gt;There are lots more that I won&#39;t get into: Pixelfed for photos (think Instagram), Bookwyrm for book reviews (think Goodreads), Lemmy or Kbin for forum-like conversations (Reddit)@. They can all talk to each other. That&#39;s a pretty promising future.&lt;/p&gt;
&lt;h2 id=&quot;predicting-the-future&quot; tabindex=&quot;-1&quot;&gt;Predicting the Future &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-07-14-Future-Microblogging/#predicting-the-future&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My guess of what happens is we end up like email. A few big corporate giants control most of the email: Google, Microsoft, etc. They offer the service for free in exchange for mining data and showing ads, or in some cases also with a subscription offer that doesn&#39;t show ads for a monthly fee (Microsoft 365 Home includes this). It&#39;s a quality service, with many professionals working on problems like spam prevention and security patching. That&#39;s likely to be Threads the way things are currently going.&lt;/p&gt;
&lt;p&gt;But it is possible to run your own email server that can send messages to and receive messages from the big ones or other small email servers. It&#39;s not easy. You&#39;ll have to meet some fairly high security standards and spam prevention. But you can. That&#39;s a lot of the smaller cases of people running their own Mastodon or other servers for a few dollars a month.&lt;/p&gt;
&lt;p&gt;Or you can pay for a professional version of email, like Microsoft 365 Business. There&#39;s no ad scrapings, they&#39;ll take care of most of the security and maintenance, and you just need to pay a few dollars a month and configure it to your liking. That&#39;s a great option if you can afford it. In this comparison, that might be some of the bigger fediverse instances. Most of them operate on a donation basis. You don&#39;t have to support them financially, but somebody does have to or it won&#39;t keep going.&lt;/p&gt;
&lt;p&gt;I suspect that&#39;s where we get with microblogging, and I&#39;ll consider that a huge win. Threads may be the equivalent of Gmail, that many have. Most people will still opt for giving all their data to a billionaire for the right to look at ads, in exchange for all the ease of use that a company like Meta or Google can provide. But you will have some choice other than that and being a hermit, an option that has been increasingly tempting for me over the last 10 years. Maybe you host your own ActivityPub service. Maybe you pay somebody else. Maybe they implement ads but without the data mining. Maybe you stay on somebody else&#39;s without ever giving back or seeing ads. But I am happy that at least in this future there would be options.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Add Role Based on File</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-08-07-Role-File/"/>
		<updated>2023-08-07T17:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-08-07-Role-File/</id>
		<content type="html">&lt;p&gt;A while ago I wrote about, and shared sample code for, adding a role to a user when they log in if their name appears in a file on the server. That was a Drupal 7 sample.&lt;/p&gt;
&lt;p&gt;I&#39;ve now updated that for Drupal 9 and created &lt;a href=&quot;https://github.com/ryan-l-robinson/drupal-9-permissions-from-file&quot;&gt;a project in my GitHub&lt;/a&gt;. It&#39;s relatively straightforward so I won&#39;t provide a line by line breakdown again.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Church Website Content</title>
		<link href="https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/"/>
		<updated>2023-08-07T18:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/</id>
		<content type="html">&lt;p&gt;This is not my usual type of content for this site, but I was reminded of it from a Mastodon conversation and wanted to put it somewhere more or less permanent. Before building the latest iteration of my church&#39;s website several years ago, I put out the question on Twitter for what information people want before they would consider visiting. I sent those to the church leadership and still had the document, so I looked it up to summarize those questions again below:&lt;/p&gt;
&lt;h2 id=&quot;sunday-worship&quot; tabindex=&quot;-1&quot;&gt;Sunday Worship &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#sunday-worship&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When does the service begin and end?&lt;/p&gt;
&lt;p&gt;Is there a nursery for infants and toddlers? Something for children and youth?&lt;/p&gt;
&lt;p&gt;Are children welcome in the service, even if they make noise?&lt;/p&gt;
&lt;p&gt;Is there adult education?&lt;/p&gt;
&lt;p&gt;What&#39;s the (usually unspoken) dress code?&lt;/p&gt;
&lt;p&gt;Is there parking? Bike racks? Transit nearby?&lt;/p&gt;
&lt;p&gt;Where&#39;s the main entrance?&lt;/p&gt;
&lt;p&gt;Is there coffee available?&lt;/p&gt;
&lt;h2 id=&quot;inclusivity&quot; tabindex=&quot;-1&quot;&gt;Inclusivity &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#inclusivity&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Is the building accessible with a wheelchair?&lt;/p&gt;
&lt;p&gt;Is there assistance for those with hearing impairments?&lt;/p&gt;
&lt;p&gt;(You could add more specific disabilities)&lt;/p&gt;
&lt;p&gt;Are women or non-binary people involved in leadership? Could they be a pastor?&lt;/p&gt;
&lt;p&gt;Do you have a gender neutral washroom?&lt;/p&gt;
&lt;p&gt;Could an LGBTQ+ person be your pastor?&lt;/p&gt;
&lt;p&gt;Would your pastor marry a same-sex couple?&lt;/p&gt;
&lt;p&gt;How well does the racial demographics of the church match the wider community?&lt;/p&gt;
&lt;h2 id=&quot;other-ministries&quot; tabindex=&quot;-1&quot;&gt;Other Ministries &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#other-ministries&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Is there a youth group? What do they do? How often do they meet? What&#39;s your understanding of youth discipleship?&lt;/p&gt;
&lt;p&gt;What areas of social justice and community work do you do?&lt;/p&gt;
&lt;p&gt;What social groups can I join?&lt;/p&gt;
&lt;p&gt;What about Prayer groups? Or Bible study groups?&lt;/p&gt;
&lt;h2 id=&quot;rental-of-facilities&quot; tabindex=&quot;-1&quot;&gt;Rental of Facilities &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#rental-of-facilities&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Can I use the space for weddings or concerts?&lt;/p&gt;
&lt;p&gt;Do I have to be a member?&lt;/p&gt;
&lt;p&gt;How many does it seat?&lt;/p&gt;
&lt;p&gt;What does it cost? Is there any discount (or free) for indigenous groups whose land you are on?&lt;/p&gt;
&lt;h2 id=&quot;theology&quot; tabindex=&quot;-1&quot;&gt;Theology &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#theology&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most did not want a full statement of faith on every possible question, but they wanted to know key values of the community that shape how the church tackles all those other questions.&lt;/p&gt;
&lt;p&gt;Are you starting from the love of God or from an inerrant Bible or something else?&lt;/p&gt;
&lt;p&gt;Is there a denominational affiliation?&lt;/p&gt;
&lt;h2 id=&quot;other&quot; tabindex=&quot;-1&quot;&gt;Other &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2023-08-07-church-site-content/#other&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Can I donate online?&lt;/p&gt;
&lt;p&gt;How do I contact someone and who do I contact for what needs?&lt;/p&gt;
&lt;p&gt;Can I see a calendar of upcoming events?&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Text Underline Position</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-02-21-text-position-underline/"/>
		<updated>2024-02-21T15:22:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-02-21-text-position-underline/</id>
		<content type="html">&lt;p&gt;This one is a quick accessibility CSS tip. I have long been a proponent of the old standard of underlining links, and never underlining anything else. It helps make it clear that it is a link. Add a hover and focus effect to make it more obvious when they are selecting it, too.&lt;/p&gt;
&lt;p&gt;But it can introduce a problem: for certain reading disabilities, the line being close up against the text can make it hard to read. Even for myself without one of those disabilities, once it was flagged for me I immediately saw it every time I looked at a link.&lt;/p&gt;
&lt;p&gt;So here&#39;s a quick CSS solution that significantly helps.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;text-underline-position: under&lt;/code&gt; to make links with underlines easier to read. It moves the underline down to the bottom of the hanging letters (g, y, j) rather than right up tight against the bottom of other letters and cutting right through the middle of the hanging letters. It may not quite be perfect - even better might be a few pixels below the hanging letters to get space there as well - but it solves the majority of the problem with one quick CSS change.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>VS Code Extensions: My Workflows</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-02-21-VS-Code-Extensions/"/>
		<updated>2024-02-21T18:31:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-02-21-VS-Code-Extensions/</id>
		<content type="html">&lt;p&gt;When it comes to my VS Code extensions, I have mine set up a few different ways depending on what kind of project I&#39;m working on:&lt;/p&gt;
&lt;h2 id=&quot;default&quot; tabindex=&quot;-1&quot;&gt;Default &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-VS-Code-Extensions/#default&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are the default plugins I have locally installed, for every profile and every project container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright&quot;&gt;Playwright Tests for VS code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree&quot;&gt;Todo Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bmuskalla.vscode-tldr&quot;&gt;tl;dr pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&quot;&gt;vscode-icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;static-sites&quot; tabindex=&quot;-1&quot;&gt;Static Sites &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-VS-Code-Extensions/#static-sites&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;These are additional plugins which come in handy with building static sites like this one and ryanrobinson.ca:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&quot;&gt;Markdown All in One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint&quot;&gt;Markdown lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eliostruyf.vscode-front-matter&quot;&gt;Front Matter CMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;containers-remote-wordpress-drupal&quot; tabindex=&quot;-1&quot;&gt;Containers/Remote (WordPress/Drupal) &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-VS-Code-Extensions/#containers-remote-wordpress-drupal&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This profile includes the basic requirements to connect to containers and/or remote:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;Dev Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&quot;&gt;Remote SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each container, using the devcontainer.json functionality, can also define new extensions for that container. So here&#39;s an example of doing that for a Drupal site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-mysql-client2&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Stanislav.vscode-drupal&quot;&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=whatwedo.twig&quot;&gt;Twig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DEVSENSE.phptools-vscode&quot;&gt;PHPTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Dark Content Mode</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-02-21-Dark-Content-Mode/"/>
		<updated>2024-02-21T21:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-02-21-Dark-Content-Mode/</id>
		<content type="html">&lt;p&gt;In case you haven&#39;t caught it yet, there&#39;s new functionality coming to browsers for dark mode applied to content. This could come as a surprise to web developers who did not plan for dark mode in their design, but is overall a win for those of us who prefer dark mode on all the things all the time.&lt;/p&gt;
&lt;p&gt;It&#39;s already become my default on Android Edge, inheriting that I have my device in dark mode. I haven&#39;t found it to be default on any other browser (including desktop Edge). Chrome has it as an experiment features flag in chrome://flags, so I did most of my testing by enabling that.&lt;/p&gt;
&lt;h2 id=&quot;issues-found&quot; tabindex=&quot;-1&quot;&gt;Issues Found &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Dark-Content-Mode/#issues-found&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The biggest problem I found in my main work site was with images that were previously assuming white backgrounds. I found the nicest solution to that was using an SVG instead of a PNG file, which the dark content mode adapted to invert the colours quite nicely.&lt;/p&gt;
&lt;p&gt;There were also some insufficient contrast I discovered, like grey borders around form text boxes, that were maybe a little weak in light mode but were barely visible in dark mode. Many of these were quickly solvable by making it a stronger contrast. For example, instead of a grey border against the white background, I made it into a black border. It content dark mode, it would flip to a white border on black background. Both modes came out looking better.&lt;/p&gt;
&lt;p&gt;I identified a few other contrast elements that were not quite ideal. But attempting a similar approach did not work. There were a few variations where I had black against the default light theme and trying it with the dark content mode turned it into a grey instead of a white - far from invisible, but not as strong of a contrast as I wanted. This is a new feature, not enabled by default other than that Android Edge that few people use, so I&#39;m hoping this gets cleaned up on the browser end and there isn&#39;t much else I need to do.&lt;/p&gt;
&lt;h2 id=&quot;no-way-to-target&quot; tabindex=&quot;-1&quot;&gt;No Way to Target? &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Dark-Content-Mode/#no-way-to-target&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I tried the media query for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefers-color-scheme&lt;/a&gt; but it doesn&#39;t help for this. That detects if the device prefers dark mode, not if the browser&#39;s dark content mode is on. It&#39;s nice if you want to specifically define what everything should look like in dark vs light modes. But as far as I could find, there&#39;s no way to specifically target content dark mode at this time.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal: Open Menu</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/"/>
		<updated>2024-02-21T22:44:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/idrc-presentation/&quot;&gt;In a previous related post, I wrote about some lessons in a co-design project of an open menu, with a video where we presented about it to the IDRC&lt;/a&gt;. That was mostly about the process and this is about the result: a header navigation page on a Drupal 9 site. The goal was to provide an overview of the same information that’s in the main navigation, but in a more accessible way for screen readers and with descriptions that provide more information about the page without having to load the page. It was not a complete index of every page on the site; it was only an alternate format for the menu.&lt;/p&gt;
&lt;p&gt;As mentioned in that previous post, an important requirement is that it must update programmatically; we cannot leave it as a separate manually-updated page, because realistically it would only be a matter of time before somebody updated the menu but not the header navigation page.&lt;/p&gt;
&lt;p&gt;There&#39;s &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu&quot;&gt;a GitPod demo version of my solution on my GitHub&lt;/a&gt;. That’s only the relevant customizations, not a full functioning site, and you&#39;d need to add a couple of menu items to really see it in action.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example screenshot of the open menu structure:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2024/open-menu-example.png&quot; alt=&quot;&amp;quot;Open Menu page. After an introductory description, there is a sample page at the top level that is an h2 and a sample page below that at an h3.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;menu-entity-index&quot; tabindex=&quot;-1&quot;&gt;Menu Entity Index &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/#menu-entity-index&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you’re familiar with Drupal, you likely read the introduction and immediately thought of views. Views are the perfect solution whenever you are looking at a scenario involving one data source displayed in multiple ways. Drupal 9 does not expose everything I needed to views on its own, but there is a module that fills in the gap: &lt;a href=&quot;https://www.drupal.org/project/menu_entity_index&quot;&gt;Menu Entity Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once that is installed, you’ll need to configure it. I did not find the settings page intuitive at all, but the first block of settings is which menus need to be indexed and the second block is which types of target to index. In my case, I only want to index content in the main navigation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tech.ryanrobinson.ca/assets/img/2024/menu-entity-index-settings.png&quot; alt=&quot;&amp;quot;Settings for menu entity index. The first block is tracked menus and the second is tracked entity types.&amp;quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Notably, it cannot index views pages, so for this scheme to work, you can’t use views pages in the menu. Fortunately you can still make a views block, put that on a page, and put that page in the menu.&lt;/p&gt;
&lt;h2 id=&quot;configure-the-view&quot; tabindex=&quot;-1&quot;&gt;Configure the view &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/#configure-the-view&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The configuration for the view itself won&#39;t be too much of a surprise for anybody who has configured views before. It has a grouped block for each second-level menu, where the header had a programmatically-set ID so that they can be used for links (both from that top block and from the top level of the main menu itself). There&#39;s a lot of mundane configuration here so I won&#39;t break it all down, but &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/sync/config/views.view.open_menu.yml&quot;&gt;here&#39;s the configuration file&lt;/a&gt; if you want to import to your site, or you can check it out using the GitPod demo and going to Structure -&amp;gt; Views -&amp;gt; Open Menu.&lt;/p&gt;
&lt;h2 id=&quot;overriding-the-view-template&quot; tabindex=&quot;-1&quot;&gt;Overriding the view template &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/#overriding-the-view-template&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I still had one more problem. The view involved used the grouping function to bunch together the results. I wanted the group label to be an h2 and have an id on it, so I did that using the rewrite the results functions. That worked with no issues.&lt;/p&gt;
&lt;p&gt;But I noticed it was also supplying an empty h3 immediately before my h2. That doesn’t hurt sighted users, but it does complicate the experience for screen reader users. It took some time to realize the h3 was coming from a template file in the views core module: views-view-unformatted.&lt;/p&gt;
&lt;p&gt;Once I knew the source of the original file, I could edit it directly, but that would be lost as soon as there was an update to the theme. The more permanent answer is a subtheme with an override of that file. That seems a little excessive in the case of this demo, but in a real site you&#39;ll probably want a custom subtheme for all your CSS and templates anyway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/web/themes/custom/demo/templates/views/views-view-unformatted.html.twig&quot;&gt;That file is also in the GitHub&lt;/a&gt;, but it was a pretty tiny change removing the h3 wrapper from the grouping.&lt;/p&gt;
&lt;h2 id=&quot;caveats&quot; tabindex=&quot;-1&quot;&gt;Caveats &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-Open-Menu/#caveats&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a few caveats to this system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s no handling for menu items more than 2 levels deep. That may well be possible, but we didn&#39;t need it, so I haven&#39;t included it in this demo.&lt;/li&gt;
&lt;li&gt;No views pages in the menu will show up in the open menu. But view blocks inserted into a page, where the page is in the menu, will show up.&lt;/li&gt;
&lt;li&gt;Be very careful changing the module settings. Perhaps this is fixed two years later, but at the time, attempting to index certain entity types would result in a white screen of death on the next cron run. We&#39;ve never had problems with indexing content.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You could add some built-in warnings to the admin interface, or even override admin forms, to try to suppress the possibility of those caveats causing a problem, but this blog post was long enough so I&#39;ll leave it here.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>IDRC Presentation on Open Menu</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-02-21-IDRC-Presentation/"/>
		<updated>2024-02-21T23:22:36Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-02-21-IDRC-Presentation/</id>
		<content type="html">&lt;p&gt;I recently joined the Inclusive Design Research Centre to present along with a couple of colleagues how we designed an &amp;quot;open menu&amp;quot;, a header-focused main menu navigation that works much better for screen reader users and also provides some other benefits like a Ctrl+F find.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fluidproject.atlassian.net/wiki/spaces/fluid/pages/11513504/Community+workshops+and+design+crits&quot;&gt;The video is available on the IDRC wiki.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don&#39;t have a transcription of the entire presentation, but here are some of my key notes from the perspective of the Drupal developer.&lt;/p&gt;
&lt;h2 id=&quot;the-process&quot; tabindex=&quot;-1&quot;&gt;The Process &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-IDRC-Presentation/#the-process&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The co-design process loop often went something like: Ashley (accessibility consultant) described what worked and what didn&#39;t about her experience as a screen reader user, Mark (digital experiences librarian) made an HTML mockup of what we should try instead, and I figured out how to make Drupal do that in the best and most sustainable way. Repeat as necessary until we&#39;re all happy with the results.&lt;/p&gt;
&lt;p&gt;I had to consider several issues, not only accessibility. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timeline: One bit of important context was the launch timeline. I had just been hired and I was learning my way around the old site at the same time I was beginning the new site. We had a deadline for the new site to launch, what was at the time expected to be the Drupal 7 end of life (it got extended again after that). These menu considerations came as part of this rebuild process. That meant there was some balancing between what is ideal and what can be done in time.&lt;/li&gt;
&lt;li&gt;Security: Failure to meet that timeline would have security implications if we didn&#39;t meet it. We could have launched the open menu after launching the new site, in order to hit the end of life deadlines, but it would have been awkward at best and required restructuring the main visual menu at worst.&lt;/li&gt;
&lt;li&gt;Visuals: While not the main focus of this feature, there is visual design for sighted users to consider. We want it to still be attractive and easy to use for sighted users as long as it doesn&#39;t come at the cost of screen reader users.&lt;/li&gt;
&lt;li&gt;Maintainability: How do we ensure we keep this working and accurate? A major important point to me was that there needed to be one source of information that fed both the collapsed menu and the open menu. Otherwise, there&#39;s a high likelihood that at some point the two will get out of sync with each other, where somebody adds to or rearranges the collapsible menu without considering the open menu or vice versa. Sometimes an inaccurate accessibility feature is worse than no accessibility feature at all, because people wouldn&#39;t think to go try the less-ideal collapsible menu if they&#39;ve been assured they have all the same content.&lt;/li&gt;
&lt;li&gt;Open source models: What can be done in Drupal core, what in a contributed theme, what in a contributed module, what in custom code? If a module is close to what we need but not quite there, how do we navigate what we report and try to get the maintainer to change vs what we should rebuild ourselves?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;lessons&quot; tabindex=&quot;-1&quot;&gt;Lessons &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-IDRC-Presentation/#lessons&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This was a fascinating project for me in ways much deeper than the technical details. So here&#39;s a few things that stood out to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Empathy vs checklist: The biggest lesson is that personal experiences of disabled people really matter. I&#39;d worked with accessibility before, but mostly at the level of a WCAG (Web Content Accessibility Guidelines) checklist in a contract consultancy context where finishing the job under the budget was the main priority. This whole project was a great example of taking the time to get it truly right to real user experiences. Ashley explained that even though a standard Drupal menu passes the checklist, it can be really time-consuming for her. Hire someone if you can to fill that same role. It opened my eyes to a more emphathetic approach rather than a checklist approach. Maybe you can&#39;t hire somebody - most of us can&#39;t, and even our time with Ashley was limited - but at least take the time to sit and try to imagine what it would feel like to do this without sight, or without hearing, or without a mouse. Don&#39;t just hit the WAVE extension button in your browser and declare it done.&lt;/li&gt;
&lt;li&gt;Multiple solutions: Sometimes there isn&#39;t one solution that is perfect for everybody. We tried to figure out a way to make a menu that was optimal for all users. But the reality is that the standard collapsed navigation is ideal, tuned over decades of web development, for most sighted users who can skim at a glance without it taking much cognitive load. So we took an additive approach instead, keeping both versions of the menu. In hindsight this isn&#39;t really that shocking - we do the same for things like having a video and a transcript - but I hadn&#39;t really thought about it for something as central as the main navigation.&lt;/li&gt;
&lt;li&gt;Jargon: Getting the descriptions for each page was more challenging than expected and one of the reasons why were questions about jargon. Often in talking about accessibility, we talk about wanting the most generic phrasing that everybody understands, avoiding jargon. That&#39;s great for new users not familiar with the jargon. But there is a tradeoff for those who are familiar with it: that&#39;s probably what they&#39;re looking for. If they&#39;re looking for the jargon and it isn&#39;t in the description, it doesn&#39;t show up from a site search or in the open menu items page where a Ctrl+F might find it. Some of that could be mitigated by including the jargon and the broader definition, but that has &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/accessibility-descriptive/&quot;&gt;a tradeoff of making the content longer to sift through, which is especially more time consuming on a screen reader&lt;/a&gt;. Making it more accessible to one group can make it less accessible for others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;coming-soon&quot; tabindex=&quot;-1&quot;&gt;Coming Soon &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-02-21-IDRC-Presentation/#coming-soon&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have another post coming about how this was technically achieved, which was relatively straightforward. The bigger lessons were here, in the process, but I do want to share how it was done for those that are interested in replicating it.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal Dev Environment Updated: The Dockerfiles</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/"/>
		<updated>2024-03-25T00:16:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/</id>
		<content type="html">&lt;p&gt;A while ago I wrote about building a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;Docker Desktop dev environment for Drupal&lt;/a&gt;. It was built on Oracle Linux, a requirement in that context, with three images for Apache, PHP, and MySQL. But there were some significant problems with it, first and foremost that it was very slow. So, this is another version, now based on one of the official Drupal images instead of the Oracle Linux ones. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;It can be seen on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;the-web-image&quot; tabindex=&quot;-1&quot;&gt;The Web Image &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/#the-web-image&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This new setup has both Apache and PHP in the same container, is about 40% of the total image size compared to the previous one, and runs much faster, probably because Apache and PHP are in the same container instead of having to communicate across the network. Let&#39;s start with the basic start to the image and its shell.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM drupal:php8.2-apache
USER root
SHELL [&quot;/bin/bash&quot;, &quot;-c&quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the extra useful packages - some of the most essential ones are already included in the Drupal image - and PHP development settings. The file copied from the PHP folder covers some of the XDebug configuration settings.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Install needed repositories and general packages, and put the php.ini in place
RUN apt-get update -y &#92;
    &amp;&amp; apt-get install -y wget git zip which sudo vim locales default-mysql-client docker nodejs npm &#92;
    &amp;&amp; apt-get upgrade -y &#92;
    &amp;&amp; mv /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini

# Install PHP extensions, using PECL
RUN pecl channel-update pecl.php.net &#92;
    &amp;&amp; pecl install apcu xdebug uploadprogress &#92;
    &amp;&amp; docker-php-ext-enable apcu &#92;
    &amp;&amp; echo &quot;apc.enable_cli=1&quot; &gt;&gt; /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini &#92;
    &amp;&amp; docker-php-ext-enable xdebug &#92;
    &amp;&amp; touch /var/log/xdebug.log &#92;
    &amp;&amp; chown www-data:www-data /var/log/xdebug.log &#92;
    &amp;&amp; docker-php-ext-enable uploadprogress
COPY /php /usr/local/etc/php/conf.d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let the default www-data user have sudo permission without passwords, which would not be the way to go in production but in a development environment is pretty useful in case you ever need to do things like install a new package without rebuilding the whole environment.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Add www-data user to sudo group, and allow those users to sudo without password
RUN usermod -a -G sudo www-data &#92;
    &amp;&amp; usermod -d /user/www-data www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.vscode-server &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.ssh &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data/.ssh &#92;
    &amp;&amp; chmod 700 -R /user/www-data/.ssh &#92;
    &amp;&amp; ssh-keyscan -t rsa gitlab.com &gt;&gt; /user/www-data/.ssh/known_hosts &#92;
    &amp;&amp; sed -i &quot;s/%sudo	ALL=(ALL:ALL) ALL/%sudo	ALL=(ALL)	NOPASSWD: ALL/g&quot; /etc/sudoers&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fix a locale error that shows up once Apache is running, by specifying the locale it is running in. In my case, that&#39;s Canada, with Canadian English.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Fixes locale errors, must happen before Apache. This is using my locale of Canada
RUN echo &quot;LC_ALL=en_CA.UTF-8&quot; &gt;&gt; /etc/environment &#92;
    &amp;&amp; echo &quot;en_CA.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.gen &#92;
    &amp;&amp; echo &quot;LANG=en_CA.UTF-8&quot; &gt; /etc/locale.conf &#92;
    &amp;&amp; locale-gen en_CA.UTF-8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a self-signed certificate for the Apache configuration, so that we&#39;ll be able to browse the site locally with HTTPS.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Apache configuration, including SSL certificates and logs
COPY /apache /etc/apache2
RUN a2enmod ssl &#92;
    &amp;&amp; mkdir -p /etc/apache2/certs &#92;
    &amp;&amp; openssl req -batch -newkey rsa:4096 -nodes -sha256 -keyout /etc/apache2/certs/example.com.key -x509 -days 3650 -out /etc/apache2/certs/example.com.crt -config /etc/apache2/certs/openssl-config.txt &#92;
    &amp;&amp; chown -R root:www-data /etc/apache2 &#92;
    &amp;&amp; chmod 770 -R /etc/apache2/certs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Increase some of the default resource limits for PHP. The defaults never seem to be nearly enough for Drupal. These go much larger, larger than you really need on production, but on local development it is easier to be safe than sorry.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Increase resources for PHP
RUN sed -i &quot;s/max_execution_time = 30/max_execution_time = 300/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/max_input_time = 60/max_input_time = 600/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/memory_limit = 128M/memory_limit = 2048M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/upload_max_filesize = 2M/upload_max_filesize = 128M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/post_max_size = 8M/post_max_size = 256M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/;max_input_vars = 1000/max_input_vars = 10000/g&quot; /usr/local/etc/php/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a minor thing, but I like when I grep through code to see results with the colour highlights, making it much easier to read. That can be done by setting an environment variable and putting an alias for grep into a bashrc file.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Set up nicer grep results
ENV GREP_COLORS=&#39;mt=1;37;41&#39;
COPY .bashrc /user/www-data/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Line up the script that will be run after creating the images. That script will handle setting up the Drupal database, but I&#39;ll cover that more in the next post.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Scripts for further actions to take on creation and attachment
COPY ./scripts/postCreateCommand.sh /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy the Drupal settings file and the local services file. The former is the essential settings for any Drupal site, including being able to connect to the database. The latter is not essential but enables some of the development features that are ideal in local development, like seeing comments in the generated HTML code that shows you what template is being used to generate it.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Drupal configuration
COPY /drupal /web/sites&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, set the permissions on the main Drupal folder as well as on the script that we&#39;ll need to be able to run.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;RUN chown -R www-data:www-data /opt/drupal &#92;
    &amp;&amp; chown www-data:www-data /postCreateCommand.sh &#92;
    &amp;&amp; chmod 777 /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Much of this is the same as the previous version: adding a self-signed SSL certificate, increasing PHP resources. But a few things changed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many of the PHP extensions are already installed from the Drupal image so I didn&#39;t need to do them again in this Dockerfile.&lt;/li&gt;
&lt;li&gt;It needs a lot more overriding the permissions since that Drupal image already comes with a Drupal install in that /opt/drupal directory and with the www-data user, and with some as volumes which mean they immediately revert to root ownership when you attach to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-database-image&quot; tabindex=&quot;-1&quot;&gt;The Database Image &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/#the-database-image&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s the entire Dockerfile:&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use the default MariaDB image
FROM mariadb:latest

ENV MARIADB_ROOT_PASSWORD=drupalroot
ENV MARIADB_DATABASE=drupal
ENV MARIADB_USER=drupal
ENV MARIADB_PASSWORD=drupal

# Expose the MySQL port to be accessible to the web container.
EXPOSE 3306&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is essentially no change from the previous one, just setting the environment variables to define the database and its access.&lt;/p&gt;
&lt;h2 id=&quot;docker-compose&quot; tabindex=&quot;-1&quot;&gt;Docker Compose &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/#docker-compose&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The docker compose file is not doing anything too unusual. The main thing of note is the volumes. I do not have the entire /opt/drupal set up as volumes. That&#39;s because when you attach to it, the entire area would get its permissions reassigned back to root, which causes issues. It&#39;s also not very efficient, since I really don&#39;t need things like the core files and contributed modules in the vendor folder to be persistent. So instead, it defines the pieces that are relevant to be able to build it, as well as the private and public folders where I might want to download a file for testing that the site can use.&lt;/p&gt;
&lt;p&gt;I also have it set up to share my user profile&#39;s SSH keys and preferred settings like the my commit name, so that I can connect to the repository without having to configure it all again with every new build.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.9&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;443:443&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.devcontainer/:/opt/drupal/.devcontainer/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.git/:/opt/drupal/.git/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.gitignore:/opt/drupal/.gitignore&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.vscode/:/opt/drupal/.vscode/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./patches/:/opt/drupal/patches/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./private/:/opt/drupal/private/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./sync/:/opt/drupal/sync/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./web/sites/default/files/:/opt/drupal/web/sites/default/files/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.json:/opt/drupal/composer.json&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.lock:/opt/drupal/composer.lock&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./docker-compose.yml:/opt/drupal/docker-compose.yml&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./README.md:/opt/drupal/README.md&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.ssh/:/user/www-data/.ssh/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.gitconfig:/user/www-data/.gitconfig&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;www-data:www-data&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; db
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;next-post&quot; tabindex=&quot;-1&quot;&gt;Next Post &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-03-24-Dev-Env-Updated-Dockerfiles/#next-post&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the next post, I&#39;ll mention some of the changes to the devcontainer.json file and to the postCreateCommand script, although there&#39;s nothing too drastic there.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Drupal Dev Environment Updated: The DevContainer</title>
		<link href="https://tech.ryanrobinson.ca/posts/2024-04-08-Dev-Env-Updated/"/>
		<updated>2024-04-08T15:46:00Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/2024-04-08-Dev-Env-Updated/</id>
		<content type="html">&lt;p&gt;This continues from &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/drupal/dev-env-updated/&quot;&gt;a previous post&lt;/a&gt; about a new Drupal dev environment, a significant upgrade from some previous posts that you can find on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;the Drupal Docker tag&lt;/a&gt;. That covered the Dockerfiles, while this will cover changes to the Devcontainer.json and the postCreateCommand script. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;The whole project&#39;s code can be found on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;devcontainer&quot; tabindex=&quot;-1&quot;&gt;Devcontainer &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-04-08-Dev-Env-Updated/#devcontainer&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;What changed in devcontainer from the previous setup? A few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I reviewed several of the extensions and made some changes. The most significant are adding Playwright testing (maybe I&#39;ll be able to write more about that later), the PHP tools extension, and the Drupal extension. Between them I now have much stronger error detection, deprecation warnings, testing, and formatting to meet the Drupal standards. Some more notes about useful extensions are in &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/vs-code/extensions-2024/&quot;&gt;my recent post about what extensions I use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The postAttachCommand has to set the permissions again with each new time attaching to it, so the files that are set up as volumes don&#39;t revert to root.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;postcreatecommand&quot; tabindex=&quot;-1&quot;&gt;postCreateCommand &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-04-08-Dev-Env-Updated/#postcreatecommand&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is mostly the same, at least for now: it installs all composer packages and sets up the database on the first time creating these images. A few things were able to be removed to simplify this script, functions like creating the database that are handled more easily in other ways.&lt;/p&gt;
&lt;p&gt;What it still does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installs composer packages.&lt;/li&gt;
&lt;li&gt;Puts the Drupal settings and local services files in place. This comes after the composer install so that the basic Drupal file structure is there already.&lt;/li&gt;
&lt;li&gt;Import the site&#39;s configuration using drush.&lt;/li&gt;
&lt;li&gt;Set the admin password.&lt;/li&gt;
&lt;li&gt;Rebuild the node access cache. There aren&#39;t any nodes yet, but there is a warning on the site status for a bit if this function isn&#39;t included, so it&#39;s one extra command to save some confusion.&lt;/li&gt;
&lt;li&gt;Sets the environment indicator theme.&lt;/li&gt;
&lt;li&gt;Clears the site&#39;s caches to reflect all changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;next-gitlab-github-ci-cd-updates&quot; tabindex=&quot;-1&quot;&gt;Next: GitLab/GitHub CI/CD Updates &lt;a class=&quot;header-anchor&quot; href=&quot;https://tech.ryanrobinson.ca/posts/2024-04-08-Dev-Env-Updated/#next-gitlab-github-ci-cd-updates&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&#39;m going to continue with this by now improving it a step farther: instead of building the images each time on local, have it build in GitHub or GitLab programmatically, and then saving it alongside the repository in those platforms&#39; respective container registries. Then when it is time to start a new local development environment, it only needs to pull the latest image, not build it again. That saves time, especially if you have to switch between branches and especially if you have multiple team members who would otherwise all be spending time building it individually. This will include moving most of the postCreateCommand functionality into the GitLab CI / GitHub Actions, for both the web and database containers.&lt;/p&gt;
&lt;p&gt;I already have this working in my real context using GitLab. I have less experience with GitHub Actions but am working on doing the same idea there for a more shareable version.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>VS Code: University Colour Palettes</title>
		<link href="https://tech.ryanrobinson.ca/posts/VS-Code-University-Colour-Palettes/"/>
		<updated>2024-04-08T17:10:28Z</updated>
		<id>https://tech.ryanrobinson.ca/posts/VS-Code-University-Colour-Palettes/</id>
		<content type="html">&lt;p&gt;I like changing colour palettes on my various workspaces. It’s especially nice when in situations like jumping between personal and work spaces of the same app, or multiple clients, or dev vs staging vs production servers. It&#39;s a great way to quickly adjust what I&#39;m thinking about, e.g. if I&#39;m seeing yellow or purple or red, it immediately slows me down to be a lot more careful about what I&#39;m changing.&lt;/p&gt;
&lt;p&gt;So, one of the things I’ve done is have different colour palettes in Visual Studio Code for different servers.&lt;/p&gt;
&lt;p&gt;One set of colours are for Wilfrid Laurier University, where I work. I personally use the green one for my primary development container, yellow for dev, purple for staging, and red for production (red because I shouldn’t ever actually be editing directly on production). I also use the pure black one with the brand colours as accents for when I am editing something local to my Windows host machine, not in any docker or remote SSH.&lt;/p&gt;
&lt;p&gt;And then, just for fun, I decided to do the same with my alma mater university, Queen’s. And then a couple of other nearby universities, Waterloo and Guelph. I haven&#39;t heavily tested those so maybe some of the fringe contrasts aren&#39;t quite right, and some of them (Waterloo) offers less range in colours than others. But they&#39;re at least a starting point.&lt;/p&gt;
&lt;p&gt;They are available in &lt;a href=&quot;https://github.com/ryan-l-robinson/vscode-university-colour-palettes&quot;&gt;my GitHub&lt;/a&gt;. I&#39;d be happy for anybody who wants to include their own university to submit it as a merge request. I&#39;d also be happy if anybody wants to turn that into a VS Code extension.&lt;/p&gt;
</content>
	</entry>
</feed>
