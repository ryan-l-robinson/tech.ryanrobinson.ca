<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Blog Title</title>
  <subtitle>This is a longer description about your blog.</subtitle>
  <link href="https://example.com/eleventy-base-blog/feed/feed.xml" rel="self" />
  <link href="https://example.com/eleventy-base-blog/" />
  <updated>2024-04-08T17:10:28Z</updated>
  <id>https://example.com/eleventy-base-blog/</id>
  <author>
    <name>Your Name</name>
  </author>
  <entry>
    <title>VS Code: University Colour Palettes</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/vs-code-university-colour-palettes/" />
    <updated>2024-04-08T17:10:28Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/vs-code-university-colour-palettes/</id>
    <content type="html">&lt;p&gt;I like changing colour palettes on my various workspaces. It’s especially nice when in situations like jumping between personal and work spaces of the same app, or multiple clients, or dev vs staging vs production servers. It&#39;s a great way to quickly adjust what I&#39;m thinking about, e.g. if I&#39;m seeing yellow or purple or red, it immediately slows me down to be a lot more careful about what I&#39;m changing.&lt;/p&gt;
&lt;p&gt;So, one of the things I’ve done is have different colour palettes in Visual Studio Code for different servers.&lt;/p&gt;
&lt;p&gt;One set of colours are for Wilfrid Laurier University, where I work. I personally use the green one for my primary development container, yellow for dev, purple for staging, and red for production (red because I shouldn’t ever actually be editing directly on production). I also use the pure black one with the brand colours as accents for when I am editing something local to my Windows host machine, not in any docker or remote SSH.&lt;/p&gt;
&lt;p&gt;And then, just for fun, I decided to do the same with my alma mater university, Queen’s. And then a couple of other nearby universities, Waterloo and Guelph. I haven&#39;t heavily tested those so maybe some of the fringe contrasts aren&#39;t quite right, and some of them (Waterloo) offers less range in colours than others. But they&#39;re at least a starting point.&lt;/p&gt;
&lt;p&gt;They are available in &lt;a href=&quot;https://github.com/ryan-l-robinson/vscode-university-colour-palettes&quot;&gt;my GitHub&lt;/a&gt;. I&#39;d be happy for anybody who wants to include their own university to submit it as a merge request. I&#39;d also be happy if anybody wants to turn that into a VS Code extension.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal Dev Environment Updated: The DevContainer</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/dev-env-updated-devcontainer/" />
    <updated>2024-04-08T15:46:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/dev-env-updated-devcontainer/</id>
    <content type="html">&lt;p&gt;This continues from &lt;a href=&quot;https://example.com/eleventy-base-blog/posts/2024/dev-env-updated-dockerfiles/&quot;&gt;a previous post&lt;/a&gt; about a new Drupal dev environment, a significant upgrade from some previous posts that you can find on &lt;a href=&quot;https://example.com/eleventy-base-blog/tags/drupal-docker/&quot;&gt;the Drupal Docker tag&lt;/a&gt;. That covered the Dockerfiles, while this will cover changes to the Devcontainer.json and the postCreateCommand script. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;The whole project&#39;s code can be found on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;devcontainer&quot;&gt;Devcontainer&lt;/h2&gt;
&lt;p&gt;What changed in devcontainer from the previous setup? A few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I reviewed several of the extensions and made some changes. The most significant are adding Playwright testing (maybe I&#39;ll be able to write more about that later), the PHP tools extension, and the Drupal extension. Between them I now have much stronger error detection, deprecation warnings, testing, and formatting to meet the Drupal standards. Some more notes about useful extensions are in &lt;a href=&quot;https://example.com/eleventy-base-blog/websites/vs-code/extensions-2024/&quot;&gt;my recent post about what extensions I use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The postAttachCommand has to set the permissions again with each new time attaching to it, so the files that are set up as volumes don&#39;t revert to root.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;postcreatecommand&quot;&gt;postCreateCommand&lt;/h2&gt;
&lt;p&gt;This is mostly the same, at least for now: it installs all composer packages and sets up the database on the first time creating these images. A few things were able to be removed to simplify this script, functions like creating the database that are handled more easily in other ways.&lt;/p&gt;
&lt;p&gt;What it still does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installs composer packages.&lt;/li&gt;
&lt;li&gt;Puts the Drupal settings and local services files in place. This comes after the composer install so that the basic Drupal file structure is there already.&lt;/li&gt;
&lt;li&gt;Import the site&#39;s configuration using drush.&lt;/li&gt;
&lt;li&gt;Set the admin password.&lt;/li&gt;
&lt;li&gt;Rebuild the node access cache. There aren&#39;t any nodes yet, but there is a warning on the site status for a bit if this function isn&#39;t included, so it&#39;s one extra command to save some confusion.&lt;/li&gt;
&lt;li&gt;Sets the environment indicator theme.&lt;/li&gt;
&lt;li&gt;Clears the site&#39;s caches to reflect all changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;next-gitlab-github-ci-cd-updates&quot;&gt;Next: GitLab/GitHub CI/CD Updates&lt;/h2&gt;
&lt;p&gt;I&#39;m going to continue with this by now improving it a step farther: instead of building the images each time on local, have it build in GitHub or GitLab programmatically, and then saving it alongside the repository in those platforms&#39; respective container registries. Then when it is time to start a new local development environment, it only needs to pull the latest image, not build it again. That saves time, especially if you have to switch between branches and especially if you have multiple team members who would otherwise all be spending time building it individually. This will include moving most of the postCreateCommand functionality into the GitLab CI / GitHub Actions, for both the web and database containers.&lt;/p&gt;
&lt;p&gt;I already have this working in my real context using GitLab. I have less experience with GitHub Actions but am working on doing the same idea there for a more shareable version.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal Dev Environment Updated: The Dockerfiles</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/dev-env-updated-dockerfiles/" />
    <updated>2024-03-25T00:16:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/dev-env-updated-dockerfiles/</id>
    <content type="html">&lt;p&gt;A while ago I wrote about building a &lt;a href=&quot;https://example.com/eleventy-base-blog/tags/drupal-docker/&quot;&gt;Docker Desktop dev environment for Drupal&lt;/a&gt;. It was built on Oracle Linux, a requirement in that context, with three images for Apache, PHP, and MySQL. But there were some significant problems with it, first and foremost that it was very slow. So, this is another version, now based on one of the official Drupal images instead of the Oracle Linux ones. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;It can be seen on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;the-web-image&quot;&gt;The Web Image&lt;/h2&gt;
&lt;p&gt;This new setup has both Apache and PHP in the same container, is about 40% of the total image size compared to the previous one, and runs much faster, probably because Apache and PHP are in the same container instead of having to communicate across the network. Let&#39;s start with the basic start to the image and its shell.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM drupal:php8.2-apache
USER root
SHELL [&quot;/bin/bash&quot;, &quot;-c&quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the extra useful packages - some of the most essential ones are already included in the Drupal image - and PHP development settings. The file copied from the PHP folder covers some of the XDebug configuration settings.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Install needed repositories and general packages, and put the php.ini in place
RUN apt-get update -y &#92;
    &amp;&amp; apt-get install -y wget git zip which sudo vim locales default-mysql-client docker nodejs npm &#92;
    &amp;&amp; apt-get upgrade -y &#92;
    &amp;&amp; mv /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini

# Install PHP extensions, using PECL
RUN pecl channel-update pecl.php.net &#92;
    &amp;&amp; pecl install apcu xdebug uploadprogress &#92;
    &amp;&amp; docker-php-ext-enable apcu &#92;
    &amp;&amp; echo &quot;apc.enable_cli=1&quot; &gt;&gt; /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini &#92;
    &amp;&amp; docker-php-ext-enable xdebug &#92;
    &amp;&amp; touch /var/log/xdebug.log &#92;
    &amp;&amp; chown www-data:www-data /var/log/xdebug.log &#92;
    &amp;&amp; docker-php-ext-enable uploadprogress
COPY /php /usr/local/etc/php/conf.d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let the default www-data user have sudo permission without passwords, which would not be the way to go in production but in a development environment is pretty useful in case you ever need to do things like install a new package without rebuilding the whole environment.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Add www-data user to sudo group, and allow those users to sudo without password
RUN usermod -a -G sudo www-data &#92;
    &amp;&amp; usermod -d /user/www-data www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.vscode-server &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.ssh &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data/.ssh &#92;
    &amp;&amp; chmod 700 -R /user/www-data/.ssh &#92;
    &amp;&amp; ssh-keyscan -t rsa gitlab.com &gt;&gt; /user/www-data/.ssh/known_hosts &#92;
    &amp;&amp; sed -i &quot;s/%sudo	ALL=(ALL:ALL) ALL/%sudo	ALL=(ALL)	NOPASSWD: ALL/g&quot; /etc/sudoers&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fix a locale error that shows up once Apache is running, by specifying the locale it is running in. In my case, that&#39;s Canada, with Canadian English.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Fixes locale errors, must happen before Apache. This is using my locale of Canada
RUN echo &quot;LC_ALL=en_CA.UTF-8&quot; &gt;&gt; /etc/environment &#92;
    &amp;&amp; echo &quot;en_CA.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.gen &#92;
    &amp;&amp; echo &quot;LANG=en_CA.UTF-8&quot; &gt; /etc/locale.conf &#92;
    &amp;&amp; locale-gen en_CA.UTF-8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a self-signed certificate for the Apache configuration, so that we&#39;ll be able to browse the site locally with HTTPS.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Apache configuration, including SSL certificates and logs
COPY /apache /etc/apache2
RUN a2enmod ssl &#92;
    &amp;&amp; mkdir -p /etc/apache2/certs &#92;
    &amp;&amp; openssl req -batch -newkey rsa:4096 -nodes -sha256 -keyout /etc/apache2/certs/example.com.key -x509 -days 3650 -out /etc/apache2/certs/example.com.crt -config /etc/apache2/certs/openssl-config.txt &#92;
    &amp;&amp; chown -R root:www-data /etc/apache2 &#92;
    &amp;&amp; chmod 770 -R /etc/apache2/certs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Increase some of the default resource limits for PHP. The defaults never seem to be nearly enough for Drupal. These go much larger, larger than you really need on production, but on local development it is easier to be safe than sorry.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Increase resources for PHP
RUN sed -i &quot;s/max_execution_time = 30/max_execution_time = 300/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/max_input_time = 60/max_input_time = 600/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/memory_limit = 128M/memory_limit = 2048M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/upload_max_filesize = 2M/upload_max_filesize = 128M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/post_max_size = 8M/post_max_size = 256M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/;max_input_vars = 1000/max_input_vars = 10000/g&quot; /usr/local/etc/php/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a minor thing, but I like when I grep through code to see results with the colour highlights, making it much easier to read. That can be done by setting an environment variable and putting an alias for grep into a bashrc file.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Set up nicer grep results
ENV GREP_COLORS=&#39;mt=1;37;41&#39;
COPY .bashrc /user/www-data/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Line up the script that will be run after creating the images. That script will handle setting up the Drupal database, but I&#39;ll cover that more in the next post.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Scripts for further actions to take on creation and attachment
COPY ./scripts/postCreateCommand.sh /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy the Drupal settings file and the local services file. The former is the essential settings for any Drupal site, including being able to connect to the database. The latter is not essential but enables some of the development features that are ideal in local development, like seeing comments in the generated HTML code that shows you what template is being used to generate it.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Drupal configuration
COPY /drupal /web/sites&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, set the permissions on the main Drupal folder as well as on the script that we&#39;ll need to be able to run.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;RUN chown -R www-data:www-data /opt/drupal &#92;
    &amp;&amp; chown www-data:www-data /postCreateCommand.sh &#92;
    &amp;&amp; chmod 777 /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Much of this is the same as the previous version: adding a self-signed SSL certificate, increasing PHP resources. But a few things changed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many of the PHP extensions are already installed from the Drupal image so I didn&#39;t need to do them again in this Dockerfile.&lt;/li&gt;
&lt;li&gt;It needs a lot more overriding the permissions since that Drupal image already comes with a Drupal install in that /opt/drupal directory and with the www-data user, and with some as volumes which mean they immediately revert to root ownership when you attach to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-database-image&quot;&gt;The Database Image&lt;/h2&gt;
&lt;p&gt;Here&#39;s the entire Dockerfile:&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use the default MariaDB image
FROM mariadb:latest

ENV MARIADB_ROOT_PASSWORD=drupalroot
ENV MARIADB_DATABASE=drupal
ENV MARIADB_USER=drupal
ENV MARIADB_PASSWORD=drupal

# Expose the MySQL port to be accessible to the web container.
EXPOSE 3306&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is essentially no change from the previous one, just setting the environment variables to define the database and its access.&lt;/p&gt;
&lt;h2 id=&quot;docker-compose&quot;&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;The docker compose file is not doing anything too unusual. The main thing of note is the volumes. I do not have the entire /opt/drupal set up as volumes. That&#39;s because when you attach to it, the entire area would get its permissions reassigned back to root, which causes issues. It&#39;s also not very efficient, since I really don&#39;t need things like the core files and contributed modules in the vendor folder to be persistent. So instead, it defines the pieces that are relevant to be able to build it, as well as the private and public folders where I might want to download a file for testing that the site can use.&lt;/p&gt;
&lt;p&gt;I also have it set up to share my user profile&#39;s SSH keys and preferred settings like the my commit name, so that I can connect to the repository without having to configure it all again with every new build.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.9&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;443:443&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.devcontainer/:/opt/drupal/.devcontainer/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.git/:/opt/drupal/.git/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.gitignore:/opt/drupal/.gitignore&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.vscode/:/opt/drupal/.vscode/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./patches/:/opt/drupal/patches/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./private/:/opt/drupal/private/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./sync/:/opt/drupal/sync/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./web/sites/default/files/:/opt/drupal/web/sites/default/files/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.json:/opt/drupal/composer.json&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.lock:/opt/drupal/composer.lock&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./docker-compose.yml:/opt/drupal/docker-compose.yml&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./README.md:/opt/drupal/README.md&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.ssh/:/user/www-data/.ssh/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.gitconfig:/user/www-data/.gitconfig&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;www-data:www-data&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; db
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;next-post&quot;&gt;Next Post&lt;/h2&gt;
&lt;p&gt;In the next post, I&#39;ll mention some of the changes to the devcontainer.json file and to the postCreateCommand script, although there&#39;s nothing too drastic there.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>IDRC Presentation on Open Menu</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/idrc-presentation/" />
    <updated>2024-02-21T23:22:36Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/idrc-presentation/</id>
    <content type="html">&lt;p&gt;I recently joined the Inclusive Design Research Centre to present along with a couple of colleagues how we designed an &amp;quot;open menu&amp;quot;, a header-focused main menu navigation that works much better for screen reader users and also provides some other benefits like a Ctrl+F find.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fluidproject.atlassian.net/wiki/spaces/fluid/pages/11513504/Community+workshops+and+design+crits&quot;&gt;The video is available on the IDRC wiki.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don&#39;t have a transcription of the entire presentation, but here are some of my key notes from the perspective of the Drupal developer.&lt;/p&gt;
&lt;h2 id=&quot;the-process&quot;&gt;The Process&lt;/h2&gt;
&lt;p&gt;The co-design process loop often went something like: Ashley (accessibility consultant) described what worked and what didn&#39;t about her experience as a screen reader user, Mark (digital experiences librarian) made an HTML mockup of what we should try instead, and I figured out how to make Drupal do that in the best and most sustainable way. Repeat as necessary until we&#39;re all happy with the results.&lt;/p&gt;
&lt;p&gt;I had to consider several issues, not only accessibility. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timeline: One bit of important context was the launch timeline. I had just been hired and I was learning my way around the old site at the same time I was beginning the new site. We had a deadline for the new site to launch, what was at the time expected to be the Drupal 7 end of life (it got extended again after that). These menu considerations came as part of this rebuild process. That meant there was some balancing between what is ideal and what can be done in time.&lt;/li&gt;
&lt;li&gt;Security: Failure to meet that timeline would have security implications if we didn&#39;t meet it. We could have launched the open menu after launching the new site, in order to hit the end of life deadlines, but it would have been awkward at best and required restructuring the main visual menu at worst.&lt;/li&gt;
&lt;li&gt;Visuals: While not the main focus of this feature, there is visual design for sighted users to consider. We want it to still be attractive and easy to use for sighted users as long as it doesn&#39;t come at the cost of screen reader users.&lt;/li&gt;
&lt;li&gt;Maintainability: How do we ensure we keep this working and accurate? A major important point to me was that there needed to be one source of information that fed both the collapsed menu and the open menu. Otherwise, there&#39;s a high likelihood that at some point the two will get out of sync with each other, where somebody adds to or rearranges the collapsible menu without considering the open menu or vice versa. Sometimes an inaccurate accessibility feature is worse than no accessibility feature at all, because people wouldn&#39;t think to go try the less-ideal collapsible menu if they&#39;ve been assured they have all the same content.&lt;/li&gt;
&lt;li&gt;Open source models: What can be done in Drupal core, what in a contributed theme, what in a contributed module, what in custom code? If a module is close to what we need but not quite there, how do we navigate what we report and try to get the maintainer to change vs what we should rebuild ourselves?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;lessons&quot;&gt;Lessons&lt;/h2&gt;
&lt;p&gt;This was a fascinating project for me in ways much deeper than the technical details. So here&#39;s a few things that stood out to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Empathy vs checklist: The biggest lesson is that personal experiences of disabled people really matter. I&#39;d worked with accessibility before, but mostly at the level of a WCAG (Web Content Accessibility Guidelines) checklist in a contract consultancy context where finishing the job under the budget was the main priority. This whole project was a great example of taking the time to get it truly right to real user experiences. Ashley explained that even though a standard Drupal menu passes the checklist, it can be really time-consuming for her. Hire someone if you can to fill that same role. It opened my eyes to a more emphathetic approach rather than a checklist approach. Maybe you can&#39;t hire somebody - most of us can&#39;t, and even our time with Ashley was limited - but at least take the time to sit and try to imagine what it would feel like to do this without sight, or without hearing, or without a mouse. Don&#39;t just hit the WAVE extension button in your browser and declare it done.&lt;/li&gt;
&lt;li&gt;Multiple solutions: Sometimes there isn&#39;t one solution that is perfect for everybody. We tried to figure out a way to make a menu that was optimal for all users. But the reality is that the standard collapsed navigation is ideal, tuned over decades of web development, for most sighted users who can skim at a glance without it taking much cognitive load. So we took an additive approach instead, keeping both versions of the menu. In hindsight this isn&#39;t really that shocking - we do the same for things like having a video and a transcript - but I hadn&#39;t really thought about it for something as central as the main navigation.&lt;/li&gt;
&lt;li&gt;Jargon: Getting the descriptions for each page was more challenging than expected and one of the reasons why were questions about jargon. Often in talking about accessibility, we talk about wanting the most generic phrasing that everybody understands, avoiding jargon. That&#39;s great for new users not familiar with the jargon. But there is a tradeoff for those who are familiar with it: that&#39;s probably what they&#39;re looking for. If they&#39;re looking for the jargon and it isn&#39;t in the description, it doesn&#39;t show up from a site search or in the open menu items page where a Ctrl+F might find it. Some of that could be mitigated by including the jargon and the broader definition, but that has &lt;a href=&quot;https://example.com/eleventy-base-blog/websites/accessibility-descriptive/&quot;&gt;a tradeoff of making the content longer to sift through, which is especially more time consuming on a screen reader&lt;/a&gt;. Making it more accessible to one group can make it less accessible for others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;coming-soon&quot;&gt;Coming Soon&lt;/h2&gt;
&lt;p&gt;I have another post coming about how this was technically achieved, which was relatively straightforward. The bigger lessons were here, in the process, but I do want to share how it was done for those that are interested in replicating it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Open Menu</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/" />
    <updated>2024-02-21T22:44:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://example.com/eleventy-base-blog/posts/2024/idrc-presentation/&quot;&gt;In a previous related post, I wrote about some lessons in a co-design project of an open menu, with a video where we presented about it to the IDRC&lt;/a&gt;. That was mostly about the process and this is about the result: a header navigation page on a Drupal 9 site. The goal was to provide an overview of the same information that’s in the main navigation, but in a more accessible way for screen readers and with descriptions that provide more information about the page without having to load the page. It was not a complete index of every page on the site; it was only an alternate format for the menu.&lt;/p&gt;
&lt;p&gt;As mentioned in that previous post, an important requirement is that it must update programmatically; we cannot leave it as a separate manually-updated page, because realistically it would only be a matter of time before somebody updated the menu but not the header navigation page.&lt;/p&gt;
&lt;p&gt;There&#39;s &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu&quot;&gt;a GitPod demo version of my solution on my GitHub&lt;/a&gt;. That’s only the relevant customizations, not a full functioning site, and you&#39;d need to add a couple of menu items to really see it in action.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example screenshot of the open menu structure:&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.avif 941w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.webp 941w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.png&quot; alt=&quot;&amp;quot;Open Menu page. After an introductory description, there is a sample page at the top level that is an h2 and a sample page below that at an h3.&amp;quot;&quot; width=&quot;941&quot; height=&quot;590&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;menu-entity-index&quot;&gt;Menu Entity Index&lt;/h2&gt;
&lt;p&gt;If you’re familiar with Drupal, you likely read the introduction and immediately thought of views. Views are the perfect solution whenever you are looking at a scenario involving one data source displayed in multiple ways. Drupal 9 does not expose everything I needed to views on its own, but there is a module that fills in the gap: &lt;a href=&quot;https://www.drupal.org/project/menu_entity_index&quot;&gt;Menu Entity Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once that is installed, you’ll need to configure it. I did not find the settings page intuitive at all, but the first block of settings is which menus need to be indexed and the second block is which types of target to index. In my case, I only want to index content in the main navigation.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.avif 434w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.webp 434w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://example.com/eleventy-base-blog/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.png&quot; alt=&quot;&amp;quot;Settings for menu entity index. The first block is tracked menus and the second is tracked entity types.&amp;quot;&quot; width=&quot;434&quot; height=&quot;619&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Notably, it cannot index views pages, so for this scheme to work, you can’t use views pages in the menu. Fortunately you can still make a views block, put that on a page, and put that page in the menu.&lt;/p&gt;
&lt;h2 id=&quot;configure-the-view&quot;&gt;Configure the View&lt;/h2&gt;
&lt;p&gt;The configuration for the view itself won&#39;t be too much of a surprise for anybody who has configured views before. It has a grouped block for each second-level menu, where the header had a programmatically-set ID so that they can be used for links (both from that top block and from the top level of the main menu itself). There&#39;s a lot of mundane configuration here so I won&#39;t break it all down, but &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/sync/config/views.view.open_menu.yml&quot;&gt;here&#39;s the configuration file&lt;/a&gt; if you want to import to your site, or you can check it out using the GitPod demo and going to Structure -&amp;gt; Views -&amp;gt; Open Menu.&lt;/p&gt;
&lt;h2 id=&quot;overriding-the-view-template&quot;&gt;Overriding the View Template&lt;/h2&gt;
&lt;p&gt;I still had one more problem. The view involved used the grouping function to bunch together the results. I wanted the group label to be an h2 and have an id on it, so I did that using the rewrite the results functions. That worked with no issues.&lt;/p&gt;
&lt;p&gt;But I noticed it was also supplying an empty h3 immediately before my h2. That doesn’t hurt sighted users, but it does complicate the experience for screen reader users. It took some time to realize the h3 was coming from a template file in the views core module: views-view-unformatted.&lt;/p&gt;
&lt;p&gt;Once I knew the source of the original file, I could edit it directly, but that would be lost as soon as there was an update to the theme. The more permanent answer is a subtheme with an override of that file. That seems a little excessive in the case of this demo, but in a real site you&#39;ll probably want a custom subtheme for all your CSS and templates anyway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/web/themes/custom/demo/templates/views/views-view-unformatted.html.twig&quot;&gt;That file is also in the GitHub&lt;/a&gt;, but it was a pretty tiny change removing the h3 wrapper from the grouping.&lt;/p&gt;
&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;There are a few caveats to this system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s no handling for menu items more than 2 levels deep. That may well be possible, but we didn&#39;t need it, so I haven&#39;t included it in this demo.&lt;/li&gt;
&lt;li&gt;No views pages in the menu will show up in the open menu. But view blocks inserted into a page, where the page is in the menu, will show up.&lt;/li&gt;
&lt;li&gt;Be very careful changing the module settings. Perhaps this is fixed two years later, but at the time, attempting to index certain entity types would result in a white screen of death on the next cron run. We&#39;ve never had problems with indexing content.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You could add some built-in warnings to the admin interface, or even override admin forms, to try to suppress the possibility of those caveats causing a problem, but this blog post was long enough so I&#39;ll leave it here.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Dark Content Mode</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/dark-content-mode/" />
    <updated>2024-02-21T21:46:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/dark-content-mode/</id>
    <content type="html">&lt;p&gt;In case you haven&#39;t caught it yet, there&#39;s new functionality coming to browsers for dark mode applied to content. This could come as a surprise to web developers who did not plan for dark mode in their design, but is overall a win for those of us who prefer dark mode on all the things all the time.&lt;/p&gt;
&lt;p&gt;It&#39;s already become my default on Android Edge, inheriting that I have my device in dark mode. I haven&#39;t found it to be default on any other browser (including desktop Edge). Chrome has it as an experiment features flag in chrome://flags, so I did most of my testing by enabling that.&lt;/p&gt;
&lt;h2 id=&quot;issues-found&quot;&gt;Issues Found&lt;/h2&gt;
&lt;p&gt;The biggest problem I found in my main work site was with images that were previously assuming white backgrounds. I found the nicest solution to that was using an SVG instead of a PNG file, which the dark content mode adapted to invert the colours quite nicely.&lt;/p&gt;
&lt;p&gt;There were also some insufficient contrast I discovered, like grey borders around form text boxes, that were maybe a little weak in light mode but were barely visible in dark mode. Many of these were quickly solvable by making it a stronger contrast. For example, instead of a grey border against the white background, I made it into a black border. It content dark mode, it would flip to a white border on black background. Both modes came out looking better.&lt;/p&gt;
&lt;p&gt;I identified a few other contrast elements that were not quite ideal. But attempting a similar approach did not work. There were a few variations where I had black against the default light theme and trying it with the dark content mode turned it into a grey instead of a white - far from invisible, but not as strong of a contrast as I wanted. This is a new feature, not enabled by default other than that Android Edge that few people use, so I&#39;m hoping this gets cleaned up on the browser end and there isn&#39;t much else I need to do.&lt;/p&gt;
&lt;h2 id=&quot;no-way-to-target&quot;&gt;No Way to Target?&lt;/h2&gt;
&lt;p&gt;I tried the media query for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefers-color-scheme&lt;/a&gt; but it doesn&#39;t help for this. That detects if the device prefers dark mode, not if the browser&#39;s dark content mode is on. It&#39;s nice if you want to specifically define what everything should look like in dark vs light modes. But as far as I could find, there&#39;s no way to specifically target content dark mode at this time.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>VS Code Extensions: My Workflows</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/vs-code-extensions-workflows/" />
    <updated>2024-02-21T18:31:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/vs-code-extensions-workflows/</id>
    <content type="html">&lt;p&gt;When it comes to my VS Code extensions, I have mine set up a few different ways depending on what kind of project I&#39;m working on:&lt;/p&gt;
&lt;h2 id=&quot;default&quot;&gt;Default&lt;/h2&gt;
&lt;p&gt;These are the default plugins I have locally installed, for every profile and every project container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright&quot;&gt;Playwright Tests for VS code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree&quot;&gt;Todo Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bmuskalla.vscode-tldr&quot;&gt;tl;dr pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&quot;&gt;vscode-icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;static-sites&quot;&gt;Static Sites&lt;/h2&gt;
&lt;p&gt;These are additional plugins which come in handy with building static sites like this one and ryanrobinson.ca:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&quot;&gt;Markdown All in One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint&quot;&gt;Markdown lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eliostruyf.vscode-front-matter&quot;&gt;Front Matter CMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;containers-remote-wordpress-drupal&quot;&gt;Containers/Remote (WordPress/Drupal)&lt;/h2&gt;
&lt;p&gt;This profile includes the basic requirements to connect to containers and/or remote:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;Dev Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&quot;&gt;Remote SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each container, using the devcontainer.json functionality, can also define new extensions for that container. So here&#39;s an example of doing that for a Drupal site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-mysql-client2&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Stanislav.vscode-drupal&quot;&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=whatwedo.twig&quot;&gt;Twig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DEVSENSE.phptools-vscode&quot;&gt;PHPTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Text Underline Position</title>
    <link href="https://example.com/eleventy-base-blog/posts/2024/text-position-underline/" />
    <updated>2024-02-21T15:22:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2024/text-position-underline/</id>
    <content type="html">&lt;p&gt;This one is a quick accessibility CSS tip. I have long been a proponent of the old standard of underlining links, and never underlining anything else. It helps make it clear that it is a link. Add a hover and focus effect to make it more obvious when they are selecting it, too.&lt;/p&gt;
&lt;p&gt;But it can introduce a problem: for certain reading disabilities, the line being close up against the text can make it hard to read. Even for myself without one of those disabilities, once it was flagged for me I immediately saw it every time I looked at a link.&lt;/p&gt;
&lt;p&gt;So here&#39;s a quick CSS solution that significantly helps.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;text-underline-position: under&lt;/code&gt; to make links with underlines easier to read. It moves the underline down to the bottom of the hanging letters (g, y, j) rather than right up tight against the bottom of other letters and cutting right through the middle of the hanging letters. It may not quite be perfect - even better might be a few pixels below the hanging letters to get space there as well - but it solves the majority of the problem with one quick CSS change.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Church Website Content</title>
    <link href="https://example.com/eleventy-base-blog/posts/2023/church-site-content/" />
    <updated>2023-08-07T18:46:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2023/church-site-content/</id>
    <content type="html">&lt;p&gt;This is not my usual type of content for this site, but I was reminded of it from a Mastodon conversation and wanted to put it somewhere more or less permanent. Before building the latest iteration of my church&#39;s website several years ago, I put out the question on Twitter for what information people want before they would consider visiting. I sent those to the church leadership and still had the document, so I looked it up to summarize those questions again below:&lt;/p&gt;
&lt;h2 id=&quot;sunday-worship&quot;&gt;Sunday Worship&lt;/h2&gt;
&lt;p&gt;When does the service begin and end?&lt;/p&gt;
&lt;p&gt;Is there a nursery for infants and toddlers? Something for children and youth?&lt;/p&gt;
&lt;p&gt;Are children welcome in the service, even if they make noise?&lt;/p&gt;
&lt;p&gt;Is there adult education?&lt;/p&gt;
&lt;p&gt;What&#39;s the (usually unspoken) dress code?&lt;/p&gt;
&lt;p&gt;Is there parking? Bike racks? Transit nearby?&lt;/p&gt;
&lt;p&gt;Where&#39;s the main entrance?&lt;/p&gt;
&lt;p&gt;Is there coffee available?&lt;/p&gt;
&lt;h2 id=&quot;inclusivity&quot;&gt;Inclusivity&lt;/h2&gt;
&lt;p&gt;Is the building accessible with a wheelchair?&lt;/p&gt;
&lt;p&gt;Is there assistance for those with hearing impairments?&lt;/p&gt;
&lt;p&gt;(You could add more specific disabilities)&lt;/p&gt;
&lt;p&gt;Are women or non-binary people involved in leadership? Could they be a pastor?&lt;/p&gt;
&lt;p&gt;Do you have a gender neutral washroom?&lt;/p&gt;
&lt;p&gt;Could an LGBTQ+ person be your pastor?&lt;/p&gt;
&lt;p&gt;Would your pastor marry a same-sex couple?&lt;/p&gt;
&lt;p&gt;How well does the racial demographics of the church match the wider community?&lt;/p&gt;
&lt;h2 id=&quot;other-ministries&quot;&gt;Other Ministries&lt;/h2&gt;
&lt;p&gt;Is there a youth group? What do they do? How often do they meet? What&#39;s your understanding of youth discipleship?&lt;/p&gt;
&lt;p&gt;What areas of social justice and community work do you do?&lt;/p&gt;
&lt;p&gt;What social groups can I join?&lt;/p&gt;
&lt;p&gt;What about Prayer groups? Or Bible study groups?&lt;/p&gt;
&lt;h2 id=&quot;rental-of-facilities&quot;&gt;Rental of Facilities&lt;/h2&gt;
&lt;p&gt;Can I use the space for weddings or concerts?&lt;/p&gt;
&lt;p&gt;Do I have to be a member?&lt;/p&gt;
&lt;p&gt;How many does it seat?&lt;/p&gt;
&lt;p&gt;What does it cost? Is there any discount (or free) for indigenous groups whose land you are on?&lt;/p&gt;
&lt;h2 id=&quot;theology&quot;&gt;Theology&lt;/h2&gt;
&lt;p&gt;Most did not want a full statement of faith on every possible question, but they wanted to know key values of the community that shape how the church tackles all those other questions.&lt;/p&gt;
&lt;p&gt;Are you starting from the love of God or from an inerrant Bible or something else?&lt;/p&gt;
&lt;p&gt;Is there a denominational affiliation?&lt;/p&gt;
&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;p&gt;Can I donate online?&lt;/p&gt;
&lt;p&gt;How do I contact someone and who do I contact for what needs?&lt;/p&gt;
&lt;p&gt;Can I see a calendar of upcoming events?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Add Role Based on File</title>
    <link href="https://example.com/eleventy-base-blog/posts/2023/role-file/" />
    <updated>2023-08-07T17:46:00Z</updated>
    <id>https://example.com/eleventy-base-blog/posts/2023/role-file/</id>
    <content type="html">&lt;p&gt;A while ago I wrote about, and shared sample code for, adding a role to a user when they log in if their name appears in a file on the server. That was a Drupal 7 sample.&lt;/p&gt;
&lt;p&gt;I&#39;ve now updated that for Drupal 9 and created &lt;a href=&quot;https://github.com/ryan-l-robinson/drupal-9-permissions-from-file&quot;&gt;a project in my GitHub&lt;/a&gt;. It&#39;s relatively straightforward so I won&#39;t provide a line by line breakdown again.&lt;/p&gt;
</content>
  </entry>
</feed>