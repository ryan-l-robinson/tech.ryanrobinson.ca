<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Ryan Robinson Technology</title>
  <subtitle>Ryan Robinson writes about technology: Drupal and other web development, Microsoft 365, and more.</subtitle>
  <link href="https://tech.ryanrobinson.ca/feed/feed.xml" rel="self" />
  <link href="https://tech.ryanrobinson.ca/" />
  <updated>2024-11-24T19:04:42Z</updated>
  <id>https://tech.ryanrobinson.ca/</id>
  <author>
    <name>Ryan Robinson</name>
  </author>
  <entry>
    <title>Site Rebuilt in Eleventy</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/switch-to-eleventy/" />
    <updated>2024-11-24T19:04:42Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/switch-to-eleventy/</id>
    <content type="html">&lt;p&gt;I have rebuilt this site in &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt;, replacing the previous Jekyll version. Here are some of my thoughts on the experience:&lt;/p&gt;
&lt;h2 id=&quot;advantages&quot;&gt;Advantages&lt;/h2&gt;
&lt;p&gt;It&#39;s got a couple advantages over my Jekyll experience.&lt;/p&gt;
&lt;p&gt;One that eleventy tends to brag about is that it builds very fast. This doesn&#39;t matter that much to me in the context of a simple site mostly hosting blogs on GitHub Pages, but it is nice to at least know when I commit something that it will be visible for testing quickly.&lt;/p&gt;
&lt;p&gt;The bigger one for me has been that I understand it more. I got the hang of the templating system pretty quickly, as its nunjucks is not far off from the twig I use for Drupal. With the old Jekyll site, it mostly felt like a black box that I didn&#39;t have enough control over. There probably was a way, but it wasn&#39;t obvious. Here I know what files are contributing to the markup, what files are contributing to the styles, and what extra JavaScript is running.&lt;/p&gt;
&lt;h2 id=&quot;search&quot;&gt;Search&lt;/h2&gt;
&lt;p&gt;Search is one of the more significant disadvantages. There is no default search module. I implemented &lt;a href=&quot;https://pagefind.app/&quot;&gt;PageFind&lt;/a&gt;. This mostly works well enough, and wasn&#39;t that hard to figure out, but unlike the big advantage noted above with eleventy templates, there isn&#39;t a huge amount of control over the UI of the end result. The largest problem I have with that is I am unsure it is the most accessible possible, e.g. it does not create &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live&quot;&gt;an aria-live region&lt;/a&gt; when the content visible on the page has been changed, so screen reader users may not even know the new content is being displayed.&lt;/p&gt;
&lt;h2 id=&quot;taxonomy-pages&quot;&gt;Taxonomy Pages&lt;/h2&gt;
&lt;p&gt;The other big-ish technical piece that I have not solved yet is having pagination on the term pages like &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/accessibility/&quot;&gt;the one for accessibility&lt;/a&gt;. This is because pagination is itself used to create those taxonomy pages programmatically, rather than needing to set up each tag&#39;s page manually, and there is no support for another level of pagination within those.&lt;/p&gt;
&lt;p&gt;This isn&#39;t a huge problem for me at the moment, since my most-populated tag is at 49 posts and that isn&#39;t unreasonable to show on one page. But it could become a more serious problem eventually.&lt;/p&gt;
&lt;h2 id=&quot;post-tl-dr&quot;&gt;Post tl;dr&lt;/h2&gt;
&lt;p&gt;Because there is relatively easy flexibility of what metadata you track for posts and how those appear in templates, I could do things like add a post tl;dr that shows as the summary on the posts lists, as well as the top of the individual post display. This is intended to be a quick summary when you visit a page, to understand if this is going to answer your question or whether you should look somewhere else. That came out of some consultation with a screen reader user, who expressed how it can be hard to get to a page and have to listen to the whole thing only to realize that she is on the wrong page.&lt;/p&gt;
&lt;h2 id=&quot;series&quot;&gt;Series&lt;/h2&gt;
&lt;p&gt;I created another taxonomy for the series of a post. Now, if a post is part of a series, that whole series will appear in the sidebar of that post, making it easier to jump to other posts that you might need to read first or want to read next.&lt;/p&gt;
&lt;h2 id=&quot;post-changes&quot;&gt;Post Changes&lt;/h2&gt;
&lt;p&gt;A lot of the metadata in my posts needed to change to support this new structure instead of Jekyll&#39;s, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a description for each post to serve as the tldr.&lt;/li&gt;
&lt;li&gt;Remove the category field which is no longer relevant.&lt;/li&gt;
&lt;li&gt;Change the filename to what I want the permalink to be, and remove the permalink from the front matter. It is possible to set the permalink through front matter to override the file name, but at least for now I&#39;ve gone with simplicity.&lt;/li&gt;
&lt;li&gt;Update any links and image references, since those are all in new locations now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;domain&quot;&gt;Domain&lt;/h2&gt;
&lt;p&gt;I have also changed the domain. Instead of ryanrobinson.technology, I&#39;m using a subdomain, tech.ryanrobinson.ca. This is primarily an effort to simplify my web presence around the one main domain that hosts a broad landing page about me. Now that I have a better idea of how to build a site with eleventy, and have a theme I&#39;m mostly happy with (some improvements noted below notwithstanding), I will likely make more subdomains off of ryanrobinson.ca for other types of blog content.&lt;/p&gt;
&lt;h2 id=&quot;still-to-do&quot;&gt;Still To Do&lt;/h2&gt;
&lt;p&gt;While I am declaring this good enough to phase out the old site and get back to some writing, there are a few things I hope to still do as of writing this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As mentioned above, I don&#39;t think the search functionality is as accessible as it can be. I may have to make a copy of the PageFind JavaScript UI in order to rework some of it, while keeping PageFind&#39;s handling of other aspects like building the index.&lt;/li&gt;
&lt;li&gt;The styles are not all great. I think they&#39;re readable, but there are things like the black of the dark mode probably still being too black.&lt;/li&gt;
&lt;li&gt;I have done some passes to review the posts, but it might not all be there yet. I need to review all the descriptions, tags, and series.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>VS Code: University Colour Palettes</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/vs-code-university-colour-palettes/" />
    <updated>2024-04-08T17:10:28Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/vs-code-university-colour-palettes/</id>
    <content type="html">&lt;p&gt;I like changing colour palettes on my various workspaces. It’s especially nice when in situations like jumping between personal and work spaces of the same app, or multiple clients, or dev vs staging vs production servers. It&#39;s a great way to quickly adjust what I&#39;m thinking about, e.g. if I&#39;m seeing yellow or purple or red, it immediately slows me down to be a lot more careful about what I&#39;m changing.&lt;/p&gt;
&lt;p&gt;So, one of the things I’ve done is have different colour palettes in Visual Studio Code for different servers.&lt;/p&gt;
&lt;p&gt;One set of colours are for Wilfrid Laurier University, where I work. I personally use the green one for my primary development container, yellow for dev, purple for staging, and red for production (red because I shouldn’t ever actually be editing directly on production). I also use the pure black one with the brand colours as accents for when I am editing something local to my Windows host machine, not in any docker or remote SSH.&lt;/p&gt;
&lt;p&gt;And then, just for fun, I decided to do the same with my alma mater university, Queen’s. And then a couple of other nearby universities, Waterloo and Guelph. I haven&#39;t heavily tested those so maybe some of the fringe contrasts aren&#39;t quite right, and some of them (Waterloo) offers less range in colours than others. But they&#39;re at least a starting point.&lt;/p&gt;
&lt;p&gt;They are available in &lt;a href=&quot;https://github.com/ryan-l-robinson/vscode-university-colour-palettes&quot;&gt;my GitHub&lt;/a&gt;. I&#39;d be happy for anybody who wants to include their own university to submit it as a merge request. I&#39;d also be happy if anybody wants to turn that into a VS Code extension.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal Dev Environment Updated: The DevContainer</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/dev-env-updated-devcontainer/" />
    <updated>2024-04-08T15:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/dev-env-updated-devcontainer/</id>
    <content type="html">&lt;p&gt;This continues from &lt;a href=&quot;https://tech.ryanrobinson.ca/posts/2024/dev-env-updated-dockerfiles/&quot;&gt;a previous post&lt;/a&gt; about a new Drupal dev environment, a significant upgrade from some previous posts that you can find on &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;the Drupal Docker tag&lt;/a&gt;. That covered the Dockerfiles, while this will cover changes to the Devcontainer.json and the postCreateCommand script. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;The whole project&#39;s code can be found on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;devcontainer&quot;&gt;Devcontainer&lt;/h2&gt;
&lt;p&gt;What changed in devcontainer from the previous setup? A few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I reviewed several of the extensions and made some changes. The most significant are adding Playwright testing (maybe I&#39;ll be able to write more about that later), the PHP tools extension, and the Drupal extension. Between them I now have much stronger error detection, deprecation warnings, testing, and formatting to meet the Drupal standards. Some more notes about useful extensions are in &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/vs-code/extensions-2024/&quot;&gt;my recent post about what extensions I use&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The postAttachCommand has to set the permissions again with each new time attaching to it, so the files that are set up as volumes don&#39;t revert to root.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;postcreatecommand&quot;&gt;postCreateCommand&lt;/h2&gt;
&lt;p&gt;This is mostly the same, at least for now: it installs all composer packages and sets up the database on the first time creating these images. A few things were able to be removed to simplify this script, functions like creating the database that are handled more easily in other ways.&lt;/p&gt;
&lt;p&gt;What it still does:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installs composer packages.&lt;/li&gt;
&lt;li&gt;Puts the Drupal settings and local services files in place. This comes after the composer install so that the basic Drupal file structure is there already.&lt;/li&gt;
&lt;li&gt;Import the site&#39;s configuration using drush.&lt;/li&gt;
&lt;li&gt;Set the admin password.&lt;/li&gt;
&lt;li&gt;Rebuild the node access cache. There aren&#39;t any nodes yet, but there is a warning on the site status for a bit if this function isn&#39;t included, so it&#39;s one extra command to save some confusion.&lt;/li&gt;
&lt;li&gt;Sets the environment indicator theme.&lt;/li&gt;
&lt;li&gt;Clears the site&#39;s caches to reflect all changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;next-gitlab-github-ci-cd-updates&quot;&gt;Next: GitLab/GitHub CI/CD Updates&lt;/h2&gt;
&lt;p&gt;I&#39;m going to continue with this by now improving it a step farther: instead of building the images each time on local, have it build in GitHub or GitLab programmatically, and then saving it alongside the repository in those platforms&#39; respective container registries. Then when it is time to start a new local development environment, it only needs to pull the latest image, not build it again. That saves time, especially if you have to switch between branches and especially if you have multiple team members who would otherwise all be spending time building it individually. This will include moving most of the postCreateCommand functionality into the GitLab CI / GitHub Actions, for both the web and database containers.&lt;/p&gt;
&lt;p&gt;I already have this working in my real context using GitLab. I have less experience with GitHub Actions but am working on doing the same idea there for a more shareable version.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal Dev Environment Updated: The Dockerfiles</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/dev-env-updated-dockerfiles/" />
    <updated>2024-03-25T00:16:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/dev-env-updated-dockerfiles/</id>
    <content type="html">&lt;p&gt;A while ago I wrote about building a &lt;a href=&quot;https://tech.ryanrobinson.ca/tags/drupal-docker/&quot;&gt;Docker Desktop dev environment for Drupal&lt;/a&gt;. It was built on Oracle Linux, a requirement in that context, with three images for Apache, PHP, and MySQL. But there were some significant problems with it, first and foremost that it was very slow. So, this is another version, now based on one of the official Drupal images instead of the Oracle Linux ones. &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-Devcontainer&quot;&gt;It can be seen on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;the-web-image&quot;&gt;The Web Image&lt;/h2&gt;
&lt;p&gt;This new setup has both Apache and PHP in the same container, is about 40% of the total image size compared to the previous one, and runs much faster, probably because Apache and PHP are in the same container instead of having to communicate across the network. Let&#39;s start with the basic start to the image and its shell.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM drupal:php8.2-apache
USER root
SHELL [&quot;/bin/bash&quot;, &quot;-c&quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the extra useful packages - some of the most essential ones are already included in the Drupal image - and PHP development settings. The file copied from the PHP folder covers some of the XDebug configuration settings.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Install needed repositories and general packages, and put the php.ini in place
RUN apt-get update -y &#92;
    &amp;&amp; apt-get install -y wget git zip which sudo vim locales default-mysql-client docker nodejs npm &#92;
    &amp;&amp; apt-get upgrade -y &#92;
    &amp;&amp; mv /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini

# Install PHP extensions, using PECL
RUN pecl channel-update pecl.php.net &#92;
    &amp;&amp; pecl install apcu xdebug uploadprogress &#92;
    &amp;&amp; docker-php-ext-enable apcu &#92;
    &amp;&amp; echo &quot;apc.enable_cli=1&quot; &gt;&gt; /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini &#92;
    &amp;&amp; docker-php-ext-enable xdebug &#92;
    &amp;&amp; touch /var/log/xdebug.log &#92;
    &amp;&amp; chown www-data:www-data /var/log/xdebug.log &#92;
    &amp;&amp; docker-php-ext-enable uploadprogress
COPY /php /usr/local/etc/php/conf.d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let the default www-data user have sudo permission without passwords, which would not be the way to go in production but in a development environment is pretty useful in case you ever need to do things like install a new package without rebuilding the whole environment.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Add www-data user to sudo group, and allow those users to sudo without password
RUN usermod -a -G sudo www-data &#92;
    &amp;&amp; usermod -d /user/www-data www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.vscode-server &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data &#92;
    &amp;&amp; mkdir -p /user/www-data/.ssh &#92;
    &amp;&amp; chown -R www-data:www-data /user/www-data/.ssh &#92;
    &amp;&amp; chmod 700 -R /user/www-data/.ssh &#92;
    &amp;&amp; ssh-keyscan -t rsa gitlab.com &gt;&gt; /user/www-data/.ssh/known_hosts &#92;
    &amp;&amp; sed -i &quot;s/%sudo	ALL=(ALL:ALL) ALL/%sudo	ALL=(ALL)	NOPASSWD: ALL/g&quot; /etc/sudoers&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fix a locale error that shows up once Apache is running, by specifying the locale it is running in. In my case, that&#39;s Canada, with Canadian English.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Fixes locale errors, must happen before Apache. This is using my locale of Canada
RUN echo &quot;LC_ALL=en_CA.UTF-8&quot; &gt;&gt; /etc/environment &#92;
    &amp;&amp; echo &quot;en_CA.UTF-8 UTF-8&quot; &gt;&gt; /etc/locale.gen &#92;
    &amp;&amp; echo &quot;LANG=en_CA.UTF-8&quot; &gt; /etc/locale.conf &#92;
    &amp;&amp; locale-gen en_CA.UTF-8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add a self-signed certificate for the Apache configuration, so that we&#39;ll be able to browse the site locally with HTTPS.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Apache configuration, including SSL certificates and logs
COPY /apache /etc/apache2
RUN a2enmod ssl &#92;
    &amp;&amp; mkdir -p /etc/apache2/certs &#92;
    &amp;&amp; openssl req -batch -newkey rsa:4096 -nodes -sha256 -keyout /etc/apache2/certs/example.com.key -x509 -days 3650 -out /etc/apache2/certs/example.com.crt -config /etc/apache2/certs/openssl-config.txt &#92;
    &amp;&amp; chown -R root:www-data /etc/apache2 &#92;
    &amp;&amp; chmod 770 -R /etc/apache2/certs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Increase some of the default resource limits for PHP. The defaults never seem to be nearly enough for Drupal. These go much larger, larger than you really need on production, but on local development it is easier to be safe than sorry.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Increase resources for PHP
RUN sed -i &quot;s/max_execution_time = 30/max_execution_time = 300/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/max_input_time = 60/max_input_time = 600/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/memory_limit = 128M/memory_limit = 2048M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/upload_max_filesize = 2M/upload_max_filesize = 128M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/post_max_size = 8M/post_max_size = 256M/g&quot; /usr/local/etc/php/php.ini &#92;
    &amp;&amp; sed -i &quot;s/;max_input_vars = 1000/max_input_vars = 10000/g&quot; /usr/local/etc/php/php.ini&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a minor thing, but I like when I grep through code to see results with the colour highlights, making it much easier to read. That can be done by setting an environment variable and putting an alias for grep into a bashrc file.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Set up nicer grep results
ENV GREP_COLORS=&#39;mt=1;37;41&#39;
COPY .bashrc /user/www-data/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Line up the script that will be run after creating the images. That script will handle setting up the Drupal database, but I&#39;ll cover that more in the next post.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Scripts for further actions to take on creation and attachment
COPY ./scripts/postCreateCommand.sh /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy the Drupal settings file and the local services file. The former is the essential settings for any Drupal site, including being able to connect to the database. The latter is not essential but enables some of the development features that are ideal in local development, like seeing comments in the generated HTML code that shows you what template is being used to generate it.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Drupal configuration
COPY /drupal /web/sites&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, set the permissions on the main Drupal folder as well as on the script that we&#39;ll need to be able to run.&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;RUN chown -R www-data:www-data /opt/drupal &#92;
    &amp;&amp; chown www-data:www-data /postCreateCommand.sh &#92;
    &amp;&amp; chmod 777 /postCreateCommand.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Much of this is the same as the previous version: adding a self-signed SSL certificate, increasing PHP resources. But a few things changed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many of the PHP extensions are already installed from the Drupal image so I didn&#39;t need to do them again in this Dockerfile.&lt;/li&gt;
&lt;li&gt;It needs a lot more overriding the permissions since that Drupal image already comes with a Drupal install in that /opt/drupal directory and with the www-data user, and with some as volumes which mean they immediately revert to root ownership when you attach to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-database-image&quot;&gt;The Database Image&lt;/h2&gt;
&lt;p&gt;Here&#39;s the entire Dockerfile:&lt;/p&gt;
&lt;pre class=&quot;language-Dockerfile&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use the default MariaDB image
FROM mariadb:latest

ENV MARIADB_ROOT_PASSWORD=drupalroot
ENV MARIADB_DATABASE=drupal
ENV MARIADB_USER=drupal
ENV MARIADB_PASSWORD=drupal

# Expose the MySQL port to be accessible to the web container.
EXPOSE 3306&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is essentially no change from the previous one, just setting the environment variables to define the database and its access.&lt;/p&gt;
&lt;h2 id=&quot;docker-compose&quot;&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;The docker compose file is not doing anything too unusual. The main thing of note is the volumes. I do not have the entire /opt/drupal set up as volumes. That&#39;s because when you attach to it, the entire area would get its permissions reassigned back to root, which causes issues. It&#39;s also not very efficient, since I really don&#39;t need things like the core files and contributed modules in the vendor folder to be persistent. So instead, it defines the pieces that are relevant to be able to build it, as well as the private and public folders where I might want to download a file for testing that the site can use.&lt;/p&gt;
&lt;p&gt;I also have it set up to share my user profile&#39;s SSH keys and preferred settings like the my commit name, so that I can connect to the repository without having to configure it all again with every new build.&lt;/p&gt;
&lt;pre class=&quot;language-yml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3.9&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;web.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;443:443&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.devcontainer/:/opt/drupal/.devcontainer/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.git/:/opt/drupal/.git/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.gitignore:/opt/drupal/.gitignore&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./.vscode/:/opt/drupal/.vscode/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./patches/:/opt/drupal/patches/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./private/:/opt/drupal/private/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./sync/:/opt/drupal/sync/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./web/sites/default/files/:/opt/drupal/web/sites/default/files/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.json:/opt/drupal/composer.json&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./composer.lock:/opt/drupal/composer.lock&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./docker-compose.yml:/opt/drupal/docker-compose.yml&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./README.md:/opt/drupal/README.md&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.ssh/:/user/www-data/.ssh/&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;${USERPROFILE}/.gitconfig:/user/www-data/.gitconfig&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;www-data:www-data&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; db
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.devcontainer&quot;&lt;/span&gt;
      &lt;span class=&quot;token key atrule&quot;&gt;dockerfile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;db.Dockerfile&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal&quot;&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;next-post&quot;&gt;Next Post&lt;/h2&gt;
&lt;p&gt;In the next post, I&#39;ll mention some of the changes to the devcontainer.json file and to the postCreateCommand script, although there&#39;s nothing too drastic there.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>IDRC Presentation on Open Menu</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/idrc-presentation/" />
    <updated>2024-02-21T23:22:36Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/idrc-presentation/</id>
    <content type="html">&lt;p&gt;I recently joined the Inclusive Design Research Centre to present along with a couple of colleagues how we designed an &amp;quot;open menu&amp;quot;, a header-focused main menu navigation that works much better for screen reader users and also provides some other benefits like a Ctrl+F find.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fluidproject.atlassian.net/wiki/spaces/fluid/pages/11513504/Community+workshops+and+design+crits&quot;&gt;The video is available on the IDRC wiki.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don&#39;t have a transcription of the entire presentation, but here are some of my key notes from the perspective of the Drupal developer.&lt;/p&gt;
&lt;h2 id=&quot;the-process&quot;&gt;The Process&lt;/h2&gt;
&lt;p&gt;The co-design process loop often went something like: Ashley (accessibility consultant) described what worked and what didn&#39;t about her experience as a screen reader user, Mark (digital experiences librarian) made an HTML mockup of what we should try instead, and I figured out how to make Drupal do that in the best and most sustainable way. Repeat as necessary until we&#39;re all happy with the results.&lt;/p&gt;
&lt;p&gt;I had to consider several issues, not only accessibility. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timeline: One bit of important context was the launch timeline. I had just been hired and I was learning my way around the old site at the same time I was beginning the new site. We had a deadline for the new site to launch, what was at the time expected to be the Drupal 7 end of life (it got extended again after that). These menu considerations came as part of this rebuild process. That meant there was some balancing between what is ideal and what can be done in time.&lt;/li&gt;
&lt;li&gt;Security: Failure to meet that timeline would have security implications if we didn&#39;t meet it. We could have launched the open menu after launching the new site, in order to hit the end of life deadlines, but it would have been awkward at best and required restructuring the main visual menu at worst.&lt;/li&gt;
&lt;li&gt;Visuals: While not the main focus of this feature, there is visual design for sighted users to consider. We want it to still be attractive and easy to use for sighted users as long as it doesn&#39;t come at the cost of screen reader users.&lt;/li&gt;
&lt;li&gt;Maintainability: How do we ensure we keep this working and accurate? A major important point to me was that there needed to be one source of information that fed both the collapsed menu and the open menu. Otherwise, there&#39;s a high likelihood that at some point the two will get out of sync with each other, where somebody adds to or rearranges the collapsible menu without considering the open menu or vice versa. Sometimes an inaccurate accessibility feature is worse than no accessibility feature at all, because people wouldn&#39;t think to go try the less-ideal collapsible menu if they&#39;ve been assured they have all the same content.&lt;/li&gt;
&lt;li&gt;Open source models: What can be done in Drupal core, what in a contributed theme, what in a contributed module, what in custom code? If a module is close to what we need but not quite there, how do we navigate what we report and try to get the maintainer to change vs what we should rebuild ourselves?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;lessons&quot;&gt;Lessons&lt;/h2&gt;
&lt;p&gt;This was a fascinating project for me in ways much deeper than the technical details. So here&#39;s a few things that stood out to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Empathy vs checklist: The biggest lesson is that personal experiences of disabled people really matter. I&#39;d worked with accessibility before, but mostly at the level of a WCAG (Web Content Accessibility Guidelines) checklist in a contract consultancy context where finishing the job under the budget was the main priority. This whole project was a great example of taking the time to get it truly right to real user experiences. Ashley explained that even though a standard Drupal menu passes the checklist, it can be really time-consuming for her. Hire someone if you can to fill that same role. It opened my eyes to a more emphathetic approach rather than a checklist approach. Maybe you can&#39;t hire somebody - most of us can&#39;t, and even our time with Ashley was limited - but at least take the time to sit and try to imagine what it would feel like to do this without sight, or without hearing, or without a mouse. Don&#39;t just hit the WAVE extension button in your browser and declare it done.&lt;/li&gt;
&lt;li&gt;Multiple solutions: Sometimes there isn&#39;t one solution that is perfect for everybody. We tried to figure out a way to make a menu that was optimal for all users. But the reality is that the standard collapsed navigation is ideal, tuned over decades of web development, for most sighted users who can skim at a glance without it taking much cognitive load. So we took an additive approach instead, keeping both versions of the menu. In hindsight this isn&#39;t really that shocking - we do the same for things like having a video and a transcript - but I hadn&#39;t really thought about it for something as central as the main navigation.&lt;/li&gt;
&lt;li&gt;Jargon: Getting the descriptions for each page was more challenging than expected and one of the reasons why were questions about jargon. Often in talking about accessibility, we talk about wanting the most generic phrasing that everybody understands, avoiding jargon. That&#39;s great for new users not familiar with the jargon. But there is a tradeoff for those who are familiar with it: that&#39;s probably what they&#39;re looking for. If they&#39;re looking for the jargon and it isn&#39;t in the description, it doesn&#39;t show up from a site search or in the open menu items page where a Ctrl+F might find it. Some of that could be mitigated by including the jargon and the broader definition, but that has &lt;a href=&quot;https://tech.ryanrobinson.ca/websites/accessibility-descriptive/&quot;&gt;a tradeoff of making the content longer to sift through, which is especially more time consuming on a screen reader&lt;/a&gt;. Making it more accessible to one group can make it less accessible for others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;coming-soon&quot;&gt;Coming Soon&lt;/h2&gt;
&lt;p&gt;I have another post coming about how this was technically achieved, which was relatively straightforward. The bigger lessons were here, in the process, but I do want to share how it was done for those that are interested in replicating it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Open Menu</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/" />
    <updated>2024-02-21T22:44:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://tech.ryanrobinson.ca/posts/2024/idrc-presentation/&quot;&gt;In a previous related post, I wrote about some lessons in a co-design project of an open menu, with a video where we presented about it to the IDRC&lt;/a&gt;. That was mostly about the process and this is about the result: a header navigation page on a Drupal 9 site. The goal was to provide an overview of the same information that’s in the main navigation, but in a more accessible way for screen readers and with descriptions that provide more information about the page without having to load the page. It was not a complete index of every page on the site; it was only an alternate format for the menu.&lt;/p&gt;
&lt;p&gt;As mentioned in that previous post, an important requirement is that it must update programmatically; we cannot leave it as a separate manually-updated page, because realistically it would only be a matter of time before somebody updated the menu but not the header navigation page.&lt;/p&gt;
&lt;p&gt;There&#39;s &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu&quot;&gt;a GitPod demo version of my solution on my GitHub&lt;/a&gt;. That’s only the relevant customizations, not a full functioning site, and you&#39;d need to add a couple of menu items to really see it in action.&lt;/p&gt;
&lt;p&gt;Here&#39;s an example screenshot of the open menu structure:&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.avif 941w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.webp 941w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/lRNJlLJJy_-941.png&quot; alt=&quot;&amp;quot;Open Menu page. After an introductory description, there is a sample page at the top level that is an h2 and a sample page below that at an h3.&amp;quot;&quot; width=&quot;941&quot; height=&quot;590&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;menu-entity-index&quot;&gt;Menu Entity Index&lt;/h2&gt;
&lt;p&gt;If you’re familiar with Drupal, you likely read the introduction and immediately thought of views. Views are the perfect solution whenever you are looking at a scenario involving one data source displayed in multiple ways. Drupal 9 does not expose everything I needed to views on its own, but there is a module that fills in the gap: &lt;a href=&quot;https://www.drupal.org/project/menu_entity_index&quot;&gt;Menu Entity Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once that is installed, you’ll need to configure it. I did not find the settings page intuitive at all, but the first block of settings is which menus need to be indexed and the second block is which types of target to index. In my case, I only want to index content in the main navigation.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.avif 434w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.webp 434w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2024/open_menu/open-menu/b-lZNiuVuQ-434.png&quot; alt=&quot;&amp;quot;Settings for menu entity index. The first block is tracked menus and the second is tracked entity types.&amp;quot;&quot; width=&quot;434&quot; height=&quot;619&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Notably, it cannot index views pages, so for this scheme to work, you can’t use views pages in the menu. Fortunately you can still make a views block, put that on a page, and put that page in the menu.&lt;/p&gt;
&lt;h2 id=&quot;configure-the-view&quot;&gt;Configure the View&lt;/h2&gt;
&lt;p&gt;The configuration for the view itself won&#39;t be too much of a surprise for anybody who has configured views before. It has a grouped block for each second-level menu, where the header had a programmatically-set ID so that they can be used for links (both from that top block and from the top level of the main menu itself). There&#39;s a lot of mundane configuration here so I won&#39;t break it all down, but &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/sync/config/views.view.open_menu.yml&quot;&gt;here&#39;s the configuration file&lt;/a&gt; if you want to import to your site, or you can check it out using the GitPod demo and going to Structure -&amp;gt; Views -&amp;gt; Open Menu.&lt;/p&gt;
&lt;h2 id=&quot;overriding-the-view-template&quot;&gt;Overriding the View Template&lt;/h2&gt;
&lt;p&gt;I still had one more problem. The view involved used the grouping function to bunch together the results. I wanted the group label to be an h2 and have an id on it, so I did that using the rewrite the results functions. That worked with no issues.&lt;/p&gt;
&lt;p&gt;But I noticed it was also supplying an empty h3 immediately before my h2. That doesn’t hurt sighted users, but it does complicate the experience for screen reader users. It took some time to realize the h3 was coming from a template file in the views core module: views-view-unformatted.&lt;/p&gt;
&lt;p&gt;Once I knew the source of the original file, I could edit it directly, but that would be lost as soon as there was an update to the theme. The more permanent answer is a subtheme with an override of that file. That seems a little excessive in the case of this demo, but in a real site you&#39;ll probably want a custom subtheme for all your CSS and templates anyway.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-open-menu/blob/main/web/themes/custom/demo/templates/views/views-view-unformatted.html.twig&quot;&gt;That file is also in the GitHub&lt;/a&gt;, but it was a pretty tiny change removing the h3 wrapper from the grouping.&lt;/p&gt;
&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;There are a few caveats to this system:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&#39;s no handling for menu items more than 2 levels deep. That may well be possible, but we didn&#39;t need it, so I haven&#39;t included it in this demo.&lt;/li&gt;
&lt;li&gt;No views pages in the menu will show up in the open menu. But view blocks inserted into a page, where the page is in the menu, will show up.&lt;/li&gt;
&lt;li&gt;Be very careful changing the module settings. Perhaps this is fixed two years later, but at the time, attempting to index certain entity types would result in a white screen of death on the next cron run. We&#39;ve never had problems with indexing content.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You could add some built-in warnings to the admin interface, or even override admin forms, to try to suppress the possibility of those caveats causing a problem, but this blog post was long enough so I&#39;ll leave it here.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Dark Content Mode</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/dark-content-mode/" />
    <updated>2024-02-21T21:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/dark-content-mode/</id>
    <content type="html">&lt;p&gt;In case you haven&#39;t caught it yet, there&#39;s new functionality coming to browsers for dark mode applied to content. This could come as a surprise to web developers who did not plan for dark mode in their design, but is overall a win for those of us who prefer dark mode on all the things all the time.&lt;/p&gt;
&lt;p&gt;It&#39;s already become my default on Android Edge, inheriting that I have my device in dark mode. I haven&#39;t found it to be default on any other browser (including desktop Edge). Chrome has it as an experiment features flag in chrome://flags, so I did most of my testing by enabling that.&lt;/p&gt;
&lt;h2 id=&quot;issues-found&quot;&gt;Issues Found&lt;/h2&gt;
&lt;p&gt;The biggest problem I found in my main work site was with images that were previously assuming white backgrounds. I found the nicest solution to that was using an SVG instead of a PNG file, which the dark content mode adapted to invert the colours quite nicely.&lt;/p&gt;
&lt;p&gt;There were also some insufficient contrast I discovered, like grey borders around form text boxes, that were maybe a little weak in light mode but were barely visible in dark mode. Many of these were quickly solvable by making it a stronger contrast. For example, instead of a grey border against the white background, I made it into a black border. It content dark mode, it would flip to a white border on black background. Both modes came out looking better.&lt;/p&gt;
&lt;p&gt;I identified a few other contrast elements that were not quite ideal. But attempting a similar approach did not work. There were a few variations where I had black against the default light theme and trying it with the dark content mode turned it into a grey instead of a white - far from invisible, but not as strong of a contrast as I wanted. This is a new feature, not enabled by default other than that Android Edge that few people use, so I&#39;m hoping this gets cleaned up on the browser end and there isn&#39;t much else I need to do.&lt;/p&gt;
&lt;h2 id=&quot;no-way-to-target&quot;&gt;No Way to Target?&lt;/h2&gt;
&lt;p&gt;I tried the media query for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefers-color-scheme&lt;/a&gt; but it doesn&#39;t help for this. That detects if the device prefers dark mode, not if the browser&#39;s dark content mode is on. It&#39;s nice if you want to specifically define what everything should look like in dark vs light modes. But as far as I could find, there&#39;s no way to specifically target content dark mode at this time.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>VS Code Extensions: My Workflows</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/vs-code-extensions-workflows/" />
    <updated>2024-02-21T18:31:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/vs-code-extensions-workflows/</id>
    <content type="html">&lt;p&gt;When it comes to my VS Code extensions, I have mine set up a few different ways depending on what kind of project I&#39;m working on:&lt;/p&gt;
&lt;h2 id=&quot;default&quot;&gt;Default&lt;/h2&gt;
&lt;p&gt;These are the default plugins I have locally installed, for every profile and every project container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&quot;&gt;GitLens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright&quot;&gt;Playwright Tests for VS code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree&quot;&gt;Todo Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bmuskalla.vscode-tldr&quot;&gt;tl;dr pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&quot;&gt;vscode-icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;static-sites&quot;&gt;Static Sites&lt;/h2&gt;
&lt;p&gt;These are additional plugins which come in handy with building static sites like this one and ryanrobinson.ca:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&quot;&gt;Markdown All in One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint&quot;&gt;Markdown lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eliostruyf.vscode-front-matter&quot;&gt;Front Matter CMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;containers-remote-wordpress-drupal&quot;&gt;Containers/Remote (WordPress/Drupal)&lt;/h2&gt;
&lt;p&gt;This profile includes the basic requirements to connect to containers and/or remote:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;Dev Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&quot;&gt;Remote SSH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each container, using the devcontainer.json functionality, can also define new extensions for that container. So here&#39;s an example of doing that for a Drupal site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=cweijan.vscode-mysql-client2&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Stanislav.vscode-drupal&quot;&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=whatwedo.twig&quot;&gt;Twig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DEVSENSE.phptools-vscode&quot;&gt;PHPTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Text Underline Position</title>
    <link href="https://tech.ryanrobinson.ca/posts/2024/text-position-underline/" />
    <updated>2024-02-21T15:22:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2024/text-position-underline/</id>
    <content type="html">&lt;p&gt;This one is a quick accessibility CSS tip. I have long been a proponent of the old standard of underlining links, and never underlining anything else. It helps make it clear that it is a link. Add a hover and focus effect to make it more obvious when they are selecting it, too.&lt;/p&gt;
&lt;p&gt;But it can introduce a problem: for certain reading disabilities, the line being close up against the text can make it hard to read. Even for myself without one of those disabilities, once it was flagged for me I immediately saw it every time I looked at a link.&lt;/p&gt;
&lt;p&gt;So here&#39;s a quick CSS solution that significantly helps.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;text-underline-position: under&lt;/code&gt; to make links with underlines easier to read. It moves the underline down to the bottom of the hanging letters (g, y, j) rather than right up tight against the bottom of other letters and cutting right through the middle of the hanging letters. It may not quite be perfect - even better might be a few pixels below the hanging letters to get space there as well - but it solves the majority of the problem with one quick CSS change.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Church Website Content</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/church-site-content/" />
    <updated>2023-08-07T18:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/church-site-content/</id>
    <content type="html">&lt;p&gt;This is not my usual type of content for this site, but I was reminded of it from a Mastodon conversation and wanted to put it somewhere more or less permanent. Before building the latest iteration of my church&#39;s website several years ago, I put out the question on Twitter for what information people want before they would consider visiting. I sent those to the church leadership and still had the document, so I looked it up to summarize those questions again below:&lt;/p&gt;
&lt;h2 id=&quot;sunday-worship&quot;&gt;Sunday Worship&lt;/h2&gt;
&lt;p&gt;When does the service begin and end?&lt;/p&gt;
&lt;p&gt;Is there a nursery for infants and toddlers? Something for children and youth?&lt;/p&gt;
&lt;p&gt;Are children welcome in the service, even if they make noise?&lt;/p&gt;
&lt;p&gt;Is there adult education?&lt;/p&gt;
&lt;p&gt;What&#39;s the (usually unspoken) dress code?&lt;/p&gt;
&lt;p&gt;Is there parking? Bike racks? Transit nearby?&lt;/p&gt;
&lt;p&gt;Where&#39;s the main entrance?&lt;/p&gt;
&lt;p&gt;Is there coffee available?&lt;/p&gt;
&lt;h2 id=&quot;inclusivity&quot;&gt;Inclusivity&lt;/h2&gt;
&lt;p&gt;Is the building accessible with a wheelchair?&lt;/p&gt;
&lt;p&gt;Is there assistance for those with hearing impairments?&lt;/p&gt;
&lt;p&gt;(You could add more specific disabilities)&lt;/p&gt;
&lt;p&gt;Are women or non-binary people involved in leadership? Could they be a pastor?&lt;/p&gt;
&lt;p&gt;Do you have a gender neutral washroom?&lt;/p&gt;
&lt;p&gt;Could an LGBTQ+ person be your pastor?&lt;/p&gt;
&lt;p&gt;Would your pastor marry a same-sex couple?&lt;/p&gt;
&lt;p&gt;How well does the racial demographics of the church match the wider community?&lt;/p&gt;
&lt;h2 id=&quot;other-ministries&quot;&gt;Other Ministries&lt;/h2&gt;
&lt;p&gt;Is there a youth group? What do they do? How often do they meet? What&#39;s your understanding of youth discipleship?&lt;/p&gt;
&lt;p&gt;What areas of social justice and community work do you do?&lt;/p&gt;
&lt;p&gt;What social groups can I join?&lt;/p&gt;
&lt;p&gt;What about Prayer groups? Or Bible study groups?&lt;/p&gt;
&lt;h2 id=&quot;rental-of-facilities&quot;&gt;Rental of Facilities&lt;/h2&gt;
&lt;p&gt;Can I use the space for weddings or concerts?&lt;/p&gt;
&lt;p&gt;Do I have to be a member?&lt;/p&gt;
&lt;p&gt;How many does it seat?&lt;/p&gt;
&lt;p&gt;What does it cost? Is there any discount (or free) for indigenous groups whose land you are on?&lt;/p&gt;
&lt;h2 id=&quot;theology&quot;&gt;Theology&lt;/h2&gt;
&lt;p&gt;Most did not want a full statement of faith on every possible question, but they wanted to know key values of the community that shape how the church tackles all those other questions.&lt;/p&gt;
&lt;p&gt;Are you starting from the love of God or from an inerrant Bible or something else?&lt;/p&gt;
&lt;p&gt;Is there a denominational affiliation?&lt;/p&gt;
&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;p&gt;Can I donate online?&lt;/p&gt;
&lt;p&gt;How do I contact someone and who do I contact for what needs?&lt;/p&gt;
&lt;p&gt;Can I see a calendar of upcoming events?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Add Role Based on File</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/role-file/" />
    <updated>2023-08-07T17:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/role-file/</id>
    <content type="html">&lt;p&gt;A while ago I wrote about, and shared sample code for, adding a role to a user when they log in if their name appears in a file on the server. That was a Drupal 7 sample.&lt;/p&gt;
&lt;p&gt;I&#39;ve now updated that for Drupal 9 and created &lt;a href=&quot;https://github.com/ryan-l-robinson/drupal-9-permissions-from-file&quot;&gt;a project in my GitHub&lt;/a&gt;. It&#39;s relatively straightforward so I won&#39;t provide a line by line breakdown again.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Future of Microblogging Social Media</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/future-microblogging/" />
    <updated>2023-07-14T13:18:09Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/future-microblogging/</id>
    <content type="html">&lt;p&gt;Twitter, Mastodon, Calckey, Bluesky, Threads... And a whole bunch more that aren&#39;t even worth mentioning in my opinion (&lt;a href=&quot;https://tech.ryanrobinson.ca/posts/2022/twitter-mastodon-coso/&quot;&gt;I did try a couple of them&lt;/a&gt;). It&#39;s an interesting time for social media, especially the microblogging format.&lt;/p&gt;
&lt;p&gt;Part of what makes it so interesting is that there are real differences in philosophies of what the Internet - and therefore, society at large - should be, not only a difference in which billionaire gets to sell all our data.&lt;/p&gt;
&lt;p&gt;So, after a particularly tumultous week, I decided now is a good time to check in with how I feel about the current options and where I see things going from here.&lt;/p&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;p&gt;Twitter is dying. It may not fully shut down, but there&#39;s no trust of anything you read, there&#39;s lots of harassment, you&#39;re limited in how much you can even use it, there&#39;s lots of security failures and privacy violations, occasionally it goes down for several hours. &lt;a href=&quot;https://www.washingtonpost.com/technology/2023/07/13/twitter-creators-payments-right-wing/&quot;&gt;They&#39;re even now bribing far right influencers to keep people around spewing hate speech&lt;/a&gt; so yeah, if you&#39;re still viewing Twitter, or still buying ads on Twitter, you&#39;re directly funding hate speech.&lt;/p&gt;
&lt;p&gt;It&#39;s on life support and it&#39;s hard to see it lasting for much longer as anything more than Musk&#39;s vanity project.&lt;/p&gt;
&lt;h2 id=&quot;threads&quot;&gt;Threads&lt;/h2&gt;
&lt;p&gt;Threads from Meta is the other big corporate player, trying to claim that spot as the default microblogging platform. One big difference is that they want it to be more of a happy fun place that advertisers want to be with minimal moderation efforts required, so they&#39;re downplaying talk of real life issues.&lt;/p&gt;
&lt;p&gt;I have not personally used it. I don&#39;t use anything owned by Meta. From what I&#39;ve heard, it&#39;s a very rough start in terms of features, but as you expect from Meta&#39;s expertise, it&#39;s easy to get started and it got a huge start from brands, journalists, and influencers - the kinds that drive the network effect - in addition to everybody else. The feed is heavily algorithmic, forcefeeding you a lot of brand content instead of who you follow.&lt;/p&gt;
&lt;p&gt;Where it gets really interesting is their promise that it will be federated with the ActivityPub protocol, meaning it will not be a complete walled garden. Why are they doing that is hard to say. Maybe they think it will appease regulators. Maybe some engineer who does believe in federation proposed it without really thinking it would be approved and it got through. In any event, it&#39;s great to see. I&#39;ll respond to more of that below.&lt;/p&gt;
&lt;h2 id=&quot;bluesky&quot;&gt;Bluesky&lt;/h2&gt;
&lt;p&gt;Bluesky is the most interesting, somewhere in the middle of the spectrum. It&#39;s federated, sort of. They&#39;re promising their protocol will be available to others. But it isn&#39;t yet. And it&#39;s a unique protocol, not tying in to ActivityPub, the established standard. Which means is still exists on its own, like Twitter, at least until the protocol is done and they manage to sell others on it.&lt;/p&gt;
&lt;p&gt;In my time there, I&#39;ve struggled to see a unique selling proposition that can keep it going. It has some nice features: the options for content filters, being able to subscribe to someone else&#39;s mute list which can shut down problem accounts faster, making your username a domain you own, some degree of customizing your feeds. But as I learned back in the Google+ days, features alone do not a social network make, especially once the established players start copying the best ideas.&lt;/p&gt;
&lt;p&gt;The unique selling proposition so far seems to be that it is not as much of a cesspool as Twitter, not as confusing to sign up as Mastodon, and not controlled by an evil megacorp like Threads. That comes from the exclusivity of being invite only at this point: most of the people who are there are more or less on the same page with what they want from this network.&lt;/p&gt;
&lt;p&gt;But the seams are showing with each time it fails to moderate well - they don&#39;t even have a trust and safety leadership structure - and as the user base steadily grows. As eventually happened with Facebook, exclusivity isn&#39;t much of a selling point when it will get more inclusive over time. Facebook survived because there wasn&#39;t much in the way of competition. But for Bluesky? There&#39;s plenty fighting for this space right now.&lt;/p&gt;
&lt;p&gt;And more to the point, most of the people I see there I don&#39;t think really want exclusivity forever. A lot are socially conscious &amp;quot;shitposters&amp;quot; and journalists and authors. I was for a while referring to the first group mostly as activists, but I&#39;ve realized that isn&#39;t quite right. They&#39;re more like we saw a lot on Twitter, people who compete for the most snarky response to whatever the story of the day is that we&#39;re all angry about, then move on to the next thing tomorrow. That&#39;s not so much activism, which is usually more focused on long-term efforts toward a specific cause.&lt;/p&gt;
&lt;p&gt;But in any case, wherever it falls in the activism work vs shitposting spectrum, it can only go so far in a closed bubble. Most of them are still on Twitter and/or on Threads as well for that reason. So how long do they want to spend also focusing efforts on Bluesky? Or do they keep it as their secondary place of rest, to recover from the more frontline work elsewhere?&lt;/p&gt;
&lt;p&gt;I see that fading out as the exclusivity fades and the lack of trust and safety becomes more obvious, and I&#39;m not sure they&#39;ll have any other selling point to replace it. Bluesky seems to think the selling point is their protocol, but it&#39;s not even done yet and most people don&#39;t care about federation. Those who do are already in the fediverse.&lt;/p&gt;
&lt;p&gt;Maybe I&#39;m wrong. Maybe they hire a big moderation team that sets the new gold standard for protecting marginalized people. That would certainly be a selling point. But they aren&#39;t doing that so far and that makes me think they don&#39;t have much of a future.&lt;/p&gt;
&lt;h2 id=&quot;the-open-fediverse-mastodon-and-calckey&quot;&gt;The Open Fediverse: Mastodon and Calckey&lt;/h2&gt;
&lt;p&gt;Mastodon is where I have mostly found my home (@&lt;a href=&quot;mailto:Ryan@mstdn.ca&quot;&gt;Ryan@mstdn.ca&lt;/a&gt;). It&#39;s got years of stability in its extensive features - some would argue too many features that make it harder to use. It&#39;s on the ActivityPub protocol so it connects with other fediverse projects, including eventually Threads. The complaints are mostly that it is hard to use, especially signing up and having to pick a server.&lt;/p&gt;
&lt;p&gt;Calckey is another in the fediverse that addresses some of the concerns many have with Mastodon, like full text search and quote posts.&lt;/p&gt;
&lt;p&gt;There are lots more that I won&#39;t get into: Pixelfed for photos (think Instagram), Bookwyrm for book reviews (think Goodreads), Lemmy or Kbin for forum-like conversations (Reddit)@. They can all talk to each other. That&#39;s a pretty promising future.&lt;/p&gt;
&lt;h2 id=&quot;predicting-the-future&quot;&gt;Predicting the Future&lt;/h2&gt;
&lt;p&gt;My guess of what happens is we end up like email. A few big corporate giants control most of the email: Google, Microsoft, etc. They offer the service for free in exchange for mining data and showing ads, or in some cases also with a subscription offer that doesn&#39;t show ads for a monthly fee (Microsoft 365 Home includes this). It&#39;s a quality service, with many professionals working on problems like spam prevention and security patching. That&#39;s likely to be Threads the way things are currently going.&lt;/p&gt;
&lt;p&gt;But it is possible to run your own email server that can send messages to and receive messages from the big ones or other small email servers. It&#39;s not easy. You&#39;ll have to meet some fairly high security standards and spam prevention. But you can. That&#39;s a lot of the smaller cases of people running their own Mastodon or other servers for a few dollars a month.&lt;/p&gt;
&lt;p&gt;Or you can pay for a professional version of email, like Microsoft 365 Business. There&#39;s no ad scrapings, they&#39;ll take care of most of the security and maintenance, and you just need to pay a few dollars a month and configure it to your liking. That&#39;s a great option if you can afford it. In this comparison, that might be some of the bigger fediverse instances. Most of them operate on a donation basis. You don&#39;t have to support them financially, but somebody does have to or it won&#39;t keep going.&lt;/p&gt;
&lt;p&gt;I suspect that&#39;s where we get with microblogging, and I&#39;ll consider that a huge win. Threads may be the equivalent of Gmail, that many have. Most people will still opt for giving all their data to a billionaire for the right to look at ads, in exchange for all the ease of use that a company like Meta or Google can provide. But you will have some choice other than that and being a hermit, an option that has been increasingly tempting for me over the last 10 years. Maybe you host your own ActivityPub service. Maybe you pay somebody else. Maybe they implement ads but without the data mining. Maybe you stay on somebody else&#39;s without ever giving back or seeing ads. But I am happy that at least in this future there would be options.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Composer: Options for a Submodule</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/drupal-subprojects/" />
    <updated>2023-07-09T19:12:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/drupal-subprojects/</id>
    <content type="html">&lt;p&gt;Suppose you want to tie in another private git package, such as something that is not listed on the Drupal directory - as part of your standard build process. Here are two approaches to do that:&lt;/p&gt;
&lt;h2 id=&quot;composer&quot;&gt;Composer&lt;/h2&gt;
&lt;p&gt;Drupal packages are managed with a composer file. Composer files can pull from many sources. Most commonly in the case of a Drupal project, that means pulling in modules and themes from the Drupal directory. But it also includes the ability to pull in projects as zip files or a git project hosted elsewhere, even a private one.&lt;/p&gt;
&lt;p&gt;Here&#39;s how:&lt;/p&gt;
&lt;p&gt;Create the module that you want to pull in and give it a composer.json file. Here&#39;s an example of that file:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ryan-robinson/demo-module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;drupal-module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Demo module&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;Drupal&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;module&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;GPL-2.0+&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;drupal/core&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^9.0 || ^10&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;platform&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;8.1&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add two things to the composer.json of your Drupal project:&lt;/p&gt;
&lt;p&gt;One, you need to define the source for where to get the project:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;repositories&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;vcs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;git@gitlab.com:ryan-robinson/demo-module.git&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;branch&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;main&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Second, you need to add it to the requirements list to pull in:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;ryan-robinson/demo-module&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dev-main&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the repository is private, you&#39;ll also need an auth.json file with your personal access token. Here&#39;s an example that would work for a GitLab project:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;gitlab-token&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;gitlab.com&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;token value&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;git-submodule&quot;&gt;Git Submodule&lt;/h2&gt;
&lt;p&gt;The other approach is to make it a git submodule.&lt;/p&gt;
&lt;p&gt;The advantage of the submodule approach is if you want to be able to continue to contribute to that. You can work on the parent project and the submodule at the same time, committing them both separately. Of course that only matters I&#39;d you have permission to do so.&lt;/p&gt;
&lt;p&gt;The context I&#39;ve found myself using this: when I&#39;m developing a custom Drupal module, I need a Docker devcontainer environment to work within for testing. That&#39;s one git repository. I also need a repository for the module itself, so that it will be ready to share with other Drupal projects (often using the composer technique above). This allows me to load the devcontainer, work on the module, and commit back to the module.&lt;/p&gt;
&lt;p&gt;This can be done by running the &lt;code&gt;git submodule add&lt;/code&gt; command, e.g.:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; submodule &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;URL to module&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This generates a .gitmodules file at the project root that looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[submodule &amp;quot;web/modules/custom/demo-module&amp;quot;]
	path = web/modules/custom/demo-module
	url = [URL to module]
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Accessibility: Level of Descriptiveness</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/descriptive-alt/" />
    <updated>2023-06-11T18:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/descriptive-alt/</id>
    <content type="html">&lt;p&gt;There&#39;s a tension in discussing accessibility for screen reader users that comes up sometimes. Most recently and perhaps most commonly is about ALT text, but it can also apply to other things, too. The main conflict is between:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should provide lots of detail in order to make sure a blind user has access to as much detail as a sighted user can. If you&#39;ve got a picture of a cute cat, you provide all the details about the cat: colour, size, facial expression, posture in the shot, anything that a sighted user would be able to see.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You should provide only the core details so that the screen reader user can get to the important point as fast as possible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It might be tempting, especially if you&#39;re in the first camp, to frame this as something like equality vs efficiency. But it&#39;s really two different definitions of equality: is it equality in detail or equality in function.&lt;/p&gt;
&lt;p&gt;Another way to think about it is in terms of cognitive processing time. When an image has more details, it doesn&#39;t really add to the time that a sighted user needs to process it all, unless it&#39;s a Where&#39;s Waldo kind of scenario that is intentionally hiding details in a way that is not available at a glance.&lt;/p&gt;
&lt;p&gt;On the other hand, adding more text description that needs to be spoken out loud is a linear function. If you have twice as much descriptive content, that&#39;s twice as much time to listen to it. Maybe you structure it in such a way that they can get the basics out of the way and then have the longer description in a different spot that they can easily skip over, giving them a choice, but that&#39;s not always going to be easy.&lt;/p&gt;
&lt;p&gt;So what&#39;s the answer? How much description should be added for screenreader users? Like many things in life, I think the answer is &amp;quot;it depends.&amp;quot;&lt;/p&gt;
&lt;p&gt;Here&#39;s one scenario: you&#39;re posting on Mastodon about how cute your cat is. In that kind of scenario, the point is the details. You probably should have a description of the cat and what makes it cute. If somebody is choosing to listen to the description of the image attached to a post about how cute your cat is, it&#39;s probably fair to assume that they want the details even if that takes a minute or two.&lt;/p&gt;
&lt;p&gt;A chart of data may vary on the context. In a quick casual social media post, it&#39;s probably better to get to the point. Imagine a chart that shows the increase of CO2 emissions over time, spanning several years with lots of data points, but the clear purpose of the chart is to show how badly things are increased. Somebody probably doesn&#39;t want to be scrolling social media and get bogged down in a 5 minute narration of data points naming every year plus exact numbers for that year that all blend together and are hard to interpret. That&#39;s probably not what they&#39;re there for.&lt;/p&gt;
&lt;p&gt;But what if it&#39;s the same chart but as an academic resource? If somebody is doing research, they might need to know the exact data points, so the ALT text (or corresponding text nearby) needs to be quite detailed.&lt;/p&gt;
&lt;p&gt;Side note: I once heard about efforts to aid screen reader users encountering a graph to get the point better than a list of numbers, that relies on sounds. If the data is going up, it makes a higher pitch sound. If the data is going down, it makes a lower pitch sound. It will be interesting to see if something like that ever becomes standardized enough to work.&lt;/p&gt;
&lt;p&gt;This exact same distinction can also apply to other context like menu items: do you want to add extensive aria-labels to force verbose experiences on blind users? The title attribute is a nice balance in that example. At least in Jaws, there is a user setting for whether to read out title text. This allows developers to empower the blind users to decide for themselves whether they want the verbose description or not. And it&#39;s always better to empower users to have control over their own experience whenever possible. Provide title attributes and if they want it, they&#39;ll have it; if they don&#39;t want it, it won&#39;t slow them down.&lt;/p&gt;
&lt;p&gt;In any case, the main point is that ALT text and accessibility in general is not always an obvious formula. Sometimes there are tensions to navigate. The most important part is that you are thinking about it, and when possible listening to the real experiences of users to steadily improve how to navigate those tensions.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: OpenAI Module</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/drupal-openai/" />
    <updated>2023-05-03T23:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/drupal-openai/</id>
    <content type="html">&lt;p&gt;AI, or more specifically large language models (LMMs) are all the rage these days, so it shouldn&#39;t come as too much of a surprise that there is now &lt;a href=&quot;https://www.drupal.org/project/openai&quot;&gt;a Drupal module that integrates OpenAI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is only an alpha release but includes several submodules to leverage OpenAI tools within a Drupal site in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate content for you in any content type&lt;/li&gt;
&lt;li&gt;Speech to text&lt;/li&gt;
&lt;li&gt;Interaction with the ChatGPT prompt endpoint&lt;/li&gt;
&lt;li&gt;A button in CKEditor to send a prompt to OpenAI and get text back&lt;/li&gt;
&lt;li&gt;Assistance in the content editing process, such as adjusting your tone and summarizing body text&lt;/li&gt;
&lt;li&gt;Analyzes logs to summarize likely problems&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven&#39;t given it a try yet, mainly because I do not have a paid OpenAI API key and I assume I cannot use this without one, but it definitely could be worthwhile in certain Drupal site contexts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Paragraphs Sidebar</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/" />
    <updated>2023-03-29T22:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/</id>
    <content type="html">&lt;p&gt;Suppose you want to be able to specify a contact person for most nodes of content on a site, which will then show up in the sidebar with a label and some information about the contact person. Each node could have zero contacts, could have one contact, or could have several contacts.&lt;/p&gt;
&lt;p&gt;I solved this using a combination of &lt;a href=&quot;https://www.drupal.org/project/paragraphs&quot;&gt;the Paragraph module&lt;/a&gt;, &lt;a href=&quot;https://www.drupal.org/project/profile&quot;&gt;the Profile module&lt;/a&gt;, content type fields, and views. A demo of this is available in &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-paragraphs-sidebar&quot;&gt;my GitHub&lt;/a&gt; that you can load up using &lt;a href=&quot;https://www.gitpod.io/&quot;&gt;GitPod&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;create-the-paragraph-and-its-fields&quot;&gt;Create the paragraph and its fields&lt;/h2&gt;
&lt;p&gt;First, create the paragraph and its corresponding fields. In my case, I wanted two fields: a label that will be displayed, and a user reference to connect to a staff user account.&lt;/p&gt;
&lt;p&gt;I created the paragraph type and called it “Contact.”&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TJcim0CzKs-727.avif 727w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TJcim0CzKs-727.webp 727w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TJcim0CzKs-727.png&quot; alt=&quot;&amp;quot;Creating a paragraph type called Contact&amp;quot;&quot; width=&quot;727&quot; height=&quot;648&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Next, add a field for the label, as a text select to choose from a few pre-defined options including &amp;quot;Primary Contact,&amp;quot; &amp;quot;Secondary Contact,&amp;quot; etc. Only allow one label per paragraph, which is different from where we&#39;ll later allow multiple paragraphs per node.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/mAA5zGTVb_-621.avif 621w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/mAA5zGTVb_-621.webp 621w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/mAA5zGTVb_-621.png&quot; alt=&quot;&amp;quot;Creating a field called Contact Label, as a Text (List) type&amp;quot;&quot; width=&quot;621&quot; height=&quot;461&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/CoFyU7o-OQ-1342.avif 1342w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/CoFyU7o-OQ-1342.webp 1342w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/CoFyU7o-OQ-1342.png&quot; alt=&quot;&amp;quot;Settings for the label field, including the valid options and to allow allow 1 value.&amp;quot;&quot; width=&quot;1342&quot; height=&quot;822&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Finally, add a field for the user reference. Set this up to show up as an autocomplete, filtering to only show those who are of the Staff role.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/oDyhdo1ZfI-626.avif 626w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/oDyhdo1ZfI-626.webp 626w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/oDyhdo1ZfI-626.png&quot; alt=&quot;&amp;quot;Creating a user entity reference field called Contact User&amp;quot;&quot; width=&quot;626&quot; height=&quot;448&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/-E7r_AEFLh-541.avif 541w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/-E7r_AEFLh-541.webp 541w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/-E7r_AEFLh-541.png&quot; alt=&quot;&amp;quot;The user entity reference settings, filtering to only show those of the role Staff&amp;quot;&quot; width=&quot;541&quot; height=&quot;647&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;assign-to-a-content-type&quot;&gt;Assign to a content type&lt;/h2&gt;
&lt;p&gt;Add a field on the content type that references this paragraph. The field type is going to be an entity reference revision.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/FykBDf9ljg-625.avif 625w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/FykBDf9ljg-625.webp 625w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/FykBDf9ljg-625.png&quot; alt=&quot;&amp;quot;Adding the paragraph reference to the Page content type&amp;quot;&quot; width=&quot;625&quot; height=&quot;464&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/epMDxEUtFq-821.avif 821w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/epMDxEUtFq-821.webp 821w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/epMDxEUtFq-821.png&quot; alt=&quot;&amp;quot;The settings for the entity field, filtering to be able to select paragraphs of type Contact&amp;quot;&quot; width=&quot;821&quot; height=&quot;548&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;In this case, since it&#39;s going to display it in the sidebar using a view, also remove it from the display for the content type. I won&#39;t get into details of designing the page on this post.&lt;/p&gt;
&lt;p&gt;This step can be repeated to add the field to multiple content types, so that you can have the consistent design on all of them.&lt;/p&gt;
&lt;h2 id=&quot;create-the-profile&quot;&gt;Create the profile&lt;/h2&gt;
&lt;p&gt;For the sake of this demo, I&#39;ll only add a couple of fields to the profile - a name, a phone number, and an email - and I won&#39;t do any of the design of the profile page, just creating the fields for the purpose of showing it in the sidebar of the content.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/kpHgCNHkGg-1142.avif 1142w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/kpHgCNHkGg-1142.webp 1142w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/kpHgCNHkGg-1142.png&quot; alt=&quot;&amp;quot;Created fields for the profile: name, phone, and email&amp;quot;&quot; width=&quot;1142&quot; height=&quot;442&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-sidebar-view&quot;&gt;Create sidebar view&lt;/h2&gt;
&lt;p&gt;That&#39;s all the underlying structure. We can now proceed to creating the view itself. This will be a view of content, because while it will be showing paragraphs, it will be showing those paragraphs based on the content being viewed. It will be a block, since we&#39;re going to want blocks that can be placed in theme block regions.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/XYd_IjZu7c-832.avif 832w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/XYd_IjZu7c-832.webp 832w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/XYd_IjZu7c-832.png&quot; alt=&quot;&amp;quot;Settings for creating the view. The essential component is the view settings showing Content.&amp;quot;&quot; width=&quot;832&quot; height=&quot;640&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Next, make a contextual filter so it will only show content related to the current content on display. This will be on the node ID of the page being viewed, so that only paragraphs related to the current node will come up as results. Create a filter for content ID and set the default to be &amp;quot;Content ID from URL.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/wAe670rJLW-1372.avif 1372w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/wAe670rJLW-1372.webp 1372w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/wAe670rJLW-1372.jpeg&quot; alt=&quot;&amp;quot;Settings for the contextual filter, the content ID set to default on the content ID in the URL.&amp;quot;&quot; width=&quot;1372&quot; height=&quot;800&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Now we need to create the link between the page being viewed and its contact paragraphs. This can be done with the relationships functionality of views. Under Relationships, click on Add, then select &amp;quot;Paragraph referenced from field_contact.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TGRbEJCYdg-1363.avif 1363w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TGRbEJCYdg-1363.webp 1363w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/TGRbEJCYdg-1363.jpeg&quot; alt=&quot;&amp;quot;Adding a relationship to paragraph referenced from field_contact.&amp;quot;&quot; width=&quot;1363&quot; height=&quot;800&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;We then need two more relationships:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From the contact field of the paragraph back to the user: &amp;quot;User referenced from field_contact_user.&amp;quot;&lt;/li&gt;
&lt;li&gt;From the user to the profile, which will have the majority of the fields we want to display: &amp;quot;Profile.&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last setting we&#39;ll change in the Advanced section is near the bottom: set &amp;quot;Hide block if the view output is empty&amp;quot; to Yes. We don&#39;t want it to show up at all if there isn&#39;t a contact for the current content.&lt;/p&gt;
&lt;p&gt;Now that we&#39;ve built the complexities of the query, we can return to the more common configuration in the left pane to determine what is shown. I set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display for the view to an unformatted list of fields.&lt;/li&gt;
&lt;li&gt;The fields are the contact name, the contact label, the phone number, and the email address, all from the associated profile. Each field is set to be hidden if there is no result, in case a profile is created with some information but not others, e.g. somebody offers their email but doesn&#39;t want to share their phone. You can also add more styling around how these get displayed (labels, links, etc).&lt;/li&gt;
&lt;li&gt;Filter on the paragraph type to be &amp;quot;Contact,&amp;quot; on the paragraph to be published, and for the user to be active. This helps avoid unexpected results when a user is later blocked, or somehow another paragraph type is associated to the content.&lt;/li&gt;
&lt;li&gt;Sort by the contact label and then by contact name, which will be more intuitive to users than sorting on something else like authored date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can go back to the settings on the Unformmated list to group results by the label, so that the label will show up as a header. If you want more precise control over what HTML tags are used for which elements, &lt;a href=&quot;https://www.drupal.org/project/semanticviews&quot;&gt;semantic views&lt;/a&gt; is another great module.&lt;/p&gt;
&lt;h2 id=&quot;place-block-view-in-sidebar&quot;&gt;Place block view in sidebar&lt;/h2&gt;
&lt;p&gt;Finally, add the block to show in that sidebar for all relevant content types. Of course this will depend on your theme having a sidebar region, but most have at least one.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/Gj2TF9gNNY-700.avif 700w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/Gj2TF9gNNY-700.webp 700w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/Gj2TF9gNNY-700.jpeg&quot; alt=&quot;&amp;quot;Adding a block to appear in the sidebar of the Page content type&amp;quot;&quot; width=&quot;700&quot; height=&quot;840&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;final-result&quot;&gt;Final result&lt;/h2&gt;
&lt;p&gt;Here&#39;s an example of what all of this looks like, at its most basic level without any extra CSS styles added:&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/fDirca0ur--1116.avif 1116w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/fDirca0ur--1116.webp 1116w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/paragraphs-sidebar/fDirca0ur--1116.jpeg&quot; alt=&quot;&amp;quot;Sidebar in place on a demo page, showing the Primary Contact label, name Ryan Robinson linked to the profile, email address, and phone number as a valid phone link.&amp;quot;&quot; width=&quot;1116&quot; height=&quot;381&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Recycle Bin</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/" />
    <updated>2023-03-01T23:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/</id>
    <content type="html">&lt;p&gt;Drupal does not come with any kind of recycle bin / trash system out of the box, unlike the other technologies I have worked with most (WordPress, SharePoint). There were a few modules available at the time I looked into this (admittedly over a year ago now), but they were all rough, either old or barely developed. None were reliable enough to count on. In this post I’ll describe a simple halfway approach that did not require any extra code.&lt;/p&gt;
&lt;p&gt;There is a demo of this &lt;a href=&quot;https://github.com/ryan-l-robinson/Drupal-recycle-bin&quot;&gt;available on my GitHub&lt;/a&gt;, with a GitPod container to test it out.&lt;/p&gt;
&lt;h2 id=&quot;permissions-only-admins-can-delete&quot;&gt;Permissions: Only Admins Can Delete&lt;/h2&gt;
&lt;p&gt;Check permissions for each content type to confirm that only admins can delete anything. Everybody else will only be able to use the flag field we&#39;re about to create to request deletion, not directly delete anything.&lt;/p&gt;
&lt;p&gt;Go to the node permissions screen at /admin/people/permissions. Look for the permissions of each content type that are &amp;quot;Delete own content&amp;quot; or &amp;quot;Delete any content.&amp;quot; For the purposes of this demo, only the admin users should have these permissions. Your permission structure may be more complicated.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/R1lkMdjnoj-1779.avif 1779w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/R1lkMdjnoj-1779.webp 1779w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/R1lkMdjnoj-1779.png&quot; alt=&quot;&amp;quot;Screenshot of the permissions screen, with all permissions given to admins and no permissions given to others. The key for this example is that only admins have the Delete permissions&amp;quot;&quot; width=&quot;1779&quot; height=&quot;641&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h2 id=&quot;field-flag-for-delete&quot;&gt;Field: Flag for Delete&lt;/h2&gt;
&lt;p&gt;Proceed to the Manage Fields page of the first content type that you want to have this feature on. For example, if my content type is recyclable_content_type, I would go to /admin/structure/types/manage/recyclable_content_type_/fields. Create a boolean field.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/lpoXQPTaox-712.avif 712w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/lpoXQPTaox-712.webp 712w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/lpoXQPTaox-712.png&quot; alt=&quot;&amp;quot;Screenshot of the form to create a new field. A new field of type Boolean is being created with the label of Flag for Delete.&amp;quot;&quot; width=&quot;712&quot; height=&quot;452&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Limit the field to only allow one value at a time.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/nXgzbGIm16-1333.avif 1333w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/nXgzbGIm16-1333.webp 1333w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/nXgzbGIm16-1333.png&quot; alt=&quot;&amp;quot;Screenshot of the form for setting storage on the field. This field allows only 1 value.&amp;quot;&quot; width=&quot;1333&quot; height=&quot;403&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The final screen for creating the field allows you to add more options that are mostly about helping your content creators understand what this is doing. I&#39;ll add some help text as well as change the On and Off labels to be more clear of what they mean.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/SKrM8PlZtV-1424.avif 1424w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/SKrM8PlZtV-1424.webp 1424w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/SKrM8PlZtV-1424.png&quot; alt=&quot;&amp;quot;Flag for Delete field settings. This includes setting the help text to explain to the users what it does, changing the On label to Delete and the Off label to Keep.&amp;quot;&quot; width=&quot;1424&quot; height=&quot;840&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;You now have the field on this content type ready to use. You may also want to go into &amp;quot;Manage form display&amp;quot; and &amp;quot;Manage display&amp;quot; to customize how this appears for your users. In my case, on the form I put it inside a Details sidebar paired with the published option. I then used a module like &lt;a href=&quot;https://www.drupal.org/project/condition_field&quot;&gt;condition_field&lt;/a&gt; to only show that option when the node is already marked as unpublished, so that somebody cannot accidentally mark something for deletion without unpublishing it first. Finally, on the display I hid it entirely because the public should never see that field - it is only for back-end processes.&lt;/p&gt;
&lt;p&gt;If you have more than one content type you want to deploy this feature on, go to the next content type and add a field again. This time, select from the dropdown of existing fields instead of creating a new one. The final steps for help text, form display, and public display remain the same.&lt;/p&gt;
&lt;h2 id=&quot;view-ready-for-deletion&quot;&gt;View: Ready for Deletion&lt;/h2&gt;
&lt;p&gt;Finally, you&#39;re going to want a way that admins can review the nodes flagged for delete and go ahead with permanently deleting after the set amount of time. This is a great problem to be solved by views.&lt;/p&gt;
&lt;p&gt;You can either create a new view or add a new display to an existing view. I&#39;m going to start by building on top of the default admin view named &amp;quot;Content&amp;quot; since I want something that is basically the same but with extra filters. This is at /admin/structure/views/view/content. Either add a new page from the Add button, or duplicate the existing page with the Duplicate Page option in the dropdown near the right side of the screen. If there was only one display which is also the default, the result would be essentially the same.&lt;/p&gt;
&lt;p&gt;I put it in the menu under Content of the Admin menu, and with the path /admin/content/delete.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/cLcTDbyGq4-540.avif 540w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/cLcTDbyGq4-540.webp 540w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/cLcTDbyGq4-540.png&quot; alt=&quot;&amp;quot;First settings show the path set to /admin/content/delete. Second setting shows the Menu link as Normal and labelled Ready for Deletion.&amp;quot;&quot; width=&quot;540&quot; height=&quot;181&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;flag-for-delete-filter&quot;&gt;Flag for Delete filter&lt;/h3&gt;
&lt;p&gt;Add a filter to the view, overriding this page only, on the Flag for Delete field.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1FdVVB4wrE-1386.avif 1386w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1FdVVB4wrE-1386.webp 1386w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1FdVVB4wrE-1386.png&quot; alt=&quot;&amp;quot;Screenshot of the views admin to add a filter. A filter on the field Flag for Delete is being added.&amp;quot;&quot; width=&quot;1386&quot; height=&quot;445&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.avif 1396w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.webp 1396w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.png&quot; alt=&quot;&amp;quot;Screenshot of the views admin, setting the value of Flag for Delete is equal to True.&amp;quot;&quot; width=&quot;1396&quot; height=&quot;751&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;published-filter&quot;&gt;Published filter&lt;/h3&gt;
&lt;p&gt;The view I duplicated from already had a Published filter, but it was exposed to allow users to select. So I&#39;m going to edit that one to only show unpublished content. I only want unpublished content, because if somebody has flagged for delete but it is still published, that suggests they might have made a mistake.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/j5VYBHfOLd-1383.avif 1383w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/j5VYBHfOLd-1383.webp 1383w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/j5VYBHfOLd-1383.png&quot; alt=&quot;&amp;quot;Configuration for the Published filter on the view, set as is equal to Published status of No.&amp;quot;&quot; width=&quot;1383&quot; height=&quot;587&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;h3 id=&quot;date-updated-filter&quot;&gt;Date Updated filter&lt;/h3&gt;
&lt;p&gt;Finally, in my case, I also wanted to filter on the date updated, so that only content that hasn&#39;t been updated within the past 30 days would show up. Anything less than that suggests that the content creator may be having second thoughts and isn&#39;t really ready to delete it yet. In your context, you may not want this delay at all, or you may want a much longer delay.&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/Q54VDgmhzE-1385.avif 1385w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/Q54VDgmhzE-1385.webp 1385w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/Q54VDgmhzE-1385.png&quot; alt=&quot;&amp;quot;Screenshot of adding the Updated date filter to the view&amp;quot;&quot; width=&quot;1385&quot; height=&quot;437&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.avif 1396w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.webp 1396w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://tech.ryanrobinson.ca/posts/2023/drupal-recycle-bin/1DwkRy6sST-1396.png&quot; alt=&quot;&amp;quot;Screenshot of settings for the Updated filter, setting the operator to Is Less Than and the value as an offset of -30 days&amp;quot;&quot; width=&quot;1396&quot; height=&quot;751&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;Now admins can periodically check and bulk delete any content that is flagged for delete, unpublished, and last updated more than 30 days ago. You can also do any of the usual views changes from here as you desire, including adding views, changing text to show when there are no results, adding CSS classes, etc.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>On Algorithms and Section 230</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/algorithms/" />
    <updated>2023-02-26T13:18:09Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/algorithms/</id>
    <content type="html">&lt;p&gt;For those paying attention, there are a couple big cases in front of the US Supreme Court that could shape the Internet as we know it. I&#39;m Canadian, but the (English) Internet is largely determined by what is allowed in the U.S., so yes, I&#39;m still talking about it.&lt;/p&gt;
&lt;h2 id=&quot;context&quot;&gt;Context&lt;/h2&gt;
&lt;p&gt;Essentially, the plaintiffs want to hold Google legally responsible that its recommendation algorithm sometimes promotes ISIS recruitment videos. The concept could apply to other harmful content as well.&lt;/p&gt;
&lt;p&gt;There is no question that Google is protected in the harmful videos existing on YouTube. It would be impossible for the modern Internet to exist if every piece of content had to be moderated and considered by a team of lawyers before it could go online. That is clearly covered by section 230.&lt;/p&gt;
&lt;p&gt;It&#39;s the recommendation algorithm that complicates things, because that gives an impression of an endorsement from Google. Google claims they are protected under section 230, which says they are not responsible for content posted by users and the algorithm&#39;s results is effecctively user-generated. The plaintiffs say that Google is not protected because the algorithm for recommendations means Google is acting as a publisher.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nebula.tv/videos/legaleagle-this-supreme-court-case-will-destroy-the-internet&quot;&gt;Legal Eagle provides a good breakdown on Nebula&lt;/a&gt; or (appropriately) &lt;a href=&quot;https://www.youtube.com/watch?v=hzNo5lZCq5M&quot;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hzNo5lZCq5M&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;He does a great job explaining why it would be terrible to remove section 230 entirely. The Internet would divide into either no moderation or extremely strict and expensive moderation. So let&#39;s rule out that extreme immediately.&lt;/p&gt;
&lt;p&gt;But here&#39;s where it gets really interesting to me. If not the status quo, and not the opposite extreme, what else is possible in between?&lt;/p&gt;
&lt;p&gt;Another distinction he mentions that SCOTUS may try to make is that between recommendation engines and search results, allowing the latter but making the platform provider responsible for the former. He says this would be less of a disaster, but there isn&#39;t that big of a philosophical difference between the two, so it might be hard to hold up.&lt;/p&gt;
&lt;h2 id=&quot;personalization&quot;&gt;Personalization&lt;/h2&gt;
&lt;p&gt;Another distinction even more interesting to me, that he doesn&#39;t mention, is &lt;em&gt;personalized&lt;/em&gt; recommendations and search result algorithms.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-the-business-model&quot;&gt;The Impact on the Business Model&lt;/h3&gt;
&lt;p&gt;This might seem like a smaller change but it hits at the heart of big tech.&lt;/p&gt;
&lt;p&gt;The basic business of most big tech is this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They make most of their money by selling ads&lt;/li&gt;
&lt;li&gt;Ads are more effective if they are personalized&lt;/li&gt;
&lt;li&gt;In order to personalize, they need you to give them lots of data about yourself&lt;/li&gt;
&lt;li&gt;The best way for them to get you to give up lots of data is for them to keep feeding you things that you want to engage with&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the recommendations and/or search results were not personalized, you probably spend less time on their service and give them less data. They can still sell ads, but they won&#39;t be as effective and they make less money. The big established platforms could still make a profit, I&#39;m sure, but it would be a radical shake up of the entire business model.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-privacy&quot;&gt;The Impact on Privacy&lt;/h3&gt;
&lt;p&gt;In terms of privacy, this would be good for users. There would be a lot less incentive for big tech to know everything about us, which could result in unintended consequences like security breaches.&lt;/p&gt;
&lt;h3 id=&quot;the-impact-on-ai-research&quot;&gt;The Impact on AI Research&lt;/h3&gt;
&lt;p&gt;In terms of AI, it would significantly slow down development. AI needs lots of data, which big tech already has. If we stop giving as much data, there&#39;s a lot less training material. Maybe at this point it wouldn&#39;t matter much, since they&#39;re already collecting all the data.&lt;/p&gt;
&lt;h2 id=&quot;hate-and-progress-movements&quot;&gt;Hate and Progress Movements&lt;/h2&gt;
&lt;p&gt;What does it mean in terms of social consequences, which is an important question not only because that&#39;s related to the cause of the lawsuit in the first place, but also because isn&#39;t it really always the big question?&lt;/p&gt;
&lt;p&gt;If recommendations and search results were not personalized, they could still be weighted in other ways, like prioritizing content that already has lots of interaction or newer content. It just wouldn&#39;t be able to prioritize and give different results based on what the algorithm has determined that you individually will engage with.&lt;/p&gt;
&lt;p&gt;That means that everyone sees the same results from the same input. We would lose a lot of the &amp;quot;echo chambers&amp;quot; where you only see things that you want to see, at least not without consciously entering that echo chamber (searching a hashtag, deciding who to follow, etc.)&lt;/p&gt;
&lt;p&gt;There wouldn&#39;t be an algorithmic push to extremes. This applies to all extremes, not just social/political ones. We&#39;d see a lot of content that is broadly palatable to almost everyone. Think of what network TV was like 20 years ago, when each household had one TV so if you wanted viewership you wanted a show that the entire family could watch together. If you watch some of that content now, it will mostly seem boring, because you&#39;re used to media that is much more niche targeted to your interests.&lt;/p&gt;
&lt;p&gt;The core argument in favour of this kind of approach is that algorithms stop promoting hatred. It would break the very successful business model of right wing grifters who make lots of money by generating lots of engagement spewing hatred and fear. That certainly sounds good.&lt;/p&gt;
&lt;p&gt;But that&#39;s not the only group that would be impacted. It would also break the reach of anybody else who doesn&#39;t already have a critical mass of followers, like activists. You wouldn&#39;t hear from those profiting from spreading transphobic lies, but you also wouldn&#39;t hear a lot of important work from trans people telling their stories. You&#39;d see less of the crafted manipulation of authoritarians but you&#39;d also see a lot less of those fighting back. Algorithmic social media is often step one in organizing resistance and a big part of that is because in order to keep you there, they give you something that&#39;s a little more of what they think you want. So if you express a little interest in anti-racism work, it&#39;s going to help you find more anti-racism, which is great.&lt;/p&gt;
&lt;p&gt;This is the area that is the most complicated. Do you consider that a fair trade, even if it were practically possible? And it is also ideological, not only practical: is that a level of regulation that you want your governments to be able to exert - not stifling free speech, but stifling reach?&lt;/p&gt;
&lt;h3 id=&quot;smaller-sites&quot;&gt;Smaller Sites&lt;/h3&gt;
&lt;p&gt;These kinds of proposals will have 95% of the conversation focused on big tech, but if the rule is established for YouTube, it would apply for everybody else, too.&lt;/p&gt;
&lt;p&gt;My day job is for a university library, primarily the website. There is currently no recommendation interface. There are search results, which are not at all personalized, but I&#39;ve had the serious thought that maybe they should be in a very minimal way. There&#39;s a lot of content on the site and a lot of it using similar keywords around databases and resources and citations, so if you use keywords like that, you get a bunch of different pages spanning all of the subjects, likely burying the results most relevant to you. Even one piece of personalized information would really improve search results: what subjects are you studying? Wouldn&#39;t the search be better if we knew that and prioritized responses accordingly, giving computer science results first if you&#39;re a computer science student?&lt;/p&gt;
&lt;p&gt;That&#39;s a small example. It doesn&#39;t require big machine learning algorithms monitoring your every move on the Internet, but it does still require personalization. Maybe that&#39;s the distinction instead: allow personalized results based on information explicitly given by the user, but don&#39;t allow engagement data mining. But who defines what is engagement data mining and what is essential information to provide the service, or engagement data mining for telemetry, for the developers to know what improvements they need to maks? My example may have a clearer line, but that certainly won&#39;t always be the case.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There are a lot of complicated factors here and I&#39;m thankful for channels like Legal Eagle that are helping to unpack the potential consequences. Let&#39;s hope SCOTUS thinks this through carefully and rules in the best interests of a healthy role for the Internet in society.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Drupal: Include Default View in Module</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/include-default-view-custom-module/" />
    <updated>2023-02-23T22:46:00Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/include-default-view-custom-module/</id>
    <content type="html">&lt;p&gt;You may be working on a Drupal module and want to include a default view.&lt;/p&gt;
&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;
&lt;p&gt;This is actually quite simple: put the configuration file in the config/install folder within the module, with the proper configuration name, and it will install.&lt;/p&gt;
&lt;p&gt;This would be the full configuration file, the same as you would generate using the configuration sync tools.
You can write this file from scratch, especially if they&#39;re hidden options. If it is something that has a user interface, you can do what I tend to do: determine all your preferred settings and test it out within the interface, then export the configuration from either the UI (/admin/config/development/configuration/single/export) or drush (&lt;code&gt;drush config-export&lt;/code&gt; but that does all configuration, not only the specific one you want).&lt;/p&gt;
&lt;h2 id=&quot;uninstall&quot;&gt;Uninstall&lt;/h2&gt;
&lt;p&gt;What about uninstalling the configuration you&#39;ve installed with the module? This will depend on the context of your module, but you may want to also uninstall this configuration when the module is uninstalled. The configuration might no longer make sense without the module, or you might create conflicts if you installed it once, uninstalled the module but left the configuration, then tried to install it again.&lt;/p&gt;
&lt;p&gt;To do that, add a few lines like this to the uninstall hook of the .module file, for example with a config file named webform.webform.event_registration:&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Implements hook_uninstall
 * */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-definition function&quot;&gt;module_name_uninstall&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;configFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEditable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;webform.webform.event_registration&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name class-name-fully-qualified static-context&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&#92;&lt;/span&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;configFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEditable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string single-quoted-string&quot;&gt;&#39;webform.webform.event_registration&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Mastodon Apps on Android</title>
    <link href="https://tech.ryanrobinson.ca/posts/2023/mastodon-apps-android/" />
    <updated>2023-02-21T13:18:09Z</updated>
    <id>https://tech.ryanrobinson.ca/posts/2023/mastodon-apps-android/</id>
    <content type="html">&lt;p&gt;I&#39;ve been enjoying my time on Mastodon since the recent migration from Twitter. Of course, I&#39;m far from the only one to make this migration, and that includes a lot of developers, so we&#39;re starting to see a lot of better apps for Mastodon and the wider fediverse popping up. That has led me to an experience that has been very rare since about 2012: testing out and researching a variety of independent apps to meet a need. For years I&#39;ve mostly just used whatever the official app is for whatever service (including Twitter), with really the only recent exception being when &lt;a href=&quot;https://tech.ryanrobinson.ca/posts/2021/android-email-apps/&quot;&gt;I spent some time testing out alternative email apps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before writing this post, I put the question out on my Mastodon to see what factors others have considered in picking their preferred Android app. I&#39;ll incorporate a couple of those answers here, but first, one shared &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1De5KRwqMIdwEryfoeBLARgxF7QgKkeOQBCilKuIdAXE/edit?usp=drivesdk&quot;&gt;a very helpful spreadsheet breaking down all the options&lt;/a&gt; (not only Android). This is great if you need a high level overview of features available.&lt;/p&gt;
&lt;p&gt;This post will try to narrow down some of what matters most to me and to others when I put the question out for feedback.&lt;/p&gt;
&lt;h2 id=&quot;mastodon-official-app&quot;&gt;Mastodon (official app)&lt;/h2&gt;
&lt;p&gt;As I&#39;m sure with most people, I first tried the official app simply called Mastodon. This was the time of the great migration and a significant portion of posts I saw were advice about Mastodon, including a lot of posts saying not to use the official app. But it&#39;s not as bad as that makes it sound.&lt;/p&gt;
&lt;p&gt;It has Trending topics. It has home and local feeds. It&#39;s a fairly clean and friendly design.&lt;/p&gt;
&lt;p&gt;But yes, as many point out, it is missing several other features that you might want. Check the spreadsheet linked above for the full list, but here are a few that that matter to me:&lt;/p&gt;
&lt;p&gt;You can&#39;t read threads in continuity, which makes it prone to reading posts without recognizing there&#39;s context.&lt;/p&gt;
&lt;p&gt;There&#39;s no federated timeline.&lt;/p&gt;
&lt;p&gt;You can&#39;t manage lists at all.&lt;/p&gt;
&lt;p&gt;You can&#39;t see ALT text, which does matter even for those of us who are sighted because descriptions can still help us identify things, and it might help us identify that maybe we don&#39;t want to boost a post that is missing ALT text.&lt;/p&gt;
&lt;p&gt;It doesn&#39;t support unlisted posts, or scheduled posts, or the delete and redraft option, or simultaneous posting of a thread, or multiple choice selection polls.&lt;/p&gt;
&lt;p&gt;It&#39;s fair to say that none of those are core features, but there&#39;s enough of them that there&#39;s probably at least one you&#39;d be disappointed to be missing.&lt;/p&gt;
&lt;h2 id=&quot;tusky&quot;&gt;Tusky&lt;/h2&gt;
&lt;p&gt;When I was seeing posts about not using the official Mastodon app, it was usually tied with the recommendation to use Tusky instead (sometimes Fedilab). I tried that and kept it as my main app for a couple of months.&lt;/p&gt;
&lt;p&gt;It does a few things very well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very clean design that feels at home on Android, especially with the truly black theme and options for the main navigation to be either at the top or bottom&lt;/li&gt;
&lt;li&gt;A good array of options including being able to do most of the things that the official Mastodon app cannot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My question on Mastodon also got this negative response about some of Tusky&#39;s design choices:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve been a mobile developer for 15 years (mostly android) and used Tusky before I got my iPhone. It wasn’t my favorite tbh. my gripes with Tusky are all around data and state handling.
For instance the UI has very few “in progress” states, so for instance boosting a toot can  momentarily show the button in the wrong state if the request is slow.
Also the caching for viewed toots is very rudimentary, so lots of toots (in conversations esp.) are needlessly reloaded while I stare at a blank screen.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://tech.lgbt/@em_ad/109855207946318853&quot;&gt;https://tech.lgbt/@em_ad/109855207946318853&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;fedilab&quot;&gt;Fedilab&lt;/h2&gt;
&lt;p&gt;I then tried Fedilab, the next I saw recommended a lot. It has a small one time cost for the app, but if you&#39;re already settled on using Mastodon, it will probably be worth it to you to try it out.&lt;/p&gt;
&lt;h3 id=&quot;positives&quot;&gt;Positives&lt;/h3&gt;
&lt;p&gt;As the spreadsheet backs up, it is the most featured app by a significant margin. I&#39;ll highlight a couple big selling points that the others don&#39;t have:&lt;/p&gt;
&lt;p&gt;It allows following other instances, which is a great way to monitor niche topic communities even if you&#39;re not in them. For example, there is an instance for Drupal developers at drupal.community. I don&#39;t really want that to be my primary home, since Drupal is a relatively small portion of what I post. But I do want to easily keep an eye on conversations happening there since they will have a high rate of being relevant to me.&lt;/p&gt;
&lt;p&gt;It allows following Twitter accounts via Nitter, although there are some drawbacks to how it is implemented. You can&#39;t edit the list of who you are following easily. There&#39;s no follow/unfollow buttons. There isn&#39;t even a way to view the list of everyone you currently follow. So you need to maintain a list somewhere else, in the right format (separated by a space, not a new line) so that you can copy and paste it in each time you want to add or delete one. It also may have a limit on how many total it can follow? I&#39;m not sure about that, but I found that when I tried to add more, it broke, with a generic error that didn&#39;t explain anything. And finally, a lot of the time the links it shows for a quote tweet simply don&#39;t work. I often try clicking the link several times in a row to see what is being quoted.&lt;/p&gt;
&lt;p&gt;It allows creating simultaneous posts in a thread, which none of the others do. I always appreciate this feature as I don&#39;t like getting caught having written up half a thread. This is even more true on Mastodon than on Twitter because it is best practice to keep all posts in a thread after the first as unlisted. But when there are long gaps between the start and end of the thread, I might end up with nobody even seeing that you have added more to it. Being able to dump the whole thread at once optimizes that best practice.&lt;/p&gt;
&lt;p&gt;It is one of the few apps that is built for all Fediverse services, not only Mastodon. That means if I get a Pixelfed account some day, I could do it from the same app.&lt;/p&gt;
&lt;p&gt;A Mastodon user highlighted another feature that isn&#39;t a big deal to me but might be to you:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I read the posts from oldest to newest. At the moment Fedilab seems to work best for this reading order, as it can continuously update the timeline so there are no breaks.
Tusky is second best, you can set the &amp;quot;load more&amp;quot; button to fill the timeline above the break, not below.
Still no app seems to allow reverse order timeline (oldest posts first), which was a deal breaker for me when selecting my Twitter app.&lt;/p&gt;
&lt;p&gt;Source: &lt;a href=&quot;https://mastodonsweden.se/@kallekn/109856154392108362&quot;&gt;https://mastodonsweden.se/@kallekn/109856154392108362&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;negatives&quot;&gt;Negatives&lt;/h3&gt;
&lt;p&gt;Most of my negatives have to do with the user interface and I&#39;ll focus on two:&lt;/p&gt;
&lt;p&gt;I don&#39;t like the pill button design. It feels out of place on Android. It feels dated, like a few years ago when there was a lot less consistency in app design on Android, while now most comply with the recommended design language.&lt;/p&gt;
&lt;p&gt;I don&#39;t like the fragmented placement of timelines. In the bottom toolbar you can have the home, local, federated, notifications. That&#39;s great. Then in the top go any other instances you follow, lists, and Nitter, in this weird ticker style interface. Then in the sidebar under the profile photo mostly makes sense but also has Trending in there. I&#39;d love to have these consolidated to one navigation area, in the bottom, where I can pick the four that are highest priority to stay with easy access, then the rest in an easy to access overflow menu. There is an option to combine the top and bottom, but only to put them all in that weird top ticker style, not in the bottom as I would want. And there&#39;s no option to add Trending there.&lt;/p&gt;
&lt;h2 id=&quot;megalodon&quot;&gt;Megalodon&lt;/h2&gt;
&lt;p&gt;This is the newest discovery for me. It is not heavily featured - a little more than the official Mastodon app, less than the others - but it looks fantastic, probably my favourite design of the bunch.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;For now, I&#39;m sticking with Fedilab. I really like some of those features it does better than the rest, enough that I&#39;m willing to sacrifice some annoyance at the design style. But I am going to keep the others around and check in on them occasionally. It&#39;s early enough in the life of most of these that they may catch up in the features while maintaining a nicer design.&lt;/p&gt;
</content>
  </entry>
</feed>